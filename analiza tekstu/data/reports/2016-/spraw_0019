przedmiot TAS temat B nr_indeksu 396377 liczba_pkt 4 

\n\n-----\ ZADANIE\ 10\ --------\n10.1\ Wyj¶cie\ na\ serwerze\ pojawia\ siê\ w\ sposób\ nastêpuj±cy:\n\n----\nsss:\ zaczynam\ tworzyc\ obiekty\ ...\nsss:\ OdleglaKlasa()\;\ ok\nsss:\ OdleglaKlasa(String)\;\ ok\nsss:\ obiekty\ utworzone\ !!!\nsss:\ powolnaMetoda()\;\ i=1\nsss:\ powolnaMetoda()\;\ i=2\nsss:\ powolnaMetoda()\;\ i=3\nsss:\ powolnaMetoda()\;\ i=4\nsss:\ powolnaMetoda()\;\ i=5\nsss:\ powolnaMetoda()\;\ i=6\nsss:\ powolnaMetoda()\;\ i=7\nsss:\ powolnaMetoda()\;\ i=1\nsss:\ powolnaMetoda()\;\ i=8\nsss:\ powolnaMetoda()\;\ i=2\nsss:\ powolnaMetoda()\;\ i=9\nsss:\ powolnaMetoda()\;\ i=3\nsss:\ powolnaMetoda()\;\ i=10\nsss:\ powolnaMetoda()\;\ i=4\nThread\[RMI\ TCP\ Connection(2)-127.0.0.1,5,RMI\ Runtime\]\nsss:\ powolnaMetoda()\;\ i=5\nsss:\ powolnaMetoda()\;\ i=6\nsss:\ powolnaMetoda()\;\ koniec\ dzialania\ !\nsss:\ powolnaMetoda()\;\ i=1\nsss:\ powolnaMetoda()\;\ i=7\nsss:\ powolnaMetoda()\;\ i=2\nsss:\ powolnaMetoda()\;\ i=8\nsss:\ powolnaMetoda()\;\ i=3\nsss:\ powolnaMetoda()\;\ i=9\nsss:\ powolnaMetoda()\;\ i=4\nsss:\ powolnaMetoda()\;\ i=10\nsss:\ powolnaMetoda()\;\ i=5\nThread\[RMI\ TCP\ Connection(3)-127.0.0.1,5,RMI\ Runtime\]\nsss:\ powolnaMetoda()\;\ i=6\nsss:\ powolnaMetoda()\;\ i=7\nsss:\ powolnaMetoda()\;\ koniec\ dzialania\ !\nsss:\ powolnaMetoda()\;\ i=1\nsss:\ powolnaMetoda()\;\ i=8\nsss:\ powolnaMetoda()\;\ i=2\nsss:\ powolnaMetoda()\;\ i=9\nsss:\ powolnaMetoda()\;\ i=3\nsss:\ powolnaMetoda()\;\ i=10\nsss:\ powolnaMetoda()\;\ i=4\nThread\[RMI\ TCP\ Connection(2)-127.0.0.1,5,RMI\ Runtime\]\nsss:\ powolnaMetoda()\;\ i=5\nsss:\ powolnaMetoda()\;\ i=6\nsss:\ powolnaMetoda()\;\ koniec\ dzialania\ !\nsss:\ powolnaMetoda()\;\ i=1\nsss:\ powolnaMetoda()\;\ i=7\nsss:\ powolnaMetoda()\;\ i=2\nsss:\ powolnaMetoda()\;\ i=8\nsss:\ powolnaMetoda()\;\ i=3\nsss:\ powolnaMetoda()\;\ i=9\nsss:\ powolnaMetoda()\;\ i=4\nsss:\ powolnaMetoda()\;\ i=10\nsss:\ powolnaMetoda()\;\ i=5\nThread\[RMI\ TCP\ Connection(3)-127.0.0.1,5,RMI\ Runtime\]\nsss:\ powolnaMetoda()\;\ i=6\nsss:\ powolnaMetoda()\;\ i=7\nsss:\ powolnaMetoda()\;\ koniec\ dzialania\ !\nsss:\ powolnaMetoda()\;\ i=1\nsss:\ powolnaMetoda()\;\ i=8\nsss:\ powolnaMetoda()\;\ i=2\nsss:\ powolnaMetoda()\;\ i=9\nsss:\ powolnaMetoda()\;\ i=3\nsss:\ powolnaMetoda()\;\ i=10\nsss:\ powolnaMetoda()\;\ i=4\nThread\[RMI\ TCP\ Connection(2)-127.0.0.1,5,RMI\ Runtime\]\nsss:\ powolnaMetoda()\;\ i=5\nsss:\ powolnaMetoda()\;\ i=6\nsss:\ powolnaMetoda()\;\ koniec\ dzialania\ !\nsss:\ powolnaMetoda()\;\ i=7\nsss:\ powolnaMetoda()\;\ i=8\nsss:\ powolnaMetoda()\;\ i=9\nsss:\ powolnaMetoda()\;\ i=10\nThread\[RMI\ TCP\ Connection(3)-127.0.0.1,5,RMI\ Runtime\]\nsss:\ powolnaMetoda()\;\ koniec\ dzialania\ !\n\n------\n\nW\ serwerze\ w\ metodzie\ powolnaMetoda()\ wystarczy\ dopisaæ:\n---\n\ \ \ \ \ \ int\ i=0\;\n\ \ \ \ \ \ while(i\ <\ 10)\ \{\n\t\ \ \n\t\ \ i++\;\n\t\ \ System.out.println(\"sss:\ powolnaMetoda()\;\ i=\"+i)\;\n\t\ \ try\ \{Thread.sleep(100)\;\}catch(Exception\ e)\{\}\;\n\ \ \ \ \ \ \}\n\ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println(Thread.currentThread())\;\n---\nco\ wy¶wietla\ nam\ IP\ po³±czenia\ i\ numer\ po³±czenia\ (jak\ widaæ\ powy¿ej\ s±\ one\ ró¿ne\ przy\ dwóch\ klientach),\ oraz\ widaæ\ te¿\ przeplatanie\ siê\ w±tków.\n\n10.2\nGdy\ obiekt\ jest\ eksportowany,\ wszystko\ dzia³a\ poprawnie\ (procedura\ jest\ wykonywana\ po\ stronie\ serwera):\nsss:\ powolnaMetoda()\;\ i=1\nsss:\ powolnaMetoda()\;\ i=2\nsss:\ powolnaMetoda()\;\ i=3\nsss:\ powolnaMetoda()\;\ i=4\nsss:\ powolnaMetoda()\;\ i=5\nsss:\ powolnaMetoda()\;\ i=6\nsss:\ powolnaMetoda()\;\ i=7\nsss:\ powolnaMetoda()\;\ i=8\nsss:\ powolnaMetoda()\;\ i=9\nsss:\ powolnaMetoda()\;\ i=10\nThread\[RMI\ TCP\ Connection(4)-127.0.0.1,5,RMI\ Runtime\]\nsss:\ powolnaMetoda()\;\ koniec\ dzialania\ !\n\n\nGdy\ obiekt\ nie\ jest\ eksportowany,\ wynik\ dzia³ania\ jest\ taki:\n\nkkk:\ oo.powolnaMetoda()=0\nkkk:\ blad\ !!!\ error\ unmarshalling\ return\;\ nested\ exception\ is:\ \n\tjava.lang.ClassNotFoundException:\ OdleglaKlasa\ (no\ security\ manager:\ RMI\ class\ loader\ disabled)\n(oo2\ nie\ jest\ eksportowany)\n\nCzyli\ po\ prostu\ wyrzucany\ jest\ wyj±tek.\n\nGdy\ skopiujemy\ OdleglaKlasa.class,\ kod\ wykonywany\ jest\ po\ stronie\ klienta:\n----\nkkk:\ oo.powolnaMetoda()=0\nsss:\ powolnaMetoda()\;\ i=1\nsss:\ powolnaMetoda()\;\ i=2\nsss:\ powolnaMetoda()\;\ i=3\nsss:\ powolnaMetoda()\;\ i=4\nsss:\ powolnaMetoda()\;\ i=5\nsss:\ powolnaMetoda()\;\ i=6\nsss:\ powolnaMetoda()\;\ i=7\nsss:\ powolnaMetoda()\;\ i=8\nsss:\ powolnaMetoda()\;\ i=9\nsss:\ powolnaMetoda()\;\ i=10\nThread\[main,5,main\]\nsss:\ powolnaMetoda()\;\ koniec\ dzialania\ !\nkkk:\ oo2.powolnaMetoda()=0\nsss:\ powolnaMetoda()\;\ i=1\nsss:\ powolnaMetoda()\;\ i=2\nsss:\ powolnaMetoda()\;\ i=3\nsss:\ powolnaMetoda()\;\ i=4\nsss:\ powolnaMetoda()\;\ i=5\nsss:\ powolnaMetoda()\;\ i=6\nsss:\ powolnaMetoda()\;\ i=7\nsss:\ powolnaMetoda()\;\ i=8\nsss:\ powolnaMetoda()\;\ i=9\nsss:\ powolnaMetoda()\;\ i=10\nThread\[main,5,main\]\nsss:\ powolnaMetoda()\;\ koniec\ dzialania\ !\nkkk:\ oo2.powolnaMetoda()=0\n----\n\n10.3\nDodano\ metodê\ w\ obiekcie\ odleg³ym\ (oczywi¶cie\ w\ interfejsie\ te¿\ jest\ dodana):\n\ \ \ \ public\ void\ generujeBlad()\ throws\ RemoteException\ \{\n\tthrow\ new\ RemoteException(\"Sztucznie\ wygenerowany\ blad\")\;\n\ \ \ \ \}\n\na\ w\ kliencie\ dodano:\n\noo.generujeBlad()\;\n\nWynik\ dzia³ania:\n\nSerwer:\ngeneruje\ tylko\ to\ co\ wcze¶niej\nKlient:\nkkk:\ oo.powolnaMetoda()=0\nkkk:\ oo2.powolnaMetoda()=0\nkkk:\ oo2.powolnaMetoda()=0\nkkk:\ blad\ !!!\ RemoteException\ occurred\ in\ server\ thread\;\ nested\ exception\ is:\ \n\tjava.rmi.RemoteException:\ Sztucznie\ wygenerowany\ blad\n\nWidzimy\ wiêc\ sztucznie\ wygenerowany\ b³±d\ po\ stronie\ klienta.\n\n-------\ KONIEC\ ZADANIA\ 10\ ---------\n\n-------\ ZADANIE\ 11\ &\ 12\ ------------\nTe\ zadania\ s±\ zgrupowane\ w\ jeden\ podpunkt,\ poniewa¿\ kod\ serwera\ zosta³\ przygotowany\ tak,\ aby\ dzia³a³y\ dwie\ wersje\ klienta:\ pierwsza\ z\ zadania\ 11\ -\ bufor\ bez\ przydzielonej\ nazwy,\ oraz\ druga\ z\ zadania\ 12:\ bufor\ z\ nazw±.\nNa\ pocz±tek\ kod\ interfejsów\ oraz\ serwera:\n----------\ OdleglyBuforInterface.java\ -------\nimport\ java.rmi.*\;\n\npublic\ interface\ OdleglyBuforInterface\ extends\ Remote\{\n\tpublic\ void\ wstawElement(int\ el)\ throws\ RemoteException\;\n\tpublic\ int\ pobierzElement()\ throws\ RemoteException\;\n\tpublic\ boolean\ czyJestElement()\ throws\ RemoteException\;\n\tpublic\ boolean\ czyPelna()\ throws\ RemoteException\;\n\}\n-------------\ EOF\ --------------------\n---------\ FabrykaBuforowIn.java\ --------\nimport\ java.rmi.*\;\n\npublic\ interface\ FabrykaBuforowIn\ extends\ Remote\ \{\n\tpublic\ OdleglyBuforInterface\ nowyOdleglyBufor()\ throws\ RemoteException\;\n\tpublic\ OdleglyBuforInterface\ nowyOdleglyBufor(String\ s)\ throws\ RemoteException\;\n\t\n\}\n----------\ EOF\ --------------------\nJak\ widzimy\ w\ powy¿szym\ -\ fabryka\ umo¿liwia\ tworzenie\ bufora\ z\ nazw±\ i\ bez\ nazwy.\nPoni¿ej\ kod\ serwera.\ Gdy\ tworzymy\ bufor\ bez\ nazwy,\ tylko\ go\ eksportujemy.\ Gdy\ tworzymy\ z\ nazw±\ -\ eksportujemy\ i\ robimy\ Naming.rebind.\nCzekanie\ w\ przypadku\ przepe³nienia\ bufora\ odbywa\ siê\ w\ serwerze.\ Je¶li\ bufor\ jest\ pe³ny,\ w±tek\ obs³uguj±cy\ wstawianie\ bêdzie\ czeka³,\ dopóki\ co¶\ nie\ zostanie\ pobrane\ (wtedy\ wywo³a\ siê\ notifyAll()\;\ i\ wstawianie\ bêdzie\ kontynuowane).\ Z\ tego\ powodu\ zmienne\ obs³uguj±ce\ pocz±tek,\ koniec\ i\ licznik\ kolejki\ MUSZ¡\ byæ\ opatrzone\ jako\ 'volatile'\ (ulotne),\ poniewa¿\ ró¿ne\ w±tki\ je\ zmieniaj±.\n-----------\ sss.java\ --------------\n/*\n\ eksperymenty\ z\ RMI\ (serwer)\n\ */\n\nimport\ java.rmi.*\;\nimport\ java.rmi.registry.*\;\nimport\ java.rmi.server.*\;\nimport\ java.io.*\;\n\nclass\ OdleglyBufor\n\ \ \ \ \ \ \ \ implements\ OdleglyBuforInterface,\ Serializable\ \{\n\n\ \ \ \ int\ buf\[\]\;\n\ \ \ \ volatile\ int\ poczatek\;\n\ \ \ \ volatile\ int\ koniec\;\n\ \ \ \ volatile\ int\ liczbaElem\;\n\n\ \ \ \ OdleglyBufor(String\ s,\ int\ rozmiar)\ throws\ RemoteException\ \{\n\ \ \ \ \ \ \ \ super()\;\n\ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ UnicastRemoteObject.exportObject(this)\;\n\ \ \ \ \ \ \ \ //\ tu\ decydujemy\ ze\ obiekt\ bedzie\ \"zdalny\"\n\ \ \ \ \ \ \ \ \ \ \ \ //\ exportObject()\ musi\ byc\ PRZED\ rebind()\ !!!\n\ \ \ \ \ \ \ \ \ \ \ \ Naming.rebind(s,\ this)\;\n\ \ \ \ \ \ \ \ \ \ \ \ //\ rejestruje\ sie\ w\ Naming\ Service\ (=\ rmiregistry)\n\ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ System.err.println(\"sss:\ OdleglyBufor(String,\ int)\;\ blad\ !!!\ \"\ +\ e.getMessage())\;\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \ \ \ \ buf\ =\ new\ int\[rozmiar\]\;\n\ \ \ \ \ \ \ \ poczatek\ =\ 0\;\n\ \ \ \ \ \ \ \ koniec\ =\ 0\;\n\ \ \ \ \ \ \ \ liczbaElem\ =\ 0\;\n\ \ \ \ \ \ \ \ System.out.println(\"sss:\ Utworzylem\ bufor\ \\\"\"\ +\ s\ +\ \"\\\"\")\;\n\ \ \ \ \}\n\n\ \ \ \ OdleglyBufor(int\ rozmiar)\ throws\ RemoteException\ \{\n\ \ \ \ \ \ \ \ super()\;\n\ \ \ \ \ \ \ \ buf\ =\ new\ int\[rozmiar\]\;\n\ \ \ \ \ \ \ \ poczatek\ =\ 0\;\n\ \ \ \ \ \ \ \ koniec\ =\ 0\;\n\ \ \ \ \ \ \ \ liczbaElem\ =\ 0\;\n\ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ UnicastRemoteObject.exportObject(this)\;\n\ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ System.err.println(\"sss:\ OdleglyBufor(int)\;\ blad\ !!!\ \"\ +\ e.getMessage())\;\n\ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ System.out.println(\"sss:\ Utworzylem\ bufor\ bez\ nazwy\")\;\n\ \ \ \ \}\n\n\ \ //\ --------\ implementacja\ interf\ OdleglyBuforInterface\ ----------\n\ \ \ \ public\ synchronized\ void\ wstawElement(int\ el)\ throws\ RemoteException\ \{\n\ \ \ \ \ \ \ \ if\ (czyPelna())\ \{\ \ \ \ \ \ \ \ \ \ \ \ \n\t\ \ \ \ try\ \{\n\t\twait()\;\n\t\ \ \ \ \}\ catch\ (InterruptedException\ ie)\{\n\t\tthrow\ new\ RemoteException(\"Interrupt\ in\ instering\ element!\")\;\n\t\ \ \ \ \}\n\ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ buf\[koniec\ %\ buf.length\]\ =\ el\;\n\ \ \ \ \ \ \ \ koniec++\;\n\ \ \ \ \ \ \ \ liczbaElem++\;\n\tnotifyAll()\;\n\ \ \ \ \}\n\n\ \ \ \ public\ synchronized\ int\ pobierzElement()\ throws\ RemoteException\ \{\n\ \ \ \ \ \ \ \ if\ (!czyJestElement())\ \{\n\t\ \ \ \ try\ \{\n\t\twait()\;\n\t\ \ \ \ \}\ catch\ (InterruptedException\ ie)\{\n\t\tthrow\ new\ RemoteException(\"Interrupt\ in\ receiving\ element!\")\;\n\t\ \ \ \ \}\n\ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ int\ k\ =\ buf\[poczatek\ %\ buf.length\]\;\n\ \ \ \ \ \ \ \ poczatek++\;\n\ \ \ \ \ \ \ \ liczbaElem--\;\n\tnotifyAll()\;\n\ \ \ \ \ \ \ \ return\ k\;\n\ \ \ \ \}\n\n\ \ \ \ public\ boolean\ czyJestElement()\ throws\ RemoteException\ \{\n\ \ \ \ \ \ \ \ return\ (liczbaElem\ >\ 0)\;\n\ \ \ \ \}\n\n\ \ \ \ public\ boolean\ czyPelna()\ throws\ RemoteException\ \{\n\ \ \ \ \ \ \ \ return\ (liczbaElem\ ==\ buf.length)\;\n\ \ \ \ \}\n\ \ //\ ------------------------------------------------------\n\}\n\nclass\ FabrykaBuforow\n\ \ \ \ \ \ \ \ implements\ FabrykaBuforowIn,\ Serializable\ \{\n\n\ \ \ \ FabrykaBuforow(String\ s)\ \{\n\ \ \ \ \ \ \ \ super()\;\n\ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ UnicastRemoteObject.exportObject(this)\;\n\ \ \ \ \ \ \ \ //\ tu\ decydujemy\ ze\ obiekt\ bedzie\ \"zdalny\"\n\ \ \ \ \ \ \ \ \ \ \ \ //\ exportObject()\ musi\ byc\ PRZED\ rebind()\ !!!\n\ \ \ \ \ \ \ \ \ \ \ \ Naming.rebind(s,\ this)\;\n\ \ \ \ \ \ \ \ \ \ \ \ //\ rejestruje\ sie\ w\ Naming\ Service\ (=\ rmiregistry)\n\ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ System.err.println(\"sss:\ FabrykaBuforow()\;\ blad\ !!!\ \"\ +\ e.getMessage())\;\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \ \ \ \ System.out.println(\"sss:\ FabrykaBuforow()\;\ ok\")\;\n\ \ \ \ \}\n\n\ \ \ \ public\ OdleglyBuforInterface\ nowyOdleglyBufor()\ throws\ RemoteException\ \{\n\tSystem.out.println(\"Tworze\ bufor\ bez\ nazwy\ o\ rozmiarze\ 50\")\;\ \ \ \ \ \ \ \ \n\treturn\ new\ OdleglyBufor(50)\;\n\ \ \ \ \}\n\n\ \ \ \ public\ OdleglyBuforInterface\ nowyOdleglyBufor(String\ s)\ throws\ RemoteException\ \{\n\tSystem.out.println(\"Tworze\ bufor\ \\\"\"+\ s\ +\ \"\\\"\ o\ rozmiarze\ 50\")\;\ \n\ \ \ \ \ \ \ \ return\ new\ OdleglyBufor(s,\ 50)\;\n\ \ \ \ \}\n\}\n\npublic\ class\ sss\ \{\n\n\ \ \ \ public\ static\ void\ main(String\ args\[\])\ \{\n\ \ \ \ \ \ \ \ //System.setSecurityManager(new\ RMISecurityManager())\;\n\n\ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println(\"sss:\ zaczynam\ tworzyc\ obiekty\ ...\")\;\n\ \ \ \ \ \ \ \ \ \ \ \ FabrykaBuforowIn\ fabryka\ =\ new\ FabrykaBuforow(\"producent_konsument\")\;\n\t\ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println(\"sss:\ obiekty\ utworzone\ !!!\")\;\n\ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ System.err.println(\"sss:\ blad\ !!!\ \"\ +\ e.getMessage())\;\n\ \ \ \ \ \ \ \ \}\n\ \ \ \ \}\n\}\n--------------------------------------\n\nA\ teraz\ kod\ klienta\ DLA\ ZADANIA\ 11:\nMo¿na\ tutaj\ zauwa¿yæ,\ ¿e\ Producent\ wstawia\ liczby\ od\ 1\ do\ 1000\ co\ 100\ ms.\nKonsument\ pobiera\ liczby\ co\ 250\ ms\ (aby\ zobrazowaæ\ co\ siê\ dzieje,\ gdy\ bufor\ siê\ nape³ni).\nMetody\ (odleg³e)\ wstawiania\ i\ pobierania\ s±\ oznaczone\ jako\ \"synchronized\",\ i\ tam\ te¿\ odbywa\ siê\ ewentualne\ oczekiwanie\ na\ zwolnienie\ zasobu\ (co\ widaæ\ w\ kodzie\ serwera).\nKompilacja\ standardowa\ wg\ instrukcji\ do\ zadania\ 10\;\ nale¿y\ pamiêtaæ,\ ¿e\ kopiujemy\ inne\ Stub'y\ i\ pliki\ .class.\n-------------\ kkk11.java\ -------------\n/*\n\ eksperymenty\ z\ RMI\ (klient)\n\ */\n\nimport\ java.rmi.*\;\nimport\ java.rmi.registry.*\;\nimport\ java.util.concurrent.TimeUnit\;\n\npublic\ class\ kkk11\ \{\n\n\ \ \ \ private\ static\ class\ Producent\ extends\ Thread\ \{\n\n\ \ \ \ \ \ \ \ OdleglyBuforInterface\ bufor\;\n\n\ \ \ \ \ \ \ \ @Override\n\ \ \ \ \ \ \ \ public\ void\ run()\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ i\ =\ 1\;\ i\ <=\ 1000\;\ i++)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ bufor.wstawElement(i)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(\"Wstawilem:\ \"\ +\ i)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (RemoteException\ re)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(re.getMessage())\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ i--\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\t\t\t\ \ \ \ TimeUnit.MILLISECONDS.sleep(200)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ finally\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TimeUnit.MILLISECONDS.sleep(100)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \ \ \ \ Producent(String\ nazwaBufora)\ throws\ Exception\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ bufor\ =\ (OdleglyBuforInterface)\ Naming.lookup(\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \"rmi://localhost/\"\ +\ nazwaBufora)\;\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \ \ \ \ Producent(OdleglyBuforInterface\ bufor)\ throws\ Exception\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ this.bufor\ =\ bufor\;\n\ \ \ \ \ \ \ \ \}\n\ \ \ \ \}\n\n\ \ \ \ private\ static\ class\ Konsument\ extends\ Thread\ \{\n\n\ \ \ \ \ \ \ \ OdleglyBuforInterface\ bufor\;\n\n\ \ \ \ \ \ \ \ @Override\n\ \ \ \ \ \ \ \ public\ void\ run()\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ i\ =\ 1\;\ i\ <=\ 1000\;\ i++)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(\"Pobralem:\ \"\ +\ bufor.pobierzElement())\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (RemoteException\ re)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(re.getMessage())\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ i--\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TimeUnit.MILLISECONDS.sleep(200)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ finally\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TimeUnit.MILLISECONDS.sleep(250)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \ \ \ \ Konsument(String\ nazwaBufora)\ throws\ Exception\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ bufor\ =\ (OdleglyBuforInterface)\ Naming.lookup(\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \"rmi://localhost/\"\ +\ nazwaBufora)\;\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \ \ \ \ Konsument(OdleglyBuforInterface\ bufor)\ throws\ Exception\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ this.bufor\ =\ bufor\;\n\ \ \ \ \ \ \ \ \}\n\ \ \ \ \}\n\n\ \ \ \ public\ static\ void\ main(String\ args\[\])\ \{\n\ \ \ \ \ \ \ \ //System.setSecurityManager(new\ RMISecurityManager())\;\n\n\ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ FabrykaBuforowIn\ fabryka\ =\ (FabrykaBuforowIn)\ Naming.lookup(\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \"rmi://localhost/producent_konsument\")\;\n\ \ \ \ \ \ \ \ \ \ \ \ OdleglyBuforInterface\ bufor\ =\ fabryka.nowyOdleglyBufor()\;\n\ \ \ \ \ \ \ \ \ \ \ \ Thread\ pw\ =\ new\ Producent(bufor)\;\n\ \ \ \ \ \ \ \ \ \ \ \ Thread\ kw\ =\ new\ Konsument(bufor)\;\n\ \ \ \ \ \ \ \ \ \ \ \ pw.start()\;\n\ \ \ \ \ \ \ \ \ \ \ \ kw.start()\;\n\n\ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ System.err.println(\"kkk:\ blad\ !!!\ \"\ +\ e.getMessage())\;\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \}\n\}\n----\ EOF\ ----\nTworzymy\ tutaj\ dwa\ w±tki,\ aby\ dzia³a³o\ to\ równolegle.\ Wstawianie\ i\ pobieranie\ jest\ synchroniczne\ aby\ unikn±æ\ pewnych\ b³êdów.\ Jako\ ¿e\ jest\ to\ rozwi±zanie\ zadania\ 11,\ bufor\ jest\ tworzony\ bez\ nazwy.\nWydruk\ z\ programów:\nSerwer:\n-lupus@aterum-:~/Pulpit/rmic/SERWER\$\ java\ sss\nsss:\ zaczynam\ tworzyc\ obiekty\ ...\nsss:\ FabrykaBuforow()\;\ ok\nsss:\ obiekty\ utworzone\ !!!\nTworze\ bufor\ bez\ nazwy\ o\ rozmiarze\ 50\nsss:\ Utworzylem\ bufor\ bez\ nazwy\n\nKlient:\ \nWstawilem:\ 1\nPobralem:\ 1\nWstawilem:\ 2\nPobralem:\ 2\nWstawilem:\ 3\nPobralem:\ 3\nPobralem:\ 4\nWstawilem:\ 4\nPobralem:\ 5\nWstawilem:\ 5\ //\ to\ wynika\ z\ opó¼nieñ\n(...)\nPobralem:\ 991\nWstawilem:\ 992\nPobralem:\ 992\nWstawilem:\ 993\nPobralem:\ 993\nWstawilem:\ 994\nPobralem:\ 994\nWstawilem:\ 995\nPobralem:\ 995\nWstawilem:\ 996\nPobralem:\ 996\nPobralem:\ 997\nWstawilem:\ 997\nPobralem:\ 998\nWstawilem:\ 998\nWstawilem:\ 999\nPobralem:\ 999\nWstawilem:\ 1000\nPobralem:\ 1000\n\n-----\n\n---ZADANIE\ 12\ ----\nA\ teraz\ zajmiemy\ siê\ zadaniem\ 12\ -\ bufor\ bêdzie\ z\ nazw±,\ a\ bêd±\ korzystaæ\ z\ niego\ DWA\ programy\ klienckie\ (kkk121\ i\ kkk122).\nWykorzystujemy\ ten\ sam\ kod\ serwera...\ Z\ t±\ ró¿nic±,\ ¿e\ bufor\ o\ nazwie\ \"bufor1\"\ utworzymy\ w\ serwerze!\nDodamy\ linijkê\ w\ main:\nfabryka.nowyOdleglyBufor(\"bufor1\")\;\ //nie\ przypisujemy\ wartosci\ zwracanej!\n\ Ale\ kody\ klientów\ s±\ nastêpuj±ce:\n\n----\ kkk121.java\ (producent)\ ----\n/*\n\ eksperymenty\ z\ RMI\ (klient1)\n\ */\n\nimport\ java.rmi.*\;\nimport\ java.rmi.registry.*\;\nimport\ java.util.concurrent.TimeUnit\;\n\npublic\ class\ kkk121\ \{\n\n\ \ \ \ private\ static\ class\ Producent\ extends\ Thread\ \{\n\n\ \ \ \ \ \ \ \ OdleglyBuforInterface\ bufor\;\n\n\ \ \ \ \ \ \ \ @Override\n\ \ \ \ \ \ \ \ public\ void\ run()\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ i\ =\ 1\;\ i\ <=\ 100\;\ i++)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ bufor.wstawElement(i)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(\"Wstawilem:\ \"\ +\ i)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (RemoteException\ re)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(re.getMessage())\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ i--\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TimeUnit.MILLISECONDS.sleep(500)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ finally\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TimeUnit.MILLISECONDS.sleep(100)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \ \ \ \ Producent(String\ nazwaBufora)\ throws\ Exception\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ bufor\ =\ (OdleglyBuforInterface)\ Naming.lookup(\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \"rmi://localhost/\"\ +\ nazwaBufora)\;\n\ \ \ \ \ \ \ \ \}\n\ \ \ \ \}\n\ \ \ \ public\ static\ void\ main(String\ args\[\])\ \{\n\ \ \ \ \ \ \ \ //System.setSecurityManager(new\ RMISecurityManager())\;\n\n\ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ Thread\ pw\ =\ new\ Producent(\"bufor1\")\;\n\ \ \ \ \ \ \ \ \ \ \ \ pw.start()\;\n\n\ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ System.err.println(\"kkk121:\ blad\ !!!\ \"\ +\ e.getMessage())\;\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \}\n\}\n----\ EOF\ ---\n\n----\ kkk122.java\ (konsument)\ -------\n/*\n\ eksperymenty\ z\ RMI\ (klient)\n\ */\n\nimport\ java.rmi.*\;\nimport\ java.rmi.registry.*\;\nimport\ java.util.concurrent.TimeUnit\;\n\npublic\ class\ kkk122\ \{\n\n\ \ \ \ private\ static\ class\ Konsument\ extends\ Thread\ \{\n\n\ \ \ \ \ \ \ \ OdleglyBuforInterface\ bufor\;\n\tString\ s\;\n\ \ \ \ \ \ \ \ @Override\n\ \ \ \ \ \ \ \ public\ void\ run()\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ i\ =\ 1\;\ i\ <=\ 100\;\ i++)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(\"Pobralem:\ \"\ +\ bufor.pobierzElement())\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (RemoteException\ re)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(re.getMessage())\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ i--\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (re\ instanceof\ ConnectException)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(\"kkk122:\ brak\ bufora,\ czekam...\")\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TimeUnit.MILLISECONDS.sleep(400)\;\n\t\t\t\ \ \ \ ponownePolaczenie(s)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ else\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(\"kkk122:\ Kolejka\ pusta,\ oczekuje\ na\ wstawienie....\")\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TimeUnit.MILLISECONDS.sleep(250)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ finally\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TimeUnit.MILLISECONDS.sleep(100)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \ \ \ \ Konsument(String\ nazwaBufora)\ throws\ Exception\ \{\n\t\ \ \ \ s=nazwaBufora\;\n\ \ \ \ \ \ \ \ \ \ \ \ bufor\ =\ (OdleglyBuforInterface)\ Naming.lookup(\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \"rmi://localhost/\"\ +\ nazwaBufora)\;\n\ \ \ \ \ \ \ \ \}\n\tvoid\ ponownePolaczenie(String\ nazwaBufora)\ throws\ Exception\ \{\n\t\tbufor\ =\ (OdleglyBuforInterface)\ Naming.lookup(\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \"rmi://localhost/\"\ +\ nazwaBufora)\;\t\n\t\}\n\ \ \ \ \}\n\n\ \ \ \ public\ static\ void\ main(String\ args\[\])\ \{\n\ \ \ \ \ \ \ \ //System.setSecurityManager(new\ RMISecurityManager())\;\n\n\ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ Thread\ kw\ =\ new\ Konsument(\"bufor1\")\;\n\ \ \ \ \ \ \ \ \ \ \ \ kw.start()\;\n\n\ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ System.err.println(\"kkk122:\ blad\ !!!\ \"\ +\ e.getMessage())\;\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \}\n\}\n----------\ EOF\ ----\nDla\ uproszczenia\ wstawiamy\ tylko\ liczby\ od\ 1\ do\ 100\ (bufor\ nadal\ ma\ rozmiar\ 50).\nA\ oto\ wydruki\ z\ programów....\nSerwer:\n-lupus@aterum-:~/Pulpit/rmic/SERWER\$\ java\ sss\nsss:\ zaczynam\ tworzyc\ obiekty\ ...\nsss:\ FabrykaBuforow()\;\ ok\nTworze\ bufor\ \"bufor1\"\ o\ rozmiarze\ 50\nsss:\ Utworzylem\ bufor\ \"bufor1\"\nsss:\ obiekty\ utworzone\ !!!\n\nKlient\ kkk122\ (zanim\ odpalimy\ producenta):\n(nic\ siê\ nie\ wy¶wietla,\ czeka...)\n(...\ dalej\ po\ odpaleniu\ producenta)\nPobralem:\ 1\nPobralem:\ 2\nPobralem:\ 3\nPobralem:\ 4\nPobralem:\ 5\nPobralem:\ 6\nPobralem:\ 7\nPobralem:\ 8\nPobralem:\ 9\nPobralem:\ 10\nPobralem:\ 11\nPobralem:\ 12\nPobralem:\ 13\nPobralem:\ 14\nPobralem:\ 15\nPobralem:\ 16\nPobralem:\ 17\nPobralem:\ 18\nPobralem:\ 19\nPobralem:\ 20\n(...\ a¿\ do)\nPobralem:\ 100\n\nKlient\ kkk121:\nWstawilem:\ 1\nWstawilem:\ 2\n(...\ a¿\ do)\nWstawilem:\ 100\n\nGdy\ nie\ odpalimy\ konsumenta,\ producent\ wstawi\ 50\ warto¶ci,\ po\ czym\ przestaje\ wy¶wietlaæ,\ czekaj±c\ na\ opró¿nienie\ kolejki.\n\n----\ KONIEC\ ZADANIA\ 11\ &\ 12\ ----\n\n----\ ZADANIE\ 14\ -------\nTutaj\ modyfikujemy\ trochê\ kod\ serwera\ i\ klientów.\ Poniewa¿\ Serializable\ jest\ abstrakcyjne,\ tworzymy\ pust±\ klasê\ EmptySerializable:\n\npublic\ class\ EmptySerializable\ implements\ Serializable\ \{\n\}\n\nNa\ bazie\ której\ jest\ utworzona\ klasa\n\nimport\ java.rmi.*\;\n\npublic\ class\ ObiektSerializable\ extends\ EmptySerializable\ \{\n\n\ \ \ \ String\ nazwa\;\n\ \ \ \ int\ wartosc\;\n\n\ \ \ \ public\ ObiektSerializable(String\ n,\ int\ w)\ \{\n\tsuper()\;\n\tthis.nazwa\ =\ n\;\n\tthis.wartosc\ =\ w\;\n\ \ \ \ \}\n\ \ \ \ public\ ObiektSerializable(int\ w)\ \{\n\tsuper()\;\n\tthis.wartosc\ =\ w\;\n\tthis.nazwa\ =\ \"Unnamed\"\;\n\ \ \ \ \}\n\ \ \ \ public\ ObiektSerializable()\ \{\n\tsuper()\;\n\tthis.nazwa\ =\ \"Unnamed\"\;\n\tthis.wartosc\ =\ 0\;\n\ \ \ \ \}\n\ \ \ \ public\ String\ getName()\ \{\ return\ this.nazwa\;\ \}\n\ \ \ \ public\ int\ getWartosc()\ \{\ return\ this.wartosc\;\ \}\n\n\}\n\nKlasa\ EmptySerializable\ bêdzie\ nadklas±\ dla\ obiektów\ przesy³anych\ Serwer->Klient\ i\ Klient->Serwer.\n\nOto\ kluczowe\ fragmenty\ kodu\ serwera\ (bazujemy\ na\ zadaniu\ 11):\n\nclass\ OdleglyBufor\n\ \ \ \ \ \ \ \ implements\ OdleglyBuforInterface,\ Serializable\ \{\n\n\ \ \ \ EmptySerializable\ buf\[\]\;\n\ \ \ \ volatile\ int\ poczatek\;\n\ \ \ \ volatile\ int\ koniec\;\n\ \ \ \ volatile\ int\ liczbaElem\;\n\n\ \ \ \ OdleglyBufor(String\ s,\ int\ rozmiar)\ throws\ RemoteException\ \{\n//(\ tutaj\ export\ itd.\ -\ pominiete\ w\ sprawozdaniu...)\n\tbuf\ =\ new\ EmptySerializable\[rozmiar\]\;\n\ \ \ \ \ \ \ \ poczatek\ =\ 0\;\n\ \ \ \ \ \ \ \ koniec\ =\ 0\;\n\ \ \ \ \ \ \ \ liczbaElem\ =\ 0\;\n\ \ \ \ \ \ \ \ System.out.println(\"sss:\ Utworzylem\ bufor\ \\\"\"\ +\ s\ +\ \"\\\"\")\;\n\ \ \ \ \}\n\n\ \ \ \ OdleglyBufor(int\ rozmiar)\ throws\ RemoteException\ \{\n\ \ \ \ \ \ \ \ super()\;\n\ \ \ \ \ \ \ \ buf\ =\ new\ EmptySerializable\[rozmiar\]\;\n\ \ \ \ \ \ \ \ poczatek\ =\ 0\;\n\ \ \ \ \ \ \ \ koniec\ =\ 0\;\n\ \ \ \ \ \ \ \ liczbaElem\ =\ 0\;\n\t//(znowu\ export\ itd...\ pominiete\ w\ sprawozdaniu)\n\}\n\nNatomiast\ metody\ pobierz\ i\ wstaw\ wygl±daj±\ tak:\n\ \ \ \ public\ synchronized\ void\ wstawElement(Serializable\ el)\ throws\ RemoteException\ \{\n\ \ \ \ \ \ \ \ if\ (czyPelna())\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\t\twait()\;\n\t\ \ \ \ \}\ catch\ (InterruptedException\ ie)\{\n\t\tthrow\ new\ RemoteException(\"Interrupt\ in\ receiving\ element!\")\;\n\t\ \ \ \ \}\n\ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ buf\[koniec\ %\ buf.length\]\ =\ (EmptySerializable)el\;\n\ \ \ \ \ \ \ \ koniec++\;\n\ \ \ \ \ \ \ \ liczbaElem++\;\n\tnotifyAll()\;\n\ \ \ \ \}\n\n\ \ \ \ public\ synchronized\ Serializable\ pobierzElement()\ throws\ RemoteException\ \{\n\ \ \ \ \ \ \ \ if\ (!czyJestElement())\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\t\twait()\;\n\t\ \ \ \ \}\ catch\ (InterruptedException\ ie)\{\n\t\tthrow\ new\ RemoteException(\"Interrupt\ in\ receiving\ element!\")\;\n\t\ \ \ \ \}\n\ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ Serializable\ k\ =\ buf\[poczatek\ %\ buf.length\]\;\n\ \ \ \ \ \ \ \ poczatek++\;\n\ \ \ \ \ \ \ \ liczbaElem--\;\n\tnotifyAll()\;\n\ \ \ \ \ \ \ \ return\ k\;\n\ \ \ \ \}\n\nOczywi¶cie\ w\ main\ trzeba\ te¿\ odkomentowaæ:\ System.setSecurityManager(new\ RMISecurityManager())\;\n¯eby\ to\ dzia³a³o,\ w\ katalogach\ klienta\ i\ serwera\ umie¶ci³em\ pliki\ .class\ i\ .java\ potrzebnych\ klas\ ObiektSerializable,\ EmptySerializable.\ Mo¿naby\ te¿\ u¿yæ\ codebase\ i\ umie¶ciæ\ te\ pliki\ w\ jakim¶\ katalogu\ na\ serwerze\ http.\n\nCo\ siê\ zmieni³o\ w\ kliencie?\ Oto\ ca³y\ kod:\n----\ kkk14.java\ ----\n/*\n\ eksperymenty\ z\ RMI\ (klient)\n\ */\n\nimport\ java.rmi.*\;\nimport\ java.rmi.registry.*\;\nimport\ java.util.concurrent.TimeUnit\;\nimport\ java.io.Serializable\;\n\npublic\ class\ kkk14\ \{\n\n\ \ \ \ private\ static\ class\ Producent\ extends\ Thread\ \{\n\n\ \ \ \ \ \ \ \ OdleglyBuforInterface\ bufor\;\n\n\ \ \ \ \ \ \ \ @Override\n\ \ \ \ \ \ \ \ public\ void\ run()\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ i\ =\ 1\;\ i\ <=\ 5\;\ i++)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\t\t\ \ \ \ ObiektSerializable\ w\ =\ new\ ObiektSerializable(\"numer\"\ +\ i,\ i*10)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ bufor.wstawElement(w)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(\"Wstawilem\ obiekt\ nr\ \"\ +\ i)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (RemoteException\ re)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(re.getMessage())\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ i--\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TimeUnit.MILLISECONDS.sleep(500)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ finally\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TimeUnit.MILLISECONDS.sleep(100)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \ \ \ \ Producent(String\ nazwaBufora)\ throws\ Exception\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ bufor\ =\ (OdleglyBuforInterface)\ Naming.lookup(\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \"rmi://localhost/\"\ +\ nazwaBufora)\;\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \ \ \ \ Producent(OdleglyBuforInterface\ bufor)\ throws\ Exception\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ this.bufor\ =\ bufor\;\n\ \ \ \ \ \ \ \ \}\n\ \ \ \ \}\n\n\ \ \ \ private\ static\ class\ Konsument\ extends\ Thread\ \{\n\n\ \ \ \ \ \ \ \ OdleglyBuforInterface\ bufor\;\n\n\ \ \ \ \ \ \ \ @Override\n\ \ \ \ \ \ \ \ public\ void\ run()\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (int\ i\ =\ 1\;\ i\ <=\ 5\;\ i++)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\t\t\ \ \ \ Serializable\ s\ =\ bufor.pobierzElement()\;\n\t\t\ \ \ \ ObiektSerializable\ o\;\n\t\t\ \ \ \ if\ (s\ instanceof\ ObiektSerializable)\ \{\n\t\t\to\ =\ (ObiektSerializable)\ s\;\n\t\t\t\n\t\t\ \ \ \ \}\ else\ throw\ new\ Exception(\"Nieznany\ obiekt\")\;\n\t\t\ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(\"Pobralem\ obiekt:\ \")\;\n\t\t\ \ \ \ System.out.println(\"Nazwa:\ \"\ +\ o.getName())\;\n\t\t\ \ \ \ System.out.println(\"Wartosc:\ \"\ +\ o.getWartosc())\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (RemoteException\ re)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println(re.getMessage())\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ i--\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TimeUnit.MILLISECONDS.sleep(250)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch(Exception\ e)\ \{\n\t\t\ \ \ \ System.out.println(e.getMessage())\;\n\t\t\}finally\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ TimeUnit.MILLISECONDS.sleep(350)\;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \ \ \ \ \}\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \ \ \ \ Konsument(String\ nazwaBufora)\ throws\ Exception\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ bufor\ =\ (OdleglyBuforInterface)\ Naming.lookup(\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \"rmi://localhost/\"\ +\ nazwaBufora)\;\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \ \ \ \ Konsument(OdleglyBuforInterface\ bufor)\ throws\ Exception\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ this.bufor\ =\ bufor\;\n\ \ \ \ \ \ \ \ \}\n\ \ \ \ \}\n\n\ \ \ \ public\ static\ void\ main(String\ args\[\])\ \{\n\ \ \ \ \ \ \ \ System.setSecurityManager(new\ RMISecurityManager())\;\n\n\ \ \ \ \ \ \ \ try\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ FabrykaBuforowIn\ fabryka\ =\ (FabrykaBuforowIn)\ Naming.lookup(\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \"rmi://localhost/producent_konsument\")\;\n\ \ \ \ \ \ \ \ \ \ \ \ OdleglyBuforInterface\ bufor\ =\ fabryka.nowyOdleglyBufor()\;\n\ \ \ \ \ \ \ \ \ \ \ \ Thread\ pw\ =\ new\ Producent(bufor)\;\n\ \ \ \ \ \ \ \ \ \ \ \ Thread\ kw\ =\ new\ Konsument(bufor)\;\n\ \ \ \ \ \ \ \ \ \ \ \ pw.start()\;\n\ \ \ \ \ \ \ \ \ \ \ \ kw.start()\;\n\n\ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ System.err.println(\"kkk:\ blad\ !!!\ \"\ +\ e.getMessage())\;\n\ \ \ \ \ \ \ \ \}\n\n\ \ \ \ \}\n\}\n----\ EOF----\n\nprogramy\ odpalamy\ z\ polityk±\ bezpieczeñstwa\njava\ -Djava.security.policy=policy.p\ klasa_main\nJaki\ jest\ wynik?\nDla\ testu\ wstawiamy\ tylko\ 5\ warto¶ci,\ ale\ mo¿na\ to\ rozszerzyæ\ na\ wiêcej...\ \nWydruk\ serwera\ jest\ podobny\ jak\ w\ zadaniu\ 11/12.\n\nWydruk\ klienta\ (producent\ wstawia\ co\ 100\ ms,\ konsument\ pobiera\ co\ 350\ ms)\n\nWstawilem\ obiekt\ nr\ 1\nPobralem\ obiekt:\ \nNazwa:\ numer1\nWartosc:\ 10\nWstawilem\ obiekt\ nr\ 2\nWstawilem\ obiekt\ nr\ 3\nWstawilem\ obiekt\ nr\ 4\nPobralem\ obiekt:\ \nNazwa:\ numer2\nWartosc:\ 20\nWstawilem\ obiekt\ nr\ 5\nPobralem\ obiekt:\ \nNazwa:\ numer3\nWartosc:\ 30\nPobralem\ obiekt:\ \nNazwa:\ numer4\nWartosc:\ 40\nPobralem\ obiekt:\ \nNazwa:\ numer5\nWartosc:\ 50\n\n----\ KONIEC\ ZADANIA\ 14\ -----\n
