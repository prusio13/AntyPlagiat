przedmiot TAS temat C nr_indeksu 396153 liczba_pkt 5 

\n\n*-------------*\n|\ Zadanie\ 20.\ |\n*-------------*\n\n\t*-----------------------------------------------*\n\t|\t\tJAVA\ <->\ JAVA\t\t\t|\n\t*-----------------------------------------------*\n\nAby\ wypróbowaæ\ dzia³anie\ serwera/klienta\ CORBY\ Java-Java:\n\t1.\ Skompilowa³em\ pliki:\ \"javac\ *.java\"\n\t2.\ W\ pierwszym\ terminalu\ uruchomi³em\ serwer:\ \"java\ HelloServer2\"\n\n-----------------------------------------\n----------------wydruk-------------------\n-----------------------------------------\n\[11:43\]:java\ HelloServer2\ \nHelloServant2()\nIOR=IOR:000000000000001849444c3a48656c6c6f417070322f48656c6c6f3a312e3000000000010000000000000082000102000000000a3132372e302e312e3100865a00000031afabcb0000000020247e720200000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002\norb.run()\;\n\n\t3.\ W\ drugim\ terminalu\ uruchomi³em\ klienta:\ \"java\ HelloClient2\"\n\n-----------------------------------------\n----------------wydruk-------------------\n-----------------------------------------\n\[11:44\]:java\ HelloClient2\ \npodajLiczbe=0\nsayHello=Hello\ world\ !!!\n\n\t4.\ Reakcja\ serwera\ na\ wywo³anie\ kilku\ klientów\ pod\ rz±d:\n\n-----------------------------------------\n----------------wydruk-------------------\n-----------------------------------------\npodajLiczbe(),\ 0\nsayHello()\n8:\ 0,\ 0,\ 0,\ 1,\ 0,\ 0,\ 0,\ 0,\ \npodajLiczbe(),\ 1\nsayHello()\n8:\ 0,\ 0,\ 0,\ 1,\ 0,\ 0,\ 0,\ 0,\ \npodajLiczbe(),\ 2\nsayHello()\n8:\ 0,\ 0,\ 0,\ 1,\ 0,\ 0,\ 0,\ 0,\ \npodajLiczbe(),\ 3\nsayHello()\n8:\ 0,\ 0,\ 0,\ 1,\ 0,\ 0,\ 0,\ 0,\ \npodajLiczbe(),\ 4\nsayHello()\n8:\ 0,\ 0,\ 0,\ 1,\ 0,\ 0,\ 0,\ 0,\ \npodajLiczbe(),\ 5\nsayHello()\n8:\ 0,\ 0,\ 0,\ 1,\ 0,\ 0,\ 0,\ 0,\ \n\n\n\t*---------------------------------------*\n\t|\t\tTCL\ <->\ TCL\t\t|\n\t*---------------------------------------*\n\nAby\ wypróbowaæ\ dzia³anie\ serwera/klienta\ CORBY\ w\ jêzyku\ TCL:\n\t1.\ Uruchomi³em\ w\ konsoli\ TCL\ plik\ \"ser.tcl\":\ \"./tclkit\ konsola2c\ ser.tcl\"\n\t2.\ Uruchomi³em\ w\ drugiej\ konsoli\ plik\ \"cli.tcl\":\ \"./tclkit\ konsola2c\ cli.tcl\"\n\t3.\ Skompilowa³em\ w\ pierwszej\ konsoli\ TCL\ ca³y\ plik\ i\ w\ zwyk³ej\ konsoli\ otrzyma³em\ poni¿sze\ komunikaty:\n\n-----------------------------------------\n----------------wydruk-------------------\n-----------------------------------------\nobj=helloWorld0\npoa=::Combat::PortableServer::rootPOA0\nref=_combat_obj_1\nHelloWorld\ IOR\ =\ IOR:01666f6f1800000049444c3a48656c6c6f417070322f48656c6c6f3a312e300002000000000000003800000001010266120000007a69616368752d6c696e75782d6d696e7400258a120000002f313434383031373131392f353930382a31666f00000000010000002400000001666f6f01000000010000001400000001666f6f01000105000000000901010000000000\n\n\t4.\ Nastêpnie\ skompilowa³em\ wymagany\ pocz±tek\ pliku\ \"cli.tcl\"\ w\ drugiej\ konsoli\ TCL,\ dziêki\ czemu\ mog³em\ u¿ywaæ\ bez\ problemu\ utworzonych\ metod:\n\n-----------------------------------------\n----------------wydruk-------------------\n-----------------------------------------\n\$m\ podajLiczbe\n\ \ #%\ 13\n\ \ #%\ 12\n\ \ #%\ 11\n\ \ #%\ 10\n\ \ #%\ 9\n\ \ #%\ 8\n\ \ #%\ 7\n\ \ #%\ 6\n\ \ #%\ 5\n\ \ #%\ 4\n\ \ #%\ 3\n\ \ #%\ 2\n\ \ #%\ 1\n\n\$m\ sayHello\n\ \ #%\ Jak\ sie\ masz\ ???\n\n\$m\ sayHello2\ \"ale\"\n\ \ #%\ sayHello2:\ str=\ ale\ ale\ ale\ ale\ ale\ ale\ ale\ ale\n\ \ #%\ sayHello2:\ str=\ ale\ ale\ ale\ ale\ ale\ ale\ ale\n\ \ #%\ sayHello2:\ str=\ ale\ ale\ ale\ ale\ ale\ ale\n\ \ #%\ sayHello2:\ str=\ ale\ ale\ ale\ ale\ ale\ \n\ \ #%\ sayHello2:\ str=\ ale\ ale\ ale\ ale\n\ \ #%\ sayHello2:\ str=\ ale\ ale\ ale\n\ \ #%\ sayHello2:\ str=\ ale\ ale\n\ \ #%\ sayHello2:\ str=\ ale\n\n\t*---------------------------------------*\n\t|\t\tJAVA\ <->\ TCL\t\t|\n\t*---------------------------------------*\n\t1.\ Serwer:\ Java,\ klient:\ TCL\n\t2.\ Po\ uruchomieniu\ serwera\ nale¿a³o\ przekopiowaæ\ plik\ \"Hello.IOR\"\ do\ folderu,\ w\ którym\ jest\ konsola\ TCL\n\t3.\ Wydruki\ po\ stronie\ serwera,\ po\ kilkukrotnym\ wywo³aniu\ ró¿nych\ metod\ przez\ klienta:\n-----------------------------------------\n----------------wydruk-------------------\n-----------------------------------------\n\[12:21\]:java\ HelloServer2\nHelloServant2()\nIOR=IOR:000000000000001849444c3a48656c6c6f417070322f48656c6c6f3a312e3000000000010000000000000082000102000000000a3132372e302e312e3100843f00000031afabcb000000002024a09f6400000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002\norb.run()\;\npodajLiczbe(),\ 0\npodajLiczbe(),\ 1\npodajLiczbe(),\ 2\npodajLiczbe(),\ 3\npodajLiczbe(),\ 4\npodajLiczbe(),\ 5\npodajLiczbe(),\ 6\npodajLiczbe(),\ 7\npodajLiczbe(),\ 8\npodajLiczbe(),\ 9\npodajLiczbe(),\ 10\npodajLiczbe(),\ 11\npodajLiczbe(),\ 12\npodajLiczbe(),\ 13\npodajLiczbe(),\ 14\npodajLiczbe(),\ 15\npodajLiczbe(),\ 16\npodajLiczbe(),\ 17\npodajLiczbe(),\ 18\npodajLiczbe(),\ 19\npodajLiczbe(),\ 20\nsayHello()\n8:\ 0,\ 0,\ 0,\ 1,\ 0,\ 0,\ 0,\ 0,\ \n\n\t4.\ Wydruki\ po\ stronie\ klienta,\ po\ wywo³aniu\ kilku\ ró¿nych\ metod:\n\n-----------------------------------------\n----------------wydruk-------------------\n-----------------------------------------\n\$m\ podajLiczbe\n\ \ #%\ 20\n\ \ #%\ 19\n\ \ #%\ 18\n\ \ #%\ 17\n\ \ #%\ 16\n\ \ #%\ 15\n\ \ #%\ 14\n\ \ #%\ 13\n\ \ #%\ 12\n\ \ #%\ 11\n\ \ #%\ 10\n\ \ #%\ 9\n\ \ #%\ 8\n\ \ #%\ 7\n\ \ #%\ 6\n\ \ #%\ 5\n\ \ #%\ 4\n\ \ #%\ 3\n\ \ #%\ 2\n\ \ #%\ 1\n\ \ #%\ 0\n\n\$m\ sayHello\n\ \ #%\ Hello\ world\ !!!\n\ \ #%\ Jak\ sie\ masz\ ???\n\n\$m\ sayHello2\ \"ale\"\n\ \ #%\ ale\[ale\[ale\[\]\]\]\n\ \ #%\ ale\[ale\[\]\]\n\ \ #%\ ale\[\]\n\n\t*---------------------------------------*\n\t|\t\tTCL\ <->\ JAVA\t\t|\n\t*---------------------------------------*\n\t1.\ Serwer:\ TCL,\ klient:\ Java\n\t2.\ Po\ uruchomieniu\ serwera\ nale¿a³o\ przekopiowaæ\ plik\ \"Hello.IOR\"\ do\ folderu,\ w\ którym\ jest\ klient\ Java'owy\n\t3.\ Wydruki\ po\ stronie\ serwera\ (który\ nie\ jest\ zbyt\ gadatliwy),\ po\ kilkukrotnym\ wywo³aniu\ klienta\ w\ Java'ie:\n\n-----------------------------------------\n----------------wydruk-------------------\n-----------------------------------------\nobj=helloWorld0\npoa=::Combat::PortableServer::rootPOA0\nref=_combat_obj_1\nHelloWorld\ IOR\ =\ IOR:01666f6f1800000049444c3a48656c6c6f417070322f48656c6c6f3a312e300002000000000000003800000001010266120000007a69616368752d6c696e75782d6d696e740032de120000002f313434383031383833332f363234372a31666f00000000010000002400000001666f6f01000000010000001400000001666f6f01000105000000000901010000000000\n\n\t4.\ Wydruki\ po\ stronie\ klienta,\ po\ kilkukrotnym\ wywo³aniu\ klienta:\n\n-----------------------------------------\n----------------wydruk-------------------\n-----------------------------------------\n\[12:27\]:java\ HelloClient2\ \npodajLiczbe=0\nsayHello=Jak\ sie\ masz\ ???\nsayHello2(\"msg1\")\ =\ sayHello2:\ str=\ msg1\nsayHello2(\"msg2\")\ =\ sayHello2:\ str=\ msg1\ msg2\n\[12:27\]:java\ HelloClient2\ \npodajLiczbe=1\nsayHello=Jak\ sie\ masz\ ???\nsayHello2(\"msg1\")\ =\ sayHello2:\ str=\ msg1\ msg2\ msg1\nsayHello2(\"msg2\")\ =\ sayHello2:\ str=\ msg1\ msg2\ msg1\ msg2\n\[12:27\]:java\ HelloClient2\ \npodajLiczbe=2\nsayHello=Jak\ sie\ masz\ ???\nsayHello2(\"msg1\")\ =\ sayHello2:\ str=\ msg1\ msg2\ msg1\ msg2\ msg1\nsayHello2(\"msg2\")\ =\ sayHello2:\ str=\ msg1\ msg2\ msg1\ msg2\ msg1\ msg2\n\n\n\n*-------------*\n|\ Zadanie\ 21.\ |\n*-------------*\n\t*-----------------------------------------------*\n\t|\tEksperyment\ 1.\ (nowy\ obiekt)\t\t\ \ \ \ \ \ \ \ |\n\t*-----------------------------------------------*\nUruchamiam\ jeden\ serwer\ od\ jednego\ klienta\ w\ jêzyku\ TCL,\ gdzie\ jest\ zaimplementowana\ metoda\ tworz±ca\ nowy\ obiekt\ CORBA\ i\ zwracaj±ca\ do\ niego\ referencjê.\nNastêpnie\ w\ kodze\ klienta\ tworzê\ pierwszy\ obiekt\ standardowo.\ Na\ tak\ utworzonym\ obiekcie\ wywo³ujê\ metodê\ \"sayHello_nowyObiekt\",\ przypisujê\ j±\ do\ nowej\ zmiennej\ dziêki\ czemu\ zyskujê\ dostêp\ do\ nowego\ obiektu.\n\nW\ poni¿szym\ przyk³adzie\ utworzone\ s±\ w\ sumie\ 3\ obiekty.\ Dowodem\ na\ to\ s±\ ró¿ne\ stany\ liczby\ \"liczba\",\ której\ przy\ inicjacji\ obiektu\ przypisywana\ jest\ warto¶æ\ 0.\n\n-----------------------------------------\n----------------wydruk-------------------\n-----------------------------------------\nset\ m\ \[corba::string_to_object\ \$ior\]\n\ \ #%\ _combat_obj_1\nset\ m2\ \[\$m\ sayHello_nowyObiekt\]\n\ \ #%\ _combat_obj_2\nset\ m3\ \[\$m\ sayHello_nowyObiekt\]\n\ \ #%\ _combat_obj_3\n\n\$m\ podajLiczbe\n\ \ #%\ 2\n\ \ #%\ 1\n\ \ #%\ 0\n\n\$m2\ podajLiczbe\n\ \ #%\ 4\n\ \ #%\ 3\n\ \ #%\ 2\n\ \ #%\ 1\n\ \ #%\ 0\n\n\$m3\ podajLiczbe\n\ \ #%\ 6\n\ \ #%\ 5\n\ \ #%\ 4\n\ \ #%\ 3\n\ \ #%\ 2\n\ \ #%\ 1\n\ \ #%\ 0\n\n-----------------------------------------\n----------------wydruk-------------------\n-----------------------------------------\n\[12:40\]:./tclkit\ konsola2c.tcl\ ser.tcl\nobj=helloWorld0\npoa=::Combat::PortableServer::rootPOA0\nref=_combat_obj_1\nHelloWorld\ IOR\ =\ IOR:01666f6f1800000049444c3a48656c6c6f417070322f48656c6c6f3a312e300002000000000000003800000001010266120000007a69616368752d6c696e75782d6d696e7400c0ba120000002f313434383031393632342f363433322a31666f00000000010000002400000001666f6f01000000010000001400000001666f6f01000105000000000901010000000000\npoczatek\ sayHello_nowyObiekt\npoa=::Combat::PortableServer::rootPOA0\nobj=helloWorld1\nref=_combat_obj_2\nkoniec\ sayHello_nowyObiekt\npoczatek\ sayHello_nowyObiekt\npoa=::Combat::PortableServer::rootPOA0\nobj=helloWorld2\nref=_combat_obj_3\nkoniec\ sayHello_nowyObiekt\n\n\t*-------------------------------------------------------*\n\t|\tEksperyment\ 2.\ (long\ and\ verbose\ method)\t|\n\t*-------------------------------------------------------*\nEksperyment\ mia³\ polegaæ\ na\ wywo³aniu\ przez\ kilku\ klientów\ jednocze¶nie\ jednej\ metody,\ która\ co\ jaki¶\ czas\ wypisuje\ co¶\ (na\ serwerze)\ i\ trwa\ d³u¿ej\ ni¿\ zwyczajne\ metody.\ Nie\ by³o\ takiej\ metody\ w\ podanym\ przyk³adowym\ kodzie\ dlatego\ utworzy³em\ swoj±.\ W\ tym\ celu\ do\ interfejsu\ (plik:\ \"Hello2.idl\")\ doda³em\ deklaracjê\ metody:\n\n\tvoid\ beVerboseAndLong()\;\n\nnatomiast\ do\ kodu\ serwera\ (plik:\ \"HelloServer2.java\")\ jej\ implementacjê:\n\n\tpublic\ void\ beVerboseAndLong()\ \{\n\t\tfor\ (int\ i\ =\ 0\;\ i\ <\ 25\;\ i++)\ \{\n\t\tSystem.out.println(\"(\"\ +\ i\ +\ \")\ I'm\ trapped\ in\ long\ loop...\")\;\n\t\ttry\ \{\n\t\t\tThread.sleep(100)\;\n\t\t\}\ catch\ (InterruptedException\ e)\ \{\n\t\t\tSystem.out.println(\"I\ can't\ sleep.\ \;(\")\;\n\t\t\}\n\t\}\n\nJak\ widaæ\ serwer\ CORBY\ radzi\ sobie\ z\ kilkoma\ wywo³aniami\ tej\ samej\ metody\ przez\ ró¿nych\ klientów\ bardzo\ dobrze.\ Rz±dania\ wykonywane\ s±\ równolegle\ i\ je¿eli\ to\ nie\ kwestia\ przypadku,\ to\ nawet\ siê\ \"nie\ rozbiegaj±\",\ tzn.\ ka¿dy\ klient\ jest\ w\ (ka¿dym)\ danym\ momencie\ na\ tym\ samym\ etapie\ wykonywania\ metody.\n\n-----------------------------------------\n----------------wydruk\ (klienci)---------\n-----------------------------------------\n\[13:22\]:java\ HelloClient2\ |\ java\ HelloClient2\ |\ java\ HelloClient2\ |\ java\ HelloClient2\npodajLiczbe=0\nsayHello=Hello\ world\ !!!\nsayHello2(\"msg1\")\ =\ msg1\[\]\nsayHello2(\"msg2\")\ =\ msg2\[msg1\[msg1\[msg1\[\]\]\]\]\ncalling\ long\ and\ verbose\ method...\n\n-----------------------------------------\n----------------wydruk\ (serwer)----------\n-----------------------------------------\n\[13:23\]:java\ HelloServer2\nHelloServant2()\nIOR=IOR:000000000000001849444c3a48656c6c6f417070322f48656c6c6f3a312e3000000000010000000000000082000102000000000a3132372e302e312e3100c1fc00000031afabcb000000002024d94deb00000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002\norb.run()\;\npodajLiczbe(),\ 0\npodajLiczbe(),\ 1\npodajLiczbe(),\ 2\nsayHello()\n8:\ 0,\ 0,\ 0,\ 1,\ 0,\ 0,\ 0,\ 0,\ \nsayHello()\n8:\ 0,\ 0,\ 0,\ 1,\ 0,\ 0,\ 0,\ 0,\ \nsayHello()\n8:\ 0,\ 0,\ 0,\ 1,\ 0,\ 0,\ 0,\ 0,\ \n(0)\ I'm\ trapped\ in\ long\ loop...\n(0)\ I'm\ trapped\ in\ long\ loop...\n(0)\ I'm\ trapped\ in\ long\ loop...\npodajLiczbe(),\ 3\nsayHello()\n8:\ 0,\ 0,\ 0,\ 1,\ 0,\ 0,\ 0,\ 0,\ \n(0)\ I'm\ trapped\ in\ long\ loop...\n(1)\ I'm\ trapped\ in\ long\ loop...\n(1)\ I'm\ trapped\ in\ long\ loop...\n(1)\ I'm\ trapped\ in\ long\ loop...\n(1)\ I'm\ trapped\ in\ long\ loop...\n(2)\ I'm\ trapped\ in\ long\ loop...\n(2)\ I'm\ trapped\ in\ long\ loop...\n(2)\ I'm\ trapped\ in\ long\ loop...\n(2)\ I'm\ trapped\ in\ long\ loop...\n(3)\ I'm\ trapped\ in\ long\ loop...\n(3)\ I'm\ trapped\ in\ long\ loop...\n(3)\ I'm\ trapped\ in\ long\ loop...\n(3)\ I'm\ trapped\ in\ long\ loop...\n(4)\ I'm\ trapped\ in\ long\ loop...\n(4)\ I'm\ trapped\ in\ long\ loop...\n(4)\ I'm\ trapped\ in\ long\ loop...\n(4)\ I'm\ trapped\ in\ long\ loop...\n(5)\ I'm\ trapped\ in\ long\ loop...\n(5)\ I'm\ trapped\ in\ long\ loop...\n(5)\ I'm\ trapped\ in\ long\ loop...\n(5)\ I'm\ trapped\ in\ long\ loop...\n(6)\ I'm\ trapped\ in\ long\ loop...\n(6)\ I'm\ trapped\ in\ long\ loop...\n(6)\ I'm\ trapped\ in\ long\ loop...\n(6)\ I'm\ trapped\ in\ long\ loop...\n(7)\ I'm\ trapped\ in\ long\ loop...\n(7)\ I'm\ trapped\ in\ long\ loop...\n(7)\ I'm\ trapped\ in\ long\ loop...\n(7)\ I'm\ trapped\ in\ long\ loop...\n(8)\ I'm\ trapped\ in\ long\ loop...\n(8)\ I'm\ trapped\ in\ long\ loop...\n(8)\ I'm\ trapped\ in\ long\ loop...\n(8)\ I'm\ trapped\ in\ long\ loop...\n(9)\ I'm\ trapped\ in\ long\ loop...\n(9)\ I'm\ trapped\ in\ long\ loop...\n(9)\ I'm\ trapped\ in\ long\ loop...\n(9)\ I'm\ trapped\ in\ long\ loop...\n(10)\ I'm\ trapped\ in\ long\ loop...\n(10)\ I'm\ trapped\ in\ long\ loop...\n(10)\ I'm\ trapped\ in\ long\ loop...\n(10)\ I'm\ trapped\ in\ long\ loop...\n(11)\ I'm\ trapped\ in\ long\ loop...\n(11)\ I'm\ trapped\ in\ long\ loop...\n(11)\ I'm\ trapped\ in\ long\ loop...\n(11)\ I'm\ trapped\ in\ long\ loop...\n(12)\ I'm\ trapped\ in\ long\ loop...\n(12)\ I'm\ trapped\ in\ long\ loop...\n(12)\ I'm\ trapped\ in\ long\ loop...\n(12)\ I'm\ trapped\ in\ long\ loop...\n(13)\ I'm\ trapped\ in\ long\ loop...\n(13)\ I'm\ trapped\ in\ long\ loop...\n(13)\ I'm\ trapped\ in\ long\ loop...\n(13)\ I'm\ trapped\ in\ long\ loop...\n(14)\ I'm\ trapped\ in\ long\ loop...\n(14)\ I'm\ trapped\ in\ long\ loop...\n(14)\ I'm\ trapped\ in\ long\ loop...\n(14)\ I'm\ trapped\ in\ long\ loop...\n(15)\ I'm\ trapped\ in\ long\ loop...\n(15)\ I'm\ trapped\ in\ long\ loop...\n(15)\ I'm\ trapped\ in\ long\ loop...\n(15)\ I'm\ trapped\ in\ long\ loop...\n(16)\ I'm\ trapped\ in\ long\ loop...\n(16)\ I'm\ trapped\ in\ long\ loop...\n(16)\ I'm\ trapped\ in\ long\ loop...\n(16)\ I'm\ trapped\ in\ long\ loop...\n(17)\ I'm\ trapped\ in\ long\ loop...\n(17)\ I'm\ trapped\ in\ long\ loop...\n(17)\ I'm\ trapped\ in\ long\ loop...\n(17)\ I'm\ trapped\ in\ long\ loop...\n(18)\ I'm\ trapped\ in\ long\ loop...\n(18)\ I'm\ trapped\ in\ long\ loop...\n(18)\ I'm\ trapped\ in\ long\ loop...\n(18)\ I'm\ trapped\ in\ long\ loop...\n(19)\ I'm\ trapped\ in\ long\ loop...\n(19)\ I'm\ trapped\ in\ long\ loop...\n(19)\ I'm\ trapped\ in\ long\ loop...\n(19)\ I'm\ trapped\ in\ long\ loop...\n(20)\ I'm\ trapped\ in\ long\ loop...\n(20)\ I'm\ trapped\ in\ long\ loop...\n(20)\ I'm\ trapped\ in\ long\ loop...\n(20)\ I'm\ trapped\ in\ long\ loop...\n(21)\ I'm\ trapped\ in\ long\ loop...\n(21)\ I'm\ trapped\ in\ long\ loop...\n(21)\ I'm\ trapped\ in\ long\ loop...\n(21)\ I'm\ trapped\ in\ long\ loop...\n(22)\ I'm\ trapped\ in\ long\ loop...\n(22)\ I'm\ trapped\ in\ long\ loop...\n(22)\ I'm\ trapped\ in\ long\ loop...\n(22)\ I'm\ trapped\ in\ long\ loop...\n(23)\ I'm\ trapped\ in\ long\ loop...\n(23)\ I'm\ trapped\ in\ long\ loop...\n(23)\ I'm\ trapped\ in\ long\ loop...\n(23)\ I'm\ trapped\ in\ long\ loop...\n(24)\ I'm\ trapped\ in\ long\ loop...\n(24)\ I'm\ trapped\ in\ long\ loop...\n(24)\ I'm\ trapped\ in\ long\ loop...\n(24)\ I'm\ trapped\ in\ long\ loop...\n\n\t*-------------------------------------------------------*\n\t|\tEksperyment\ 3.\ (long\ and\ verbose\ method)\t|\n\t*-------------------------------------------------------*\nNie\ rozumiem,\ czy\ nale¿y\ z\ serwera\ zrobiæ\ klienta,\ czy\ na\ odwrót.\n\n\n\n*-------------*\n|\ Zadanie\ 22.\ |\n*-------------*\nStworzy³em\ od\ podstaw\ swój\ interfejs\ (plik:\ \"CorbaMultiply.idl\"),\ serwer\ (plik:\ \"MultiplyServer.java\")\ oraz\ klienta\ (plik:\ \"MultiplyClient.java\")\nPoni¿ej\ prezentuje\ kod\ w/w\ plików.\ Interfejs\ deklaruje\ tylko\ jedn±\ metodê\ \"multiply\",\ która\ na\ wej¶ciu\ otrzymuje\ WEKTOR\ (tablica\ float'ów)\ oraz\ SKALAR,\ przemna¿a\ jedno\ przez\ drugie\ i\ zwraca\ nowy\ wektor.\ Klient\ oczekuje\ od\ u¿ytkownika\ podania\ skalaru,\ liczby\ elementów\ wektora\ oraz\ tych\ warto¶ci.\ Nastêpnie\ wywo³uje\ zdaln±\ metodê\ i\ zwraca\ wynik.\n\n\n-----------------------------------------\n-------wydruk\ (CorbaMultiply.idl)--------\n-----------------------------------------\nmodule\ CorbaMultiplyApp\n\{\n\tinterface\ Multiply\ \n\t\{\n\t\t//\ Nieograniczona\ \"jednowymiarowa\ tablica\"\ float'ów\n\t\ttypedef\ sequence<float>\ wektor\;\n\t\twektor\ multiply(in\ wektor\ vector,\ in\ float\ scalar)\;\n\n\t\ttypedef\ sequence<wektor>\ macierz\;\n\t\tlong\ sum_matrix(in\ macierz\ matrix)\;\n\t\}\;\n\}\;\n\n-----------------------------------------\n-------wydruk\ (MultiplyServer.java)------\n-----------------------------------------\nimport\ CorbaMultiplyApp.*\;\n\nimport\ org.omg.CORBA.*\;\nimport\ org.omg.PortableServer.*\;\nimport\ org.omg.CosNaming.*\;\nimport\ org.omg.CosNaming.NamingContextPackage.*\;\n\nimport\ java.io.*\;\n\nclass\ MultiplyServant\ extends\ MultiplyPOA\ \{\n\tprivate\ ORB\ orb\;\n\n\tpublic\ MultiplyServant(ORB\ orb)\ \{\n\t\tsuper()\;\n\t\tSystem.out.println(\"MultiplyServant()\ instatiating...\")\;\n\n\t\tthis.orb\ =\ orb\;\n\t\}\n\n\tpublic\ float\[\]\ multiply(float\[\]\ vector,\ float\ scalar)\ \{\n\t\tSystem.out.println(\"multiply(vector,\ scalar)\;\")\;\n\n\t\tfloat\[\]\ result\ =\ new\ float\[vector.length\]\;\n\n\t\tfor\ (int\ i\ =\ 0\;\ i\ <\ vector.length\;\ i++)\ \{\n\t\t\tresult\[i\]\ =\ vector\[i\]\ *\ scalar\;\n\t\t\}\n\n\t\treturn\ result\;\n\t\}\n\n\tpublic\ int\ sum_matrix(float\[\]\[\]\ matrix)\ \{\n\t\tSystem.out.println(\"sum_matrix(matrix)\;\")\;\n\t\tint\ sum\ =\ 0\;\n\n\t\tfor\ (int\ i\ =\ 0\;\ i\ <\ matrix.length\;\ i++)\ \{\n\t\t\tfor\ (int\ j\ =\ 0\;\ j\ <\ matrix\[i\].length\;\ j++)\ \{\n\t\t\t\tsum\ +=\ matrix\[i\]\[j\]\;\n\t\t\t\}\n\t\t\}\t\n\n\t\treturn\ sum\;\n\t\}\n\}\n\npublic\ class\ MultiplyServer\ \{\n\t\n\tpublic\ static\ void\ main(String\ args\[\])\ \{\n\t\ttry\ \{\n\t\t\tORB\ orb\ =\ ORB.init(args,\ null)\;\n\t\t\t\n\t\t\tMultiplyServant\ servant\ =\ new\ MultiplyServant(orb)\;\n\n\t\t\tPOA\ rootpoa\ =\ POAHelper.narrow(\n\t\t\t\torb.resolve_initial_references(\"RootPOA\"))\;\n\t\t\trootpoa.the_POAManager().activate()\;\n\n\t\t\torg.omg.CORBA.Object\ ref\ =\ rootpoa.servant_to_reference(servant)\;\n\n\t\t\tString\ IOR\ =\ orb.object_to_string(ref)\;\n\t\t\tSystem.out.println(\"IOR\ =\ \"\ +\ IOR)\;\n\t\t\tPrintWriter\ out\ =\ new\ PrintWriter(new\ BufferedWriter(new\ FileWriter(\"Multiply.IOR\")))\;\n\t\t\tout.println(IOR)\;\n\t\t\tout.close()\;\n\n\t\t\tSystem.out.println(\"orb.run()\;\")\;\n\t\t\torb.run()\;\n\t\t\tSystem.out.println(\"orb.run()\;\ -\ end\")\;\n\t\t\}\ catch\ (Exception\ e)\ \{\n\t\t\tSystem.err.println(\"ERROR:\ \"\ +\ e)\;\n\t\t\te.printStackTrace(System.out)\;\n\t\t\}\n\t\}\n\}\n\n-----------------------------------------\n-------wydruk\ (MultiplyClient.java)------\n-----------------------------------------\nimport\ CorbaMultiplyApp.*\;\n\nimport\ org.omg.CORBA.*\;\n\nimport\ java.io.*\;\nimport\ java.util.Scanner\;\n\npublic\ class\ MultiplyClient\ \{\n\t\n\tpublic\ static\ void\ main(String\ args\[\])\ \{\n\t\ttry\ \{\n\t\t\tORB\ orb\ =\ ORB.init(args,\ null)\;\n\n\t\t\tBufferedReader\ in\ =\ new\ BufferedReader(new\ FileReader(\"Multiply.IOR\"))\;\n\t\t\tString\ IOR\ =\ in.readLine()\;\n\t\t\tin.close()\;\n\n\t\t\torg.omg.CORBA.Object\ obj\ =\ orb.string_to_object(IOR)\;\n\t\t\tMultiply\ multiplyRef\ =\ MultiplyHelper.narrow(obj)\;\n\n\t\t\t//\ comment\ -\ start\n\t\t\tSystem.out.println(\"float'y\ zapisuj\ z\ \\\",\\\"\ (przecinek),\ nie\ z\ \\\".\\\"\ (kropka)\")\;\n\t\t\t\n\t\t\tScanner\ user_in\ =\ new\ Scanner(System.in)\;\n\t\t\tSystem.out.print(\"Scalar:\ \")\;\n\t\t\tfloat\ scalar\ =\ user_in.nextFloat()\;\n\t\t\n\t\t\tSystem.out.print(\"Length\ of\ vector:\ \")\;\n\t\t\tint\ amount\ =\ user_in.nextInt()\;\n\n\t\t\tfloat\[\]\ vec\ =\ new\ float\[amount\]\;\n\n\t\t\tfor\ (int\ i\ =\ 0\;\ i\ <\ amount\;\ i++)\n\t\t\t\tvec\[i\]\ =\ user_in.nextFloat()\;\n\n\t\t\tSystem.out.println(\"==============================\")\;\n\n\t\t\t//\ comment\ -\ end\n\n\t\t\t//float\[\]\ vec\ =\ \{1.1f,\ 1.2f,\ 1.3f,\ 1.4f,\ 1.5f,\ 1.6f,\ 1.7f\}\;\n\t\t\t//float\ scalar\ =\ 10.3\;\n\n\t\t\tprintVector(\"vec\",\ vec)\;\n\t\t\tprintScalar(\"scalar\",\ scalar)\;\n\n\t\t\tfloat\[\]\ multiply_result\ =\ multiplyRef.multiply(vec,\ scalar)\;\n\n\t\t\tSystem.out.print(\"multiply(vec,\ scalar)\ \")\;\n\t\t\tprintVector(\"\",\ multiply_result)\;\n\t\n\t\t\tSystem.out.println(\"==============================\")\;\n\n\t\t\tfloat\[\]\[\]\ matrix1\ =\ \{\{1,\ 2,\ 3\},\ \{4,\ 5,\ 6\},\ \{7,\ 8,\ 9,\ 10\}\}\;\n\t\t\tfloat\[\]\[\]\ matrix2\ =\ \{\{1,\ 2\},\ \{4,\ 5,\ 6\},\ \{7,\ 8,\ 9,\ 10\}\}\;\n\n\t\t\tprintMatrix(\"matrix1\",\ matrix1)\;\n\t\t\tSystem.out.println(\"Sum\ =\ \"\ +\ multiplyRef.sum_matrix(matrix1))\;\n\n\t\t\tSystem.out.println(\"==============================\")\;\n\t\t\n\t\t\tprintMatrix(\"matrix2\",\ matrix2)\;\n\t\t\tSystem.out.println(\"Sum\ =\ \"\ +\ multiplyRef.sum_matrix(matrix2))\;\n\t\n\n\t\t\}\ catch\ (Exception\ e)\ \{\n\t\t\tSystem.out.println(\"ERROR:\ \"\ +\ e)\;\n\t\t\te.printStackTrace(System.out)\;\n\t\t\}\n\t\}\n\n\tprivate\ static\ void\ printVector(String\ vec_name,\ float\[\]\ vec)\ \{\n\t\tSystem.out.print(vec_name\ +\ \"\ =\ \{\")\;\n\t\tfor\ (int\ i\ =\ 0\;\ i\ <\ vec.length\;\ i++)\ \{\n\t\t\tif\ (i\ <\ vec.length\ -\ 1)\n\t\t\t\tSystem.out.print(vec\[i\]\ +\ \",\ \")\;\n\t\t\telse\n\t\t\t\tSystem.out.print(vec\[i\]\ +\ \"\}\\n\")\;\n\t\t\}\n\n\t\}\n\n\tpublic\ static\ void\ printScalar(String\ scalar_name,\ float\ scalar)\ \{\n\t\tSystem.out.println(scalar_name\ +\ \"\ =\ \"\ +\ scalar)\;\ \t\n\t\}\n\n\tpublic\ static\ void\ printMatrix(String\ matrix_name,\ float\[\]\[\]\ matrix)\ \{\n\t\tSystem.out.println(matrix_name\ +\ \":\")\;\n\t\tfor\ (int\ i\ =\ 0\;\ i\ <\ matrix.length\;\ i++)\ \{\n\t\t\tSystem.out.print(\"\{\")\;\t\n\t\t\tfor\ (int\ j\ =\ 0\;\ j\ <\ matrix\[i\].length\;\ j++)\ \{\n\t\t\t\tif\ (j\ <\ matrix\[i\].length\ -\ 1)\n\t\t\t\t\tSystem.out.print(matrix\[i\]\[j\]\ +\ \",\ \")\;\n\t\t\t\telse\n\t\t\t\t\tSystem.out.print(matrix\[i\]\[j\]\ +\ \"\}\\n\")\;\n\t\t\t\}\n\t\t\}\n\t\}\n\}\n\t\n\n\n\nWydruki\ z\ konsoli\ po\ uruchomieniu\ serwera\ oraz\ klienta.\n-----------------------------------------\n--------------wydruk\ (serwer)------------\n-----------------------------------------\n\[22:24\]:java\ MultiplyServer\nMultiplyServant()\ instatiating...\nIOR\ =\ IOR:000000000000002249444c3a436f7262614d756c7469706c794170702f4d756c7469706c793a312e30000000000000010000000000000082000102000000000a3132372e302e312e3100c81900000031afabcb000000002026c89b6000000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002\norb.run()\;\nmultiply(vector,\ scalar)\;\nsum_matrix(matrix)\;\nsum_matrix(matrix)\;\n\n-----------------------------------------\n--------------wydruk\ (klient)------------\n-----------------------------------------\n\[22:17\]:java\ MultiplyClient\ \nfloat'y\ zapisuj\ z\ \",\"\ (przecinek),\ nie\ z\ \".\"\ (kropka)\nScalar:\ 1\nLength\ of\ vector:\ 1\n2\n==============================\nvec\ =\ \{2.0\}\nscalar\ =\ 1.0\nmultiply(vec,\ scalar)\ \ =\ \{2.0\}\n==============================\nmatrix1:\n\{1.0,\ 2.0,\ 3.0\}\n\{4.0,\ 5.0,\ 6.0\}\n\{7.0,\ 8.0,\ 9.0,\ 10.0\}\nSum\ =\ 55\n==============================\nmatrix2:\n\{1.0,\ 2.0\}\n\{4.0,\ 5.0,\ 6.0\}\n\{7.0,\ 8.0,\ 9.0,\ 10.0\}\nSum\ =\ 52\n\n\n\n*-------------*\n|\ Zadanie\ 25.\ |\n*-------------*\nZadanie\ wykona³em\ w\ trakcie\ zajêæ.\ Wykorzysta³em\ przyk³ady\ ze\ strony,\ wskazane\ przez\ prowadz±cego.\nUtworzy³em\ referencjê\ do\ obiektu\ \"ScriptCommander\"\ w\ NamingService'ie\ prowadz±cego.\n\n-----------------------------------------\n-----------kod\ konsola_1.tcl-------------\n-----------------------------------------\nppend\ auto_path\ ./combat-tcl-0.7.4\npackage\ require\ combat\n\nsource\ COS_ns.tcl\ncombat::ir\ add\ \$_ir_COS_ns\n\nset\ f\ \[open\ \{nsd.IOR\}\ \"r\"\]\;\ set\ ior\ \[read\ \$f\]\;\ close\ \$f\n\nset\ ns\ \[corba::string_to_object\ \$ior\]\n\n\$ns\ list\ 10\ x\ y\;\ join\ \$x\ \\n\n\n\$ns\ rebind\ \{\{id\ \"ScriptCommander\"\ kind\ \"\"\}\}\ \$ns\n\n\n\n-----------------------------------------\n-----------kod\ konsola_2.tcl-------------\n-----------------------------------------\nlappend\ auto_path\ ./combat-tcl-0.7.4\npackage\ re\ combat\n\nsource\ COS_ns.tcl\ncombat::ir\ add\ \$_ir_COS_ns\n\nset\ f\ \[open\ \{nsd.IOR\}\ \"r\"\]\;\ set\ ior\ \[read\ \$f\]\;\ close\ \$f\n\nset\ ns\ \[corba::string_to_object\ \$ior\]\n\nset\ answer\ \[\$ns\ resolve_str\ \"ScriptCommander\"\]\n\n\$answer\ list\ 10\ x\ y\;\ join\ \$x\ \\n\n\n\n\nPo\ uruchomieniu\ linijki\ \"\$ns\ list\ 10\ x\ y\;\ join\ \$x\\n\"\ w\ konsoli_1\ (przed\ dodaniem\ nowej\ referencji)\n-----------------------------------------\n-----------wydruk\ z\ konsoli_1------------\n-----------------------------------------\n\ \ #%\ binding_name\ \{\{id\ EventChannelFactory\ kind\ \{\}\}\}\ binding_type\ nobject\nbinding_name\ \{\{id\ PropertySetDefFactory\ kind\ \{\}\}\}\ binding_type\ nobject\nbinding_name\ \{\{id\ PropertySetFactory\ kind\ \{\}\}\}\ binding_type\ nobject\nbinding_name\ \{\{id\ propset1\ kind\ \{\}\}\}\ binding_type\ nobject\n\nPo\ uruchomieniu\ linijki\ \"\$answer\ list\ 10\ x\ y\;\ join\ \$x\\n\"\ w\ konsoli_2\ (po\ dodaniu\ ju¿\ swojej\ referencji)\n-----------------------------------------\n-----------wydruk\ z\ konsoli_2------------\n-----------------------------------------\n\ \ #%\ binding_name\ \{\{id\ EventChannelFactory\ kind\ \{\}\}\}\ binding_type\ nobject\nbinding_name\ \{\{id\ PropertySetDefFactory\ kind\ \{\}\}\}\ binding_type\ nobject\nbinding_name\ \{\{id\ PropertySetFactory\ kind\ \{\}\}\}\ binding_type\ nobject\nbinding_name\ \{\{id\ ScriptCommander\ kind\ \{\}\}\}\ binding_type\ nobject\ \t\t\t<--\ nowy\ wpis\nbinding_name\ \{\{id\ propset1\ kind\ \{\}\}\}\ binding_type\ nobject\n\n\n\n\n
