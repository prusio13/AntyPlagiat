przedmiot TAS temat A nr_indeksu 396413 liczba_pkt 5 

\n\nZadanie\ 1\ --------------------------------\n\ns396413@pc23l:~/My\ Documents/TAS/Temat\ A/Zad1\$\ rpcgen\ -aC\ Zad1.x\n\nTak\ wygl±da\ macierz\ któr±\ plik.x\ ma\ wygenerowaæ\ w\ jêzyku\ C:\n\nstruct\ Macierz\ \{\n\ \ float\ Elem\ <>\;\n\ \ int\ IleW\;\ int\ IleK\;\n\}\;\n\nW\ odpowiedzi\ otrzymujemy:\n\nstruct\ Macierz\ \{\n\tstruct\ \{\n\t\tu_int\ Elem_len\;\n\t\tfloat\ *Elem_val\;\n\t\}\ Elem\;\n\tint\ IleW\;\n\tint\ IleK\;\n\}\;\n\nTak\ wygl±da\ wygenerowana\ macierz\ w\ C.\n\nZadanie\ 2\ --------------------------------\n\nWywo³ujemy\ rpcgen:\ns396413@pc23l:~/My\ Documents/TAS/Temat\ A/Zad2\$\ rpcgen\ -aC\ Zad2.x\n\nKod\ serwera\ powinien\ wygl±daæ\ tak:\n\n#include\ \"Zad2.h\"\n\nint\ *\nsuma_1_svc(ParaLi\ *argp,\ struct\ svc_req\ *rqstp)\n\{\n\tstatic\ int\ \ result\;\n\n\tresult\ =\ argp->x1\ +\ argp->x2\;\n\ \ \ \n\ \ \ \ return\ &result\;\n\n\}\n\nNatomiast\ kod\ clienta\ wygl±da\ tak(wklejam\ kod\ g³ównie\ tam\ gdzie\ robi³em\ zmiany\ w\ kodzie):\n\nprogservice_1(char\ *host,\ int\ a,\ int\ b)\n\{\n\tCLIENT\ *clnt\;\n\tint\ \ *result_1\;\n\tParaLi\ \ suma_1_arg\;\n\t\n\tsuma_1_arg.x1\ =\ a\;\n\tsuma_1_arg.x2\ =\ b\;\n\nresult_1\ =\ suma_1(&suma_1_arg,\ clnt)\;\n\tif\ (result_1\ ==\ (int\ *)\ NULL)\ \{\n\t\tclnt_perror\ (clnt,\ \"call\ failed\")\;\n\t\}\nprintf(\"Wynik:\ %d\\n\",*result_1)\;\n\nmain\ (int\ argc,\ char\ *argv\[\])\n\{\n\tchar\ *host\;\n\n\tif\ (argc\ <\ 2)\ \{\n\t\tprintf\ (\"usage:\ %s\ server_host\\n\",\ argv\[0\])\;\n\t\texit\ (1)\;\n\t\}\n\thost\ =\ argv\[1\]\;\n\tprogservice_1\ (host,(int)(*argv\[2\]\ -\ '0'),(int)(*argv\[3\]\ -\ '0'))\;\n\nWywo³anie\ w\ konsoli:\n\nSerwer:\n\ns396413@pc23l:~/My\ Documents/TAS/Temat\ A/Zad2\$\ ./Zad2_server\n\nKlient:\n\ns396413@pc23l:~/My\ Documents/TAS/Temat\ A/Zad2\$\ ./Zad2_client\ localhost\ 6\ 1\nWynik:\ 7\n\nZadanie\ 3\ --------------------------------\n\nUsuwam\ z\ pliku.x\ nastêpuj±ce\ linijki:\n\n\tstruct\ TrzyMacierze\ \{\ Mac\ M1\;\ Mac\ M2\;\ Mac\ M3\;\ \}\;\n\ttypedef\ struct\ TrzyMacierze\ TrzyMac\;\n\tvoid\ OperacjaNaMacierzach(TrzyMac)\ =\ 2\;\n\nNastêpnie\ wykonuje\ rpcgen:\n\ns396413@pc22m:~/My\ Documents/TAS/Temat\ A/Zad3\$\ rpcgen\ -aC\ Zad3.x\n\n\nNastêpnie\ w\ kliencie\ mamy\ taki\ kod:\n\nvoid\nprogmacierze_1(char\ *host)\n\{\n\tCLIENT\ *clnt\;\n\tvoid\ \ *result_1\;\n\tMac\ \ pokazmacierz_1_arg\;\n\n\tprintf(\"Podaj\ liczbê\ wierszy:\ \\n\")\;\n\tscanf(\"%i\",\ &pokazmacierz_1_arg.IleW)\;\n\n\tprintf(\"Podaj\ liczbê\ kolumn:\ \\n\")\;\n\tscanf(\"%i\",\ &pokazmacierz_1_arg.IleK)\;\n\t\n\tpokazmacierz_1_arg.Elem.Elem_len\ =\ pokazmacierz_1_arg.IleW\ *\ pokazmacierz_1_arg.IleK\;\n\tpokazmacierz_1_arg.Elem.Elem_val\ =\ calloc(pokazmacierz_1_arg.Elem.Elem_len,\ sizeof(float))\;\n\n\tint\ i\ =\ 0\;\n\tfor\ (i\ =\ 0\;\ i\ <\ pokazmacierz_1_arg.IleW\ *\ pokazmacierz_1_arg.IleK\;\ i++)\ \{\n\t\tprintf(\"Podaj\ warto¶æ\ %i\\n\",\ i)\;\n\t\tfloat\ wartosc\ =\ 0\;\n\t\tscanf(\"%f\",\ &wartosc)\;\n\t\tpokazmacierz_1_arg.Elem.Elem_val\[i\]\ =\ wartosc\;\n\t\}\n\n\n\tprintf(\"Odpalony\ klient.\ Test\")\;\n\n#ifndef\tDEBUG\n\tclnt\ =\ clnt_create\ (host,\ ProgMacierze,\ VerMacierze,\ \"udp\")\;\n\tif\ (clnt\ ==\ NULL)\ \{\n\t\tclnt_pcreateerror\ (host)\;\n\t\texit\ (1)\;\n\t\}\n#endif\t/*\ DEBUG\ */\n\n\tresult_1\ =\ pokazmacierz_1(&pokazmacierz_1_arg,\ clnt)\;\n\tif\ (result_1\ ==\ (void\ *)\ NULL)\ \{\n\t\tclnt_perror\ (clnt,\ \"call\ failed\")\;\n\t\}\n#ifndef\tDEBUG\n\tclnt_destroy\ (clnt)\;\n#endif\t\ /*\ DEBUG\ */\n\}\n\n\nint\nmain\ (int\ argc,\ char\ *argv\[\])\n\{\n\tchar\ *host\;\n\n\tif\ (argc\ <\ 2)\ \{\n\t\tprintf\ (\"usage:\ %s\ server_host\\n\",\ argv\[0\])\;\n\t\texit\ (1)\;\n\t\}\n\thost\ =\ argv\[1\]\;\n\tprogmacierze_1\ (host)\;\nexit\ (0)\;\n\}\n\nA\ na\ serwerze\ taki:\n\nvoid\ *\npokazmacierz_1_svc(Mac\ *argp,\ struct\ svc_req\ *rqstp)\n\{\n\tstatic\ char\ *\ result\;\n\tprintf(\"Serwer\\n\")\;\n\tfor\ (int\ i\ =\ 0\;\ i\ <\ argp->IleW\ *\ argp->IleK\;\ i++)\ \{\n\t\tprintf(\"Element\[%i\]\ =\ %f\\n\",\ i,\ argp->Elem.Elem_val\[i\])\;\n\t\}\n\n\treturn\ (void\ *)\ &result\;\n\}\n\nNastêpnie\ wykonujemy\ makefile:\n\ns396413@pc22m:~/My\ Documents/TAS/Temat\ A/Zad3\$\ make\ -f\ Makefile.Zad3\ncc\ -g\ \ \ \ -c\ -o\ plik_clnt.o\ plik_clnt.c\ncc\ -g\ \ \ \ -c\ -o\ plik_client.o\ plik_client.c\ncc\ -g\ \ \ \ -c\ -o\ plik_xdr.o\ plik_xdr.c\ncc\ -g\ \ \ \ \ -o\ plik_client\ \ plik_clnt.o\ plik_client.o\ plik_xdr.o\ -lnsl\ \ncc\ -g\ \ \ \ -c\ -o\ plik_svc.o\ plik_svc.c\ncc\ -g\ \ \ \ -c\ -o\ plik_server.o\ plik_server.c\ncc\ -g\ \ \ \ \ -o\ plik_server\ \ plik_svc.o\ plik_server.o\ plik_xdr.o\ -lnsl\n\nOdpalamy\ serwer:\n\ns396413@pc22m:~/My\ Documents/TAS/Temat\ A/Zad3\$\ ./Zad3_server.c\n\nNastêpnie\ klienta\ na\ localhoscie:\n\ns396413@pc22m:~/My\ Documents/TAS/Temat\ A/Zad3\$\ ./Zad3_client.c\ localhost\nIleW:\ \n4\nIleK:\ \n3\nGive\ elements\ 0\n1\nGive\ elements\ 1\n2\nGive\ elements\ 2\n3\nGive\ elements\ 3\n4\nGive\ elements\ 4\n5\ \nGive\ elements\ 5\n6\nGive\ elements\ 6\n7\nGive\ elements\ 7\n8\nGive\ elements\ 8\n9\nGive\ elements\ 9\n10\nGive\ elements\ 10\n11\nGive\ elements\ 11\n12\n\nA\ na\ serwerze\ takie\ wydruki:\n\n1.000000\ 2.000000\ 3.000000\ 4.000000\ \n5.000000\ 6.000000\ 7.000000\ 8.000000\ \n9.000000\ 10.000000\ 11.000000\ 12.000000\ \n\nZadanie\ 4\ --------------------------------\n\nNasz\ plik.x\ ma\ natêpuj±cy\ kod:\n\nstruct\ Macierz\ \{\n\ \ float\ Elem\ <>\;\n\ \ int\ IleW\;\ int\ IleK\;\n\}\;\ntypedef\ struct\ Macierz\ Mac\;\n\nstruct\ DwieMacierze\ \{\ Mac\ M1\;\ Mac\ M2\;\}\;\n\ntypedef\ struct\ DwieMacierze\ DwieMac\;\n\nprogram\ ProgMacierze\ \{\n\ \ version\ VerMacierze\ \{\n\ \ \ \ Mac\ dodaj(DwieMac)\ =\ 1\;\n\ \ \}\ =\ 1\;\n\}\ =\ 0x21001234\;\n\nNastêpnie\ robimy\ rpcgen:\n\ns396413@pc23f:~/My\ Documents/TAS/Temat\ A/zad4\$\ rpcgen\ -aC\ macierz.x\n\nKlient\ wygl±da\ tak:\n\n/*\n\ *\ This\ is\ sample\ code\ generated\ by\ rpcgen.\n\ *\ These\ are\ only\ templates\ and\ you\ can\ use\ them\n\ *\ as\ a\ guideline\ for\ developing\ your\ own\ functions.\n\ */\n\n#include\ \"macierz.h\"\n\n\nvoid\nprogmacierze_1(char\ *host)\n\{\n\tstatic\ char\ *\ result\;\n\t\n\tint\ i,\ j,\ newline\ =\ 0\;\n\tchar\ line\[argp->IleK*5\],\ temp\[5\]\;\n\tline\[0\]\ =\ 0\;\n\t\n\tprintf(\"Macierz\ wprowadzona\ przez\ klienta:\\n\")\;\n\tfor(i\ =\ 0\;\ i\ <\ argp->IleW\;\ i++)\ \{\n\t\tfor(j\ =\ newline\;\ j\ <\ newline\ +\ argp->IleK\;\ j++)\ \{\n\t\t\tsnprintf(temp,\ 5,\ \"%f\",\ argp->Elem.Elem_val\[j\])\;\n\t\t\tstrcat(line,\ strcat(temp,\ \"\ \"))\;\n\t\t\}\n\t\tprintf(\"%s\\n\",\ line)\;\n\t\tnewline\ +=\ argp->IleK\;\n\t\tline\[0\]\ =\ 0\;\n\t\}\n\n\treturn\ (void\ *)\ &result\;\n\}\n\n//macierz_client.c\n...\nvoid\nprogmacierze_1(char\ *host,\ int\ wiersze,\ int\ kolumny)\n\{\n\tCLIENT\ *clnt\;\n\tvoid\ \ *result_1\;\n\tMac\ \ pokazmacierz_1_arg\;\n\t\n\tpokazmacierz_1_arg.IleW\ =\ wiersze\;\n\tpokazmacierz_1_arg.IleK\ =\ kolumny\;\n\tpokazmacierz_1_arg.Elem.Elem_len\ =\ pokazmacierz_1_arg.IleW\ *\ pokazmacierz_1_arg.IleK\;\n\tpokazmacierz_1_arg.Elem.Elem_val\ =\ calloc(pokazmacierz_1_arg.Elem.Elem_len,\ sizeof(float))\;\n\n\tprintf(\"Wprowad¼\ macierz\ o\ wymiarach\ %d\ x\ %d\\n\",\ wiersze,\ kolumny)\;\n\tint\ i,\ j,\ id\ =\ 0\;\n\tfloat\ value\ =\ 0\;\n\tfor(i\ =\ 0\;\ i<\ wiersze\;\ i++)\ \{\n\t\tfor(j\ =\ 0\;\ j\ <\ kolumny\;\ j++)\ \{\n\t\t\tscanf(\"%f\",\ &value)\;\n\t\t\tpokazmacierz_1_arg.Elem.Elem_val\[id\]\ =\ value\;\n\t\t\tid++\;\n\t\t\}\n\t\}\n...\n\n//wywolanie\ funkcji\ w\ main\nprogmacierze_1\ (host,\ atoi(argv\[2\]),\ atoi(argv\[3\]))\;\n\n//na\ pierwszym\ terminalu\ns396462@lts:~/My\ Documents/TAS/zad3\$\ ./macierz_server\nMacierz\ wprowadzona\ przez\ klienta:\n1.01\ 2.02\ 3.03\ \n4.04\ 5.05\ 6.06\ \n\n//na\ drugim\ terminalu\ns396462@lts:~/My\ Documents/TAS/zad3\$\ ./macierz_client\ localhost\ 2\ 3\nWprowad¼\ macierz\ o\ wymiarach\ 2\ x\ 3\n1.01\ 2.02\ 3.03\ \n4.04\ 5.05\ 6.06\n\n\n\n\nZadanie\ 4\ -------------------------------------\nZdefiniuj\ proc\ RPC\ pozwalaj±ce\ wykonywaæ\ operacje\ na\ macierzach\ (mno¿enie\ i\ dodawanie)\;\nzwróæ\ uwagê,\ ¿e\ teraz\ macierze\ bêd±\ przekazywane\ w\ obie\ strony:\ kli->ser\ i\ ser->kli\;\nzadbaj\ o\ prawid³owe\ zwalnianie\ pamiêci\ (patrz\ te¿\ uwagi\ poni¿ej\ na\ ten\ temat!)\;\ndo\ sprawozdania\ wstaw\ wydruki\ i\ kluczowe\ fragmenty\ kodu\ (zwlaszcza\ plik.x)\n\n//dodawanie.x\nstruct\ Macierz\ \{\n\ \ float\ Elem\ <>\;\n\ \ int\ IleW\;\ int\ IleK\;\n\}\;\ntypedef\ struct\ Macierz\ Mac\;\n\nstruct\ DwieMacierze\ \{\ Mac\ M1\;\ Mac\ M2\;\}\;\n\ntypedef\ struct\ DwieMacierze\ DwieMac\;\n\nprogram\ ProgMacierze\ \{\n\ \ version\ VerMacierze\ \{\n\ \ \ \ Mac\ DodajMacierze(DwieMac)\ =\ 1\;\n\ \ \}\ =\ 1\;\n\}\ =\ 0x21001234\;\n\n//dodawanie_server.c\n...\nMac\ *\ndodajmacierze_1_svc(DwieMac\ *argp,\ struct\ svc_req\ *rqstp)\n\{\n\tstatic\ Mac\ \ result\;\n\tresult.IleW\ =\ argp->M1.IleW\;\n\tresult.IleK\ =\ argp->M1.IleK\;\n\n\tresult.Elem.Elem_len\ =\ result.IleW\ *\ result.IleK\;\n\tresult.Elem.Elem_val\ =\ calloc(result.Elem.Elem_len,\ sizeof(float))\;\n\n\tint\ i\;\n\tfor\ (i\ =\ 0\;\ i\ <\ result.Elem.Elem_len\;\ i++)\ \{\n\t\tresult.Elem.Elem_val\[i\]\ =\ argp->M1.Elem.Elem_val\[i\]\ +\ argp->M2.Elem.Elem_val\[i\]\;\n\t\}\n\treturn\ &result\;\n\}\n\n//dodawanie_client.c\n...\nvoid\nprogmacierze_1(char\ *host,\ int\ wiersze,\ int\ kolumny)\n\{\n\tCLIENT\ *clnt\;\n\tMac\ \ *result_1\;\n\tDwieMac\ \ dodajmacierze_1_arg\;\n\n\tdodajmacierze_1_arg.M1.IleW\ =\ wiersze\;\n\tdodajmacierze_1_arg.M1.IleK\ =\ kolumny\;\n\tdodajmacierze_1_arg.M1.Elem.Elem_len\ =\ wiersze*kolumny\;\n\tdodajmacierze_1_arg.M1.Elem.Elem_val\ =\ calloc(dodajmacierze_1_arg.M1.Elem.Elem_len,\ sizeof(float))\;\n\n\tdodajmacierze_1_arg.M2.IleW\ =\ wiersze\;\n\tdodajmacierze_1_arg.M2.IleK\ =\ kolumny\;\n\tdodajmacierze_1_arg.M2.Elem.Elem_len\ =\ wiersze*kolumny\;\n\tdodajmacierze_1_arg.M2.Elem.Elem_val\ =\ calloc(dodajmacierze_1_arg.M2.Elem.Elem_len,\ sizeof(float))\;\n\n\tprintf(\"Wprowad¼\ pierwsz±\ macierz\ o\ wymiarach\ %d\ x\ %d\\n\",\ wiersze,\ kolumny)\;\n\tint\ i,\ j,\ id\ =\ 0\;\n\tfloat\ value\ =\ 0\;\n\tfor(i\ =\ 0\;\ i<\ wiersze\;\ i++)\ \{\n\t\tfor(j\ =\ 0\;\ j\ <\ kolumny\;\ j++)\ \{\n\t\t\tscanf(\"%f\",\ &value)\;\n\t\t\tdodajmacierze_1_arg.M1.Elem.Elem_val\[id\]\ =\ value\;\n\t\t\tid++\;\n\t\t\}\n\t\}\n\n\tprintf(\"Wprowad¼\ drug±\ macierz\ o\ wymiarach\ %d\ x\ %d\\n\",\ wiersze,\ kolumny)\;\n\tid\ =\ 0\;\n\tfor(i\ =\ 0\;\ i<\ wiersze\;\ i++)\ \{\n\t\tfor(j\ =\ 0\;\ j\ <\ kolumny\;\ j++)\ \{\n\t\t\tscanf(\"%f\",\ &value)\;\n\t\t\tdodajmacierze_1_arg.M2.Elem.Elem_val\[id\]\ =\ value\;\n\t\t\tid++\;\n\t\t\}\n\t\}\n\n#ifndef\tDEBUG\n\tclnt\ =\ clnt_create\ (host,\ ProgMacierze,\ VerMacierze,\ \"udp\")\;\n\tif\ (clnt\ ==\ NULL)\ \{\n\t\tclnt_pcreateerror\ (host)\;\n\t\texit\ (1)\;\n\t\}\n#endif\t/*\ DEBUG\ */\n\n\tresult_1\ =\ dodajmacierze_1(&dodajmacierze_1_arg,\ clnt)\;\n\n\tprintf(\"Wynik\ dodawania\ macierzy:\\n\")\;\n\tint\ newline\ =\ 0\;\n\tchar\ line\[result_1->IleK*5\],\ temp\[5\]\;\n\tline\[0\]\ =\ 0\;\n\tfor(i\ =\ 0\;\ i\ <\ result_1->IleW\;\ i++)\ \{\n\t\tfor(j\ =\ newline\;\ j\ <\ newline\ +\ result_1->IleK\;\ j++)\ \{\n\t\t\tsnprintf(temp,\ 5,\ \"%f\",\ result_1->Elem.Elem_val\[j\])\;\n\t\t\tstrcat(line,\ strcat(temp,\ \"\ \"))\;\n\t\t\}\n\t\tprintf(\"%s\\n\",\ line)\;\n\t\tnewline\ +=\ result_1->IleK\;\n\t\tline\[0\]\ =\ 0\;\n\t\}\n\n\tif\ (result_1\ ==\ (Mac\ *)\ NULL)\ \{\n\t\tclnt_perror\ (clnt,\ \"call\ failed\")\;\n\t\}\n#ifndef\tDEBUG\n\tclnt_destroy\ (clnt)\;\n\tfree(pokazmacierz_1_arg.Elem.Elem_val)\;\n#endif\t\ /*\ DEBUG\ */\n\}\n\nSerwer\ wygl±da\ tak:\n\n/*\n\ *\ This\ is\ sample\ code\ generated\ by\ rpcgen.\n\ *\ These\ are\ only\ templates\ and\ you\ can\ use\ them\n\ *\ as\ a\ guideline\ for\ developing\ your\ own\ functions.\n\ */\n\n#include\ \"macierz.h\"\n\nMac\ *\ndodaj_1_svc(DwieMac\ *argp,\ struct\ svc_req\ *rqstp)\n\{\n\tstatic\ Mac\ \ result\;\n\tresult.IleW\ =\ argp->M1.IleW\;\n\tresult.IleK\ =\ argp->M1.IleK\;\n\n\tresult.Elem.Elem_len\ =\ result.IleW\ *\ result.IleK\;\n\tresult.Elem.Elem_val\ =\ calloc(result.Elem.Elem_len,\ sizeof(float))\;\n\n\tint\ i\;\n\tfor\ (i\ =\ 0\;\ i\ <\ result.Elem.Elem_len\;\ i++)\ \{\n\t\tresult.Elem.Elem_val\[i\]\ =\ argp->M1.Elem.Elem_val\[i\]\ +\ argp->M2.Elem.Elem_val\[i\]\;\n\t\}\n\treturn\ &result\;\n\}\n\nOdpalamy\ serwer:\n\ns396413@pc15e:~/My\ Documents/TAS/Temat\ A/zad4\$\ ./macierz_server.c\n\nnastpênie\ odplamy\ klineta:\n\ns396413@pc15e:~/My\ Documents/TAS/Temat\ A/zad4\$\ ./macierz_client.c\ 3\ 4\nWprowad¼\ pierwsz±\ macierz\ o\ wymiarach\ 3\ x\ 4\n2.45\ 4.56\ 2.34\ 5.23\n1.56\ 2.42\ 2.12\ 6.23\n1.23\ 5.76\ 4.21\ 7.00\n\nWprowad¼\ drug±\ macierz\ o\ wymiarach\ 3\ x\ 4\n2.45\ 4.56\ 2.34\ 5.23\n1.56\ 2.42\ 2.12\ 6.23\n1.23\ 5.76\ 4.21\ 7.00\n\nWynik\ dodawania:\n4.9\t9.12\ 4.68\n3.12\ 4.84\ 4.24\n2.46\ 11.52\ 8.42\n0\ 0\ 0\ 0\n\nZadanie\ 5\ --------------------------------\n\n25\ sekund\ trzeba\ odczekaæ\ na\ odpowied¼\ od\ serwera\ tak¿e\ po\ komendzie\ \"sleep(5)\"\ nasz\ klient\ otrzyma\ odpowied¼\ po\ 5\ sekundach\ a\ nasz\ retry\ to\ d³ugo¶æ\ po\ którym\ klient\ mo¿e\ ponownie\ wys³aæ\ pytanie\ na\ serwer.\n\nPoni¿ej\ przypadek\ gdzie\ nasz\ timeout\ oraz\ timeout_retry\ s±\ równe\ 2\ co\ powoduje\ ¿e\ procedura\ zostanie\ wywo³ana\ 3\ razy\n\nclnt\ =\ clnt_create\ (host,\ PROGSERVICE,\ VERSERVICE,\ \"udp\")\;\n\tif\ (clnt\ ==\ NULL)\ \{\n\t\tchar\ timeout\ =\ 2\;\n\t\tchar\ timeout_retry\ =\ 2\;\n\t\tclnt_pcreateerror\ (host)\;\n\t\tclnt_control(clnt,\ CLSET_TIMEOUT,\ &timeout)\;\n\t\tclnt_control(clnt,\ CLSET_RETRY_TIMEOUT,\ &timeout_retry)\;\n\t\texit\ (1)\;\n\n\n\nZadanie\ 6\ --------------------------------\n\nZadanie\ 7\ --------------------------------\n <sprawozdanie\ przedmiot=\"TAS/TEMATC\"\ temat=\"C\">\n<imie_nazwisko>Grzegorz\ Podgórski</imie_nazwisko>\n<nr_indeksu>396413</nr_indeksu>\n<liczba_pkt>5</liczba_pkt>\n<z>21</z>\n<z>22</z>\n<z>25</z>\n<z>32</z>\n<z>33</z>\n\n\nZadanie\ 22\ -------------------------------------------------------------------------------\n\ndodajemy\ 2\ typy\ do\ Hello3.idl\ntypedef\ sequence\ <long>\ t_wiersz\;\ntypedef\ sequence\ <t_wiersz>\ t_macierz\;\nlong\ sumaElementow(in\ t_macierz\ m)\;\n\npublic\ method\ sumaElementow\ \{m\}\ \{\n\ \ \ \ set\ w\ \[llength\ \$m\]\n\ \ \ \ set\ k\ \[llength\ \[lindex\ \$m\ 0\]\]\n\ \ \ \ set\ suma\ 0\n\ \ \ \ for\ \{set\ i\ 0\}\ \{\$i\ <\ \$w\}\ \{incr\ i\}\ \{\n\ \ \ \ \ \ for\ \{set\ j\ 0\}\ \{\$j\ <\ \$k\}\ \{incr\ j\}\n\ \ \ \ \ \ \ set\ suma\ \[expr\ \{\$suma\ +\ \[lindex\ \$m\ \$i\ \$j\]\}\]\n\ \ \ \ \ \ \}\n\ \ \ \ \}\n\ \ \ \ return\ \$suma\n\ \ \}\n\n\ni\ generujemy\ Hello3.tcl\n\n#\n#\ This\ file\ was\ automatically\ generated\ from\ /tmp/pzr_idl2tcl_4305.idl\n#\ by\ idl2tcl.\ Do\ not\ edit.\n#\n\nset\ _ir_pzr_idl2tcl_4305\ \\\n\{\{module\ \{IDL:HelloApp2:1.0\ HelloApp2\ 1.0\}\ \{\{interface\\\n\{IDL:HelloApp2/WywZwrotne:1.0\ WywZwrotne\ 1.0\}\ \{\}\ \{\{operation\\\n\{IDL:HelloApp2/WywZwrotne/metoda:1.0\ metoda\ 1.0\}\ string\ \{\}\ \{\}\}\}\}\ \{interface\\\n\{IDL:HelloApp2/Hello:1.0\ Hello\ 1.0\}\ \{\}\ \{\{operation\\\n\{IDL:HelloApp2/Hello/sayHello:1.0\ sayHello\ 1.0\}\ string\ \{\}\ \{\}\}\ \{operation\\\n\{IDL:HelloApp2/Hello/sayHello2:1.0\ sayHello2\ 1.0\}\ string\ \{\{in\ we\ string\}\}\ \{\}\}\\\n\{operation\ \{IDL:HelloApp2/Hello/podajLiczbe:1.0\ podajLiczbe\ 1.0\}\ long\ \{\}\ \{\}\}\\\n\{operation\ \{IDL:HelloApp2/Hello/sayHello_nowyObiekt:1.0\ sayHello_nowyObiekt\\\n1.0\}\ IDL:HelloApp2/Hello:1.0\ \{\}\ \{\}\}\ \{typedef\ \{IDL:HelloApp2/Hello/tab:1.0\ tab\\\n1.0\}\ \{array\ long\ 10\}\}\ \{operation\ \{IDL:HelloApp2/Hello/wektorRazy2:1.0\\\nwektorRazy2\ 1.0\}\ void\ \{\{in\ tab1\ IDL:HelloApp2/Hello/tab:1.0\}\ \{out\ tab2\\\nIDL:HelloApp2/Hello/tab:1.0\}\}\ \{\}\}\ \{operation\\\n\{IDL:HelloApp2/Hello/uruchomZwrotnaMet:1.0\ uruchomZwrotnaMet\ 1.0\}\ void\ \{\{in\\\nref\ IDL:HelloApp2/WywZwrotne:1.0\}\}\ \{\}\}\ \{operation\\\n\{IDL:HelloApp2/Hello/nowyObiekt:1.0\ nowyObiekt\ 1.0\}\ IDL:HelloApp2/Hello:1.0\\\n\{\}\ \{\}\}\ \{operation\ \{IDL:HelloApp2/Hello/powolnaMetoda:1.0\ powolnaMetoda\ 1.0\}\\\nvoid\ \{\}\ \{\}\}\ \{operation\ \{IDL:HelloApp2/Hello/callback:1.0\ callback\ 1.0\}\ void\\\n\{\{in\ o\ IDL:HelloApp2/WywZwrotne:1.0\}\}\ \{\}\}\ \{typedef\\\n\{IDL:HelloApp2/Hello/t_wiersz:1.0\ t_wiersz\ 1.0\}\ \{sequence\ long\}\}\ \{typedef\\\n\{IDL:HelloApp2/Hello/t_macierz:1.0\ t_macierz\ 1.0\}\ \{sequence\\\nIDL:HelloApp2/Hello/t_wiersz:1.0\}\}\ \{operation\\\n\{IDL:HelloApp2/Hello/sumaElementow:1.0\ sumaElementow\ 1.0\}\ long\ \{\{in\ m\\\nIDL:HelloApp2/Hello/t_macierz:1.0\}\}\ \{\}\}\}\}\}\}\}\n\n#\n#\ This\ is\ just\ to\ clear\ the\ interp\ from\ the\ ridiculously\ long\ string\ above\n#\n\nexpr\ 1\n\nwywoalnie\ w\ kliencie\n\$m\ sumaElementow\ \{\{1\ 2\ 3\}\ \{4\ 5\ 6\}\}\n\ \ #%\ 21\n\n\nZadanie\ 25\ -------------------------------------------------------------------------------\n\nlappend\ auto_path\ combat-tcl-0.7.4\n\ \ #%\ /home/students/s396413/TAS/TEMATC/c/tclkit/lib/tcl8.4\ /home/students/s396413/TAS/TEMATC/c/tclkit/lib\ /home/students/s396413/TAS/TEMATC/c/tclkit/lib/tk8.4\ combat-tcl-0.7.4\npackage\ require\ combat\n\ \ #%\ 0.7\n\ncorba::init\n\ \ #%\ \n\nsource\ zad25/COS_ns.tcl\n\ \ #%\ 1\ncombat::ir\ add\ \$_ir_COS_ns\n\ \ #%\ \n\nset\ ns\ \[corba::string_to_object\ http://mhanckow.students.wmi.amu.edu.pl/pliki/nsd.ior\]\n\ \ #%\ _combat_obj_1\n\n\$ns\ list\ 10\ x\ y\;\ join\ \$x\ \\n\n\ \ #%\ binding_name\ \{\{id\ EventChannelFactory\ kind\ \{\}\}\}\ binding_type\ nobject\nbinding_name\ \{\{id\ PropertySetDefFactory\ kind\ \{\}\}\}\ binding_type\ nobject\nbinding_name\ \{\{id\ PropertySetFactory\ kind\ \{\}\}\}\ binding_type\ nobject\nbinding_name\ \{\{id\ ob_mhanckow\ kind\ \{\}\}\}\ binding_type\ nobject\nbinding_name\ \{\{id\ qwe\ kind\ \{\}\}\}\ binding_type\ nobject\nbinding_name\ \{\{id\ sample\ kind\ \{\}\}\}\ binding_type\ ncontext\n\nsource\ zad25/Hello3.tcl\n\ \ #%\ 1\ncombat::ir\ add\ \$_ir_Hello3\n\ \ #%\ \n\nclass\ WywolanieZwrotne\ \{\n\ \ inherit\ PortableServer::ServantBase\n\ \ public\ method\ _Interface\ \{\}\ \{\n\ \ \ \ return\ \"IDL:HelloApp2/WywZwrotne:1.0\"\n\ \ \}\n\ \ public\ method\ metoda\ \{\}\ \{\n\ \ \ \ puts\ \"WywolanieZwrotne,\ metoda\ (\$licz)\"\;\ incr\ licz\n\ \ \ \ \n\ \ \ \ #\ to\ dziala\ ok\ ...\n\ \ \ \ #set\ poac\ \[corba::resolve_initial_references\ \"POACurrent\"\]\n\ \ \ \ #puts\ \"get_object_id=\[\$poac\ get_object_id\]\"\n\ \ \}\n\ \ private\ variable\ licz\ 0\n\}\nset\ obj\ \[WywolanieZwrotne\ #auto\]\n\ \ #%\ wywolanieZwrotne2\nset\ poa\ \[corba::resolve_initial_references\ \"RootPOA\"\]\n\ \ #%\ ::Combat::PortableServer::rootPOA0\nset\ mgr\ \[\$poa\ the_POAManager\]\n\ \ #%\ ::Combat::PortableServer::POA::pOAManager0\nset\ ref\ \[\$poa\ servant_to_reference\ \$obj\]\n\ \ #%\ _combat_obj_5\n\n\$ns\ to_name\ \"qwe\"\n\ \ #%\ \{id\ qwe\ kind\ \{\}\}\n\n\$ns\ rebind\ \[\$ns\ to_name\ \"qwe\"\]\ \$ref\n\n\$ns\ bind_new_context\ \[\$ns\ to_name\ sample\]\ \n\ \ #%\ _combat_obj_7\n\n\$ns\ resolve\ \[\$ns\ to_name\ \"sample/qwe\"\]\n\ \ #%\ _combat_obj_8\n\nset\ ns2\ \[\$ns\ resolve\ \[\$ns\ to_name\ sample\]\]\n\ \ #%\ _combat_obj_9\n\n\$ns2\ list\ 10\ x\ y\;\ join\ \$x\ \\n\n\ \ #%\ binding_name\ \{\{id\ qwe\ kind\ \{\}\}\}\ binding_type\ nobject\n\n\n==================================================\n\nZadanie\ 27\n\nklient\n\nlappend\ auto_path\ combat-tcl-0.7.4\n\ \ #%\ /home/students/s396413/TAS/TEMATC/c/tclkit/lib/tcl8.4\ /home/students/s396413/TAS/TEMATC/c/tclkit/lib\ /home/students/s396413/TAS/TEMATC/c/tclkit/lib/tk8.4\ ../combat-tcl-0.7.4\ combat-tcl-0.7.4\npackage\ require\ combat\n\ \ #%\ 0.7\n\ncorba::init\n\ \ #%\ \n\n\$m\ podajLiczbe\n\ \ #%\ 3\n\ \ #%\ 2\n\ \ #%\ 1\n\ \ #%\ 0\n\n\n\n\n\nZadanie\ 32\ -------------------------------------------------------------------------------\n\npojemnik.idl\nmodule\ xxx1\n\{\n\ \ \ \ interface\ Pojemnik\ \{\n\ \ \ \ \ \ attribute\ wstring\ wartosc\;\n\ \ \ \ \}\;\n\ \ \ \ valuetype\ Pojemnik2\ \{\n\ \ \ \ \ \ public\ wstring\ wartosc\;\n\ \ \ \ \ \ private\ wstring\ wartosc2\;\n\ \ \ \ \ \ void\ nic()\;\ //\ bez\ \"public\"!\n\ \ \ \ \}\;\n\ \ \ \ interface\ FabrykaPojemnikow\ \{\n\ \ \ \ \ \ Pojemnik\ utworz()\;\n\ \ \ \ \ \ Pojemnik2\ utworz2()\;\ //\ test\ przekazywania\ VT\ ser->kli\n\ \ \ \ \ \ string\ odbierz(in\ Pojemnik2\ par)\;\ //\ test\ przekazywania\ VT\ kli->ser\n\ \ \ \ \}\;\n\n\}\;\n\nwywolanie\nidlj\ pojemnik.idl\n\nPojemnik2Impl.java\n\npackage\ xxx1\;\n\npublic\ class\ Pojemnik2Impl\ extends\ Pojemnik2\ \{\n\n\tpublic\ void\ nic()\{\}\n\}\n\n\n\nserver.java\n\nimport\ xxx1.*\;\n\nimport\ org.omg.CORBA.*\;\nimport\ org.omg.PortableServer.*\;\nimport\ org.omg.CosNaming.*\;\nimport\ org.omg.CosNaming.NamingContextPackage.*\;\n\nimport\ java.io.*\;\n\npublic\ class\ Server\ \{\n\n\ \ \ \ public\ static\ void\ main(String\ args\[\])\n\ \ \ \ \{\n\ \ \ \ \ \ \ \ try\{\n\ \ \ \ \ \ \ \ \ \ \ \ ORB\ orb\ =\ ORB.init(args,\ null)\;\n\t\ \ \ \ \n\t\ \ \ \ \tPOA\ rootpoa=\ POAHelper.narrow(\n\t\ \ \ \ \ \ \torb.resolve_initial_references(\"RootPOA\"))\;\n\ \ \ \ \ \ \ \ \ \ \ \ rootpoa.the_POAManager().activate()\;\t\ \ \ \ \ \ \n\t\ \ \ \ \n\t\t\tFabrykaPojemnikowServant\ serv\ =\ new\ FabrykaPojemnikowServant(orb,\ rootpoa)\;\n\n\t\ \ \ \ \torg.omg.CORBA.Object\ ref=\ rootpoa.servant_to_reference(serv)\;\n\n\ \ \ \ \ \ \ \ \ \ \ \ String\ IOR=\ orb.object_to_string(ref)\;\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println(\"IOR=\"+IOR)\;\n\ \ \ \ \ \ \ \ \ \ \ \ PrintWriter\ out=\ new\ PrintWriter(new\ BufferedWriter(new\ FileWriter(\"FabrykaPojemnikow.IOR\")))\;\n\ \ \ \ \ \ \ \ \ \ \ \ out.println(IOR)\;\ out.close()\;\n\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println(\"orb.run()\;\")\;\n\ \ \ \ \ \ \ \ \ \ \ \ orb.run()\;\n\t\ \ \ \t\tSystem.out.println(\"orb.run()\;\ -\ koniec\")\;\n\ \ \ \ \ \ \ \ \}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ System.err.println(\"ERROR:\ \"\ +\ e)\;\n\ \ \ \ \ \ \ \ \ \ \ \ e.printStackTrace(System.out)\;\n\ \ \ \ \ \ \ \ \}\n\ \ \ \ \}\n\}\n\n\n\n\nPojemnikServant.java\n\nimport\ xxx1.*\;\n\nimport\ org.omg.CORBA.*\;\nimport\ org.omg.PortableServer.*\;\nimport\ org.omg.CosNaming.*\;\nimport\ org.omg.CosNaming.NamingContextPackage.*\;\n\nimport\ java.io.*\;\n\npublic\ class\ PojemnikServant\ extends\ PojemnikPOA\{\n\tprivate\ String\ _wartosc\;\n\t\n\tpublic\ String\ wartosc()\ \{\n\t\treturn\ _wartosc\;\n\t\}\n\n\tpublic\ void\ wartosc(String\ newWartosc)\{\n\t\tthis._wartosc\ =\ newWartosc\;\n\t\}\n\}\n\n\nFabrykaPojemnikowServant\n\nimport\ xxx1.*\;\n\nimport\ org.omg.CORBA.*\;\nimport\ org.omg.PortableServer.*\;\nimport\ org.omg.CosNaming.*\;\nimport\ org.omg.CosNaming.NamingContextPackage.*\;\n\nimport\ java.io.*\;\n\npublic\ class\ FabrykaPojemnikowServant\ extends\ FabrykaPojemnikowPOA\n\{\n\ \ \ \ private\ int\ licz\;\n\ \ \ \ private\ String\ str\;\n\ \ \ \ private\ ORB\ orb\;\n\tprivate\ POA\ poa\;\n\n\ \ \ \ FabrykaPojemnikowServant(ORB\ _orb,\ POA\ _poa)\n\ \ \ \ \{\n\ \ \ \ \ \ \ \ super()\;\n\ \ \ \ \ \ \ \ orb\ =\ _orb\;\n\t\tpoa\ =\ _poa\;\n\ \ \ \ \}\n\n\tpublic\ xxx1.Pojemnik\ utworz()\{\n\t\txxx1.Pojemnik\ x\ =\ null\;\n\t\ttry\{\n\t\t\tPojemnikServant\ pojemnik\ =\ new\ PojemnikServant()\;\n\t\t\tx\ =\ \ (xxx1.Pojemnik)\ poa.servant_to_reference(pojemnik)\;\n\t\t\}\ catch\ (Exception\ e)\ \{\n\ \ \ \ \ \ \ \ \ \ \ \ System.err.println(\"ERROR:\ \"\ +\ e)\;\n\ \ \ \ \ \ \ \ \ \ \ \ e.printStackTrace(System.out)\;\n\ \ \ \ \ \ \ \ \}\n\t\treturn\ x\;\n\t\}\n\n\tpublic\ xxx1.Pojemnik2\ utworz2()\{\n\t\txxx1.Pojemnik2Impl\ pojemnik\ =\ new\ xxx1.Pojemnik2Impl()\;\n\t\treturn\ pojemnik\;\n\t\}\n\n\ \ \tpublic\ String\ odbierz\ (xxx1.Pojemnik2\ par)\{\n\t\treturn\ \"Wartosc:\ \"+par.wartosc\;\n\t\}\n\}\n\nZadanie\ 33\ -------------------------------------------------------------------------------\n\nlappend\ auto_path\ combat-tcl-0.7.4\n\ \ #%\ /home/students/s396413/TAS/TEMATC/c/tclkit/lib/tcl8.4\ /home/students/s396413/TAS/TEMATC/c/tclkit/lib\ /home/students/s396413/TAS/TEMATC/c/tclkit/lib/tk8.4\ combat-tcl-0.7.4\npackage\ re\ combat\n\ \ #%\ 0.7\n\n\$m\ sayHello\n\ \ #%\ Jak\ sie\ trzymasz\ ???\ (5)\n\n\nset\ ir\ \[\$m\ _get_interface\]\n\ \ #%\ _combat_obj_3\n\$ir\ _is_a\ IDL:omg.org/CORBA/InterfaceDef:1.0\n\ \ #%\ 1\n\nsource\ zad33/corba_ir.tcl\n\ \ #%\ 1\n\ncombat::ir\ add\ \$_ir_corba_ir\n\ \ #%\ \n\$ir\ describe\n\ \ #%\ kind\ dk_Interface\ value\ \{\{struct\ IDL:omg.org/CORBA/InterfaceDescription:1.0\ \{name\ string\ id\ string\ defined_in\ string\ version\ string\ base_interfaces\ \{sequence\ string\}\}\}\ \{name\ Hello\ id\ IDL:HelloApp/Hello:1.0\ defined_in\ IDL:HelloApp:1.0\ version\ 1.0\ base_interfaces\ \{\}\}\}\n\nset\ x\ \[\$ir\ contents\ dk_Operation\ 1\]\n\ \ #%\ _combat_obj_5\n\n\$x\ describe\n\ \ #%\ kind\ dk_Operation\ value\ \{\{struct\ IDL:omg.org/CORBA/OperationDescription:1.0\ \{name\ string\ id\ string\ defined_in\ string\ version\ string\ result\ TypeCode\ mode\ \{enum\ \{OP_NORMAL\ OP_ONEWAY\}\}\ contexts\ \{sequence\ string\}\ parameters\ \{sequence\ \{struct\ IDL:omg.org/CORBA/ParameterDescription:1.0\ \{name\ string\ type\ TypeCode\ type_def\ \{Object\ IDL:omg.org/CORBA/IDLType:1.0\}\ mode\ \{enum\ \{PARAM_IN\ PARAM_OUT\ PARAM_INOUT\}\}\}\}\}\ exceptions\ \{sequence\ \{struct\ IDL:omg.org/CORBA/ExceptionDescription:1.0\ \{name\ string\ id\ string\ defined_in\ string\ version\ string\ type\ TypeCode\}\}\}\}\}\ \{name\ sayHello\ id\ IDL:HelloApp/Hello/sayHello:1.0\ defined_in\ IDL:HelloApp/Hello:1.0\ version\ 1.0\ result\ string\ mode\ OP_NORMAL\ contexts\ \{\}\ parameters\ \{\}\ exceptions\ \{\}\}\}\n\nlindex\ \[\$ir\ describe\]\ 3\ 1\n\ \ #%\ name\ Hello\ id\ IDL:HelloApp/Hello:1.0\ defined_in\ IDL:HelloApp:1.0\ version\ 1.0\ base_interfaces\ \{\}\n</sprawozdanie>\n\nZadanie\ 21\ -------------------------------------------------------------------------------\nCo¶\ z\ konsol±\ nie\ dzia³a\nNie\ odpala\ mi\ tcl.\nDo\ ogarniêcia\n//TODO\n
