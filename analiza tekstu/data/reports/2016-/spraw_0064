przedmiot TAS temat C nr_indeksu 396317 liczba_pkt 3 




Zadanie 20.
-------------

1) Wszystko w JAVA

Serwer - java HelloServer2

Wydruk:

damian@damian-Lenovo-IdeaPad-Y550p java HelloServer2 
HelloServant2()
IOR=IOR:000000000000001849444c3a48656c6c6f417070322f48656c6c6f3a312e3000000000010000000000000082000102000000000a3132372e302e312e3100865a00000031afabcb0000000020247e720200000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002
orb.run();

Drugi terminal - klient "java HelloClient2"

Wydruk:

damian@damian-Lenovo-IdeaPad-Y550p java HelloClient2 
podajLiczbe=0
sayHello=Hello world !!!


Po wywo³aniu kilku klientów pod rz±d:

Wydruk:

podajLiczbe(), 0
sayHello()
8: 0, 0, 0, 1, 0, 0, 0, 0, 
podajLiczbe(), 1
sayHello()
8: 0, 0, 0, 1, 0, 0, 0, 0, 
podajLiczbe(), 2
sayHello()
8: 0, 0, 0, 1, 0, 0, 0, 0, 
podajLiczbe(), 3
sayHello()
8: 0, 0, 0, 1, 0, 0, 0, 0, 
podajLiczbe(), 4
sayHello()
8: 0, 0, 0, 1, 0, 0, 0, 0, 


2) Wszystko w TCL

Wpisujemy w konsoli TCL ./tclkit konsola2c.tcl ser.tcl, potem w drugiej konsoli ./tclkit konsola2c cli.tcl i nastêpnie ca³o¶ciowa kompilacja pliku w 1-szej konsoli.

Wydruk:

obj=helloWorld0
poa=::Combat::PortableServer::rootPOA0
ref=_combat_obj_1
HelloWorld IOR = IOR:01666f6f1800000049444c3a48656c6c6f417070322f48656c6c6f3a312e300002000000000000003800000001010266120000007a69616368752d6c696e75782d6d696e7400258a120000002f313434383031373131392f353930382a31666f00000000010000002400000001666f6f01000000010000001400000001666f6f01000105000000000901010000000000

Nastêpnie kompilujemy pocz±tek pliku cli.tcl w drugiej konsoli TCL, dlatego mo¿emy u¿ywaæ utworzonych metod:

Wydruk:

$m podajLiczbe
  #% 13
  #% 12
  #% 11
  #% 10
  #% 9
  #% 8
  #% 7
  #% 6
  #% 5
  #% 4
  #% 3
  #% 2
  #% 1

3) Serwer: JAVA, Klient: TCL. 
Odpalamy serwer javovy, nastêpnie kopiujemy plik Hello.IOR do folderu, w którym znajduje siê klient TCL.

Wydruki z serwera:

damian@damian-Lenovo-IdeaPad-Y550p java HelloServer2
HelloServant2()
IOR=IOR:000000000000001849444c3a48656c6c6f417070322f48656c6c6f3a312e3000000000010000000000000082000102000000000a3132372e302e312e3100843f00000031afabcb000000002024a09f6400000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002
orb.run();
podajLiczbe(), 0
podajLiczbe(), 1
podajLiczbe(), 2
podajLiczbe(), 3
podajLiczbe(), 4
podajLiczbe(), 5
podajLiczbe(), 6
podajLiczbe(), 7
podajLiczbe(), 8
podajLiczbe(), 9
podajLiczbe(), 10
podajLiczbe(), 11
podajLiczbe(), 12
podajLiczbe(), 13
podajLiczbe(), 14
podajLiczbe(), 15
podajLiczbe(), 16
podajLiczbe(), 17
podajLiczbe(), 18
podajLiczbe(), 19
podajLiczbe(), 20




Wydruki klient:

$m podajLiczbe
  #% 20
  #% 19
  #% 18
  #% 17
  #% 16
  #% 15
  #% 14
  #% 13
  #% 12
  #% 11
  #% 10
  #% 9
  #% 8
  #% 7
  #% 6
  #% 5
  #% 4
  #% 3
  #% 2
  #% 1
  #% 0



 4) Serwer: TCL, klient: JAVA
 Uruchamiamy serwer, kopiujemy plik Hello.IOR do folderu z klientem Javowym


Wydruk serwera:

obj=helloWorld0
poa=::Combat::PortableServer::rootPOA0
ref=_combat_obj_1
HelloWorld IOR = IOR:01666f6f1800000049444c3a48656c6c6f417070322f48656c6c6f3a312e300002000000000000003800000001010266120000007a69616368752d6c696e75782d6d696e740032de120000002f313434383031383833332f363234372a31666f00000000010000002400000001666f6f01000000010000001400000001666f6f01000105000000000901010000000000

Wydruki klienta:

damian@damian-Lenovo-IdeaPad-Y550p java HelloClient2 
podajLiczbe=0
sayHello=Jak sie masz ???
sayHello2("msg1") = sayHello2: str= msg1
sayHello2("msg2") = sayHello2: str= msg1 msg2
damian@damian-Lenovo-IdeaPad-Y550p java HelloClient2 
podajLiczbe=1
sayHello=Jak sie masz ???
sayHello2("msg1") = sayHello2: str= msg1 msg2 msg1
sayHello2("msg2") = sayHello2: str= msg1 msg2 msg1 msg2
damian@damian-Lenovo-IdeaPad-Y550p java HelloClient2 
podajLiczbe=2
sayHello=Jak sie masz ???
sayHello2("msg1") = sayHello2: str= msg1 msg2 msg1 msg2 msg1
sayHello2("msg2") = sayHello2: str= msg1 msg2 msg1 msg2 msg1 msg2




Zadanie 25.
-----------


konsola_1.tcl:

ppend auto_path ./combat-tcl-0.7.4
package require combat

source COS_ns.tcl
combat::ir add $_ir_COS_ns

set f [open {nsd.IOR} "r"]; set ior [read $f]; close $f

set ns [corba::string_to_object $ior]

$ns list 10 x y; join $x \n

$ns rebind {{id "ScriptCommander" kind ""}} $ns



konsola_2.tcl:

lappend auto_path ./combat-tcl-0.7.4
package re combat

source COS_ns.tcl
combat::ir add $_ir_COS_ns

set f [open {nsd.IOR} "r"]; set ior [read $f]; close $f

set ns [corba::string_to_object $ior]

set answer [$ns resolve_str "ScriptCommander"]

$answer list 10 x y; join $x \n



Po wywo³aniu  $ns list 10 x y; join $x\n w konsola_1:


Wydruk konsola_1:

  #% binding_name {{id EventChannelFactory kind {}}} binding_type nobject
binding_name {{id PropertySetDefFactory kind {}}} binding_type nobject
binding_name {{id PropertySetFactory kind {}}} binding_type nobject
binding_name {{id propset1 kind {}}} binding_type nobject

Po wywo³aniu $answer list 10 x y; join $x\n w konsola_2 i po dodaniu swojej referencji:


Wydruk konsola_2:

  #% binding_name {{id EventChannelFactory kind {}}} binding_type nobject
binding_name {{id PropertySetDefFactory kind {}}} binding_type nobject
binding_name {{id PropertySetFactory kind {}}} binding_type nobject
binding_name {{id ScriptCommander kind {}}} binding_type nobject 
binding_name {{id propset1 kind {}}} binding_type nobject



Zadanie 30.
------------

Razem z kolegami doszli¶my do wniosków, ¿e mo¿na by³o u¿yc serwera javovego z tematu B, poniewa¿ OdleglyObiekt jest dok³adnie tym, który jest wymagany.

Kompilacja sss.java:

damian@damian-Lenovo-IdeaPad-Y550p javac -Xlint sss.java 
(-Xlint, ze wzglêdu na wy¶wietlanie ostrze¿eñ bez tekstu)


rmic -iiop -idl -noValueMethods CCC1
tylko zamiast CCC1 z OdleglaKlasa, czyli:
rmic -iiop -idl -novalueMethods OdleglaKlasa

Otrzymujemy:

OdleglyObiekt.idl
i
OdleglaKlasa.idl
}
