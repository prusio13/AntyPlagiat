przedmiot TAS temat A nr_indeksu 396309 liczba_pkt 4 

\n\nZadanie\ 1\ ----------------------------------------------------------------------\n\n--------plik.x-------\nstruct\ Macierz\ \{\n\ \ float\ Elem\ <>\;\n\ \ int\ IleW\;\ int\ IleK\;\n\}\;\n\[...\]\n\n--------plik.h-------\nstruct\ Macierz\ \{\n\tstruct\ \{\n\t\tu_int\ Elem_len\;\n\t\tfloat\ *Elem_val\;\n\t\}\ Elem\;\n\tint\ IleW\;\n\tint\ IleK\;\n\}\;\n\[...\]\n\nPrzetlumaczona\ tablica\ przez\ rpcgen.\n\n\nZadanie\ 2\ ----------------------------------------------------------------------\n\n################\ sum_client.c\ ####################################\n\nvoid\nprogservice_1(char\ *host,int\ x,\ int\ y)\n\{\n\tCLIENT\ *clnt\;\n\tint\ \ *result_1\;\n\tParaLi\ \ suma_1_arg\;\n\t\n\tint\ x\;\n\tint\ y\;\n\n\tsuma_1_arg.x1=x\;\n\ \ \ \ suma_1_arg.x2=y\;\n\n\n--------------main()--------------\nint\nmain\ (int\ argc,\ char\ *argv\[\])\n\{\n\tchar\ *host\;\n\n\tif\ (argc\ <\ 2)\ \{\n\t\tprintf\ (\"usage:\ %s\ server_host\\n\",\ argv\[0\])\;\n\t\texit\ (1)\;\n\t\}\n\thost\ =\ argv\[1\]\;\n\tint\ arg_1\ =\ atoi(argv\[2\])\;\t\n\tint\ arg_2\ =\ atoi(argv\[3\])\;\t\n\n\tprogservice_1\ (host,\ arg_1,\ arg_2)\;\nexit\ (0)\;\n\}\n\n#################\ sum_server.c\ ###################################\n\nsuma_1_svc(ParaLi\ *argp,\ struct\ svc_req\ *rqstp)\n\{\n\tstatic\ int\ \ result\;\n\tresult=argp->x1+argp->x2\;\n\treturn\ &result\;\n\}\nW\ pliku\ sum_server.c\ nastêpuje\ wykonanie\ dzia³ania\ i\ przypisanie\ wyniku\ do\ zmiennej\ result.\nPliki\ serwera\ i\ klienta\ nale¿a³o\ odpaliæ\ w\ osobnych\ konsolach.\n\nZadanie\ 3\ ----------------------------------------------------------------------\n\n####################\ matrix.x\ ###########################\n\nstruct\ Macierz\ \{\n\ \ float\ Elem\ <>\;\n\ \ int\ IleW\;\ int\ IleK\;\n\}\;\ntypedef\ struct\ Macierz\ Mac\;\n\nprogram\ ProgMacierze\ \{\n\ \ version\ VerMacierze\ \{\n\ \ \ \ void\ PokazMacierz(Mac)\ =\ 1\;\n\ \ \}\ =\ 1\;\n\}\ =\ 0x21001234\;\n\n#####################\ matrix_client.c\ #####################\n\nvoid\nprogmacierze_1(char\ *host)\n\{\n\tCLIENT\ *clnt\;\n\tvoid\ \ *result_1\;\n\tMac\ \ pokazmacierz_1_arg\;\n\tfloat\ x\ =\ 0\;\n\n\t\n\tprintf(\"Kolumny:\ \\n\")\;\n\tscanf(\"%i\",\ &pokazmacierz_1_arg.IleK)\;\n\t\n\tprintf(\"Wiersze:\ \\n\")\;\n\tscanf(\"%i\",\ &pokazmacierz_1_arg.IleW)\;\n\t\n\tpokazmacierz_1_arg.Elem.Elem_len\ =\ pokazmacierz_1_arg.IleW\ *\ pokazmacierz_1_arg.IleK\;\n\tpokazmacierz_1_arg.Elem.Elem_val\ =\ calloc(pokazmacierz_1_arg.Elem.Elem_len,\ sizeof(float))\;\n\n\tfor\ (int\ i\ =\ 0\;\ i\ <\ pokazmacierz_1_arg.Elem.Elem_len\;\ i++)\ \{\n\t\tprintf(\"Podaj\ wartosc:\ %i\\n\",\ i)\;\n\t\tscanf(\"%f\",\ &x)\;\n\t\tpokazmacierz_1_arg.Elem.Elem_val\[i\]\ =\ x\;\n\t\}\n\tfree(pokazmacierz_1_arg.Elem.Elem_val)\;\n\n\t\n#####################\ matrix_server.c\ #####################\n\nvoid\ *\npokazmacierz_1_svc(Mac\ *argp,\ struct\ svc_req\ *rqstp)\n\{\n\tstatic\ char\ *\ result\;\n\n\tfor\ (int\ i\ =\ 0\;\ i\ <\ argp->IleW\ *\ argp->IleK\;\ i++)\ \{\n\t\tprintf(\"Element\[%i\]\ ma\ wartosc\ %f\\n\",\ i,\ argp->Elem.Elem_val\[i\])\;\n\t\}\n\n\treturn\ (void\ *)\ &result\;\n\}\n\n###################\ Wyniki\ ########################\n\ns396309@lts:~/Desktop/TAS/Temat\ A\$\ ./matrix_client\ 127.0.0.1\nKolumny:\ \n2\nWiersze:\ \n2\nPodaj\ wartosc:\ 0\n0\nPodaj\ wartosc:\ 1\n1\nPodaj\ wartosc:\ 2\n2\nPodaj\ wartosc:\ 3\n3\ns396309@lts:~/Desktop/TAS/Temat\ A\$\ ./matrix_server\nElement\[0\]\ ma\ wartosc\ 0.000000\nElement\[1\]\ ma\ wartosc\ 1.000000\nElement\[2\]\ ma\ wartosc\ 2.000000\nElement\[3\]\ ma\ wartosc\ 3.000000\n\n\nZadanie\ 4\ ----------------------------------------------------------------------\n\n####################\ matrix.x\ ###########################\n\nstruct\ Macierz\ \{\n\ \ float\ Elem\ <>\;\n\ \ int\ IleW\;\ int\ IleK\;\n\}\;\ntypedef\ struct\ Macierz\ Mac\;\n\nstruct\ DwieMacierze\ \{\ Mac\ M1\;\ Mac\ M2\;\}\;\n\ntypedef\ struct\ DwieMacierze\ DwieMac\;\n\nprogram\ ProgMacierze\ \{\n\ \ version\ VerMacierze\ \{\n\ \ \ \ Mac\ dodaj(DwieMac)\ =\ 1\;\n\ \ \}\ =\ 1\;\n\}\ =\ 0x21001234\;\n\n#####################\ matrix_client.c\ #####################\n\nvoid\nprogmacierze_1(char\ *host)\n\{\n\tCLIENT\ *clnt\;\n\tMac\ \ *result_1\;\n\tDwieMac\ \ dodajmacierz_1_arg\;\n\n\tprintf(\"Kolumny:\ \\n\")\;\n\tscanf(\"%i\",\ &dodajmacierz_1_arg.M1.IleK)\;\n\tdodajmacierz_1_arg.M2.IleK\ =\ dodajmacierz_1_arg.M1.IleK\;\n\t\n\tprintf(\"Wiersze:\ \\n\")\;\n\tscanf(\"%i\",\ &dodajmacierz_1_arg.M1.IleW)\;\n\tdodajmacierz_1_arg.M2.IleW\ =\ dodajmacierz_1_arg.M1.IleW\;\n\n\tdodajmacierz_1_arg.M1.Elem.Elem_len\ =\ dodajmacierz_1_arg.M1.IleW\ *\ dodajmacierz_1_arg.M1.IleK\;\n\tdodajmacierz_1_arg.M1.Elem.Elem_val\ =\ calloc(dodajmacierz_1_arg.M1.Elem.Elem_len,\ sizeof(float))\;\n\n\tfor\ (int\ i\ =\ 0\;\ i\ <\ dodajmacierz_1_arg.M1.Elem.Elem_len\;\ i++)\ \{\n\t\tprintf(\"Podaj\ wartosc\ pierwszej\ macierzy:\ %i\\n\",\ i)\;\n\t\tfloat\ x\ =\ 0\;\n\t\tscanf(\"%f\",\ &x)\;\n\t\tdodajmacierz_1_arg.M1.Elem.Elem_val\[i\]\ =\ x\;\n\t\}\t\n\tdodajmacierz_1_arg.M2.Elem.Elem_len\ =\ dodajmacierz_1_arg.M2.IleW\ *\ dodajmacierz_1_arg.M2.IleK\;\n\tdodajmacierz_1_arg.M2.Elem.Elem_val\ =\ calloc(dodajmacierz_1_arg.M2.Elem.Elem_len,\ sizeof(float))\;\n\n\tfor\ (int\ i\ =\ 0\;\ i\ <\ dodajmacierz_1_arg.M2.Elem.Elem_len\;\ i++)\ \{\n\t\tprintf(\"Podaj\ wartosc\ drugiej\ macierzy:\ %i\\n\",\ i)\;\n\t\tfloat\ x\ =\ 0\;\n\t\tscanf(\"%f\",\ &x)\;\n\t\tdodajmacierz_1_arg.M2.Elem.Elem_val\[i\]\ =\ x\;\n\t\}\n\n#####################\ matrix_server.c\ #####################\n\nMac\ *\ndodajmacierz_1_svc(DwieMac\ *argp,\ struct\ svc_req\ *rqstp)\{\n\tstatic\ Mac\ \ result\;\n\tresult.IleW\ =\ argp->M1.IleW\;\n\tresult.IleK\ =\ argp->M1.IleK\;\n\n\tresult.Elem.Elem_len\ =\ result.IleW\ *\ result.IleK\;\n\tresult.Elem.Elem_val\ =\ calloc(result.Elem.Elem_len,\ sizeof(float))\;\n\t\n\tfor\ (int\ i\ =\ 0\;\ i\ <\ result.Elem.Elem_len\;\ i++)\ \{\n\t\tresult.Elem.Elem_val\[i\]\ =\ argp->M1.Elem.Elem_val\[i\]\ +\ argp->M2.Elem.Elem_val\[i\]\;\n\t\}\n\tfor\ (int\ i\ =\ 0\;\ i\ <\ result.Elem.Elem_len\;\ i++)\ \{\n\t\tprintf(\"Element\ \[%i\]\ ma\ wartosc\ =\ %f\\n\",\ i,\ result.Elem.Elem_val\[i\])\;\n\t\}\n\tfree(result.Elem.Elem_val)\;\n\treturn\ &result\;\n\}\n\n###################\ Wyniki\ ########################\n\ns396309@lts:~/Desktop/TAS/Temat\ A\$\ ./matrix_client\ 127.0.0.1\nKolumny:\ \n2\nWiersze:\ \n2\nPodaj\ wartosc\ pierwszej\ macierzy:\ 0\n0\nPodaj\ wartosc\ pierwszej\ macierzy:\ 1\n1\nPodaj\ wartosc\ pierwszej\ macierzy:\ 2\n2\nPodaj\ wartosc\ pierwszej\ macierzy:\ 3\n3\nPodaj\ wartosc\ drugiej\ macierzy:\ 0\n1\nPodaj\ wartosc\ drugiej\ macierzy:\ 1\n2\nPodaj\ wartosc\ drugiej\ macierzy:\ 2\n3\nPodaj\ wartosc\ drugiej\ macierzy:\ 3\n4\n\ns396309@lts:~/Desktop/TAS/Temat\ A\$\ ./matrix_server\nElement\[0\]\ ma\ wartosc\ 1.000000\nElement\[1\]\ ma\ wartosc\ 3.000000\nElement\[2\]\ ma\ wartosc\ 5.000000\nElement\[3\]\ ma\ wartosc\ 7.000000\n
