przedmiot TAS temat B nr_indeksu 396153 liczba_pkt 3 

\n\n\t*------------------------------------------------------------*\n\t|\t\t\tZadanie\ 10.1\t\t\t\ \ \ \ \ |\n\t*------------------------------------------------------------*\nW\ ciele\ metody\ \"powolnaMetoda\"\ (w\ pliku\ sss.java)\ doda³em\ kod:\n\n----------------------------------------------------\n--------------------sss.java------------------------\n----------------------------------------------------\nfor\ (int\ i\ =\ 0\;\ i\ <\ 10\;\ i++)\ \{\n\tSystem.out.println(\"(\"\ +\ Thread.currentThread()\ +\ \")\ \"\ +\ i)\;\n\ttry\ \{Thread.sleep(200)\;\}\ catch(Exception\ e)\{\}\;\n\}\n\nKtóry\ co\ 200ms\ wypisuje\ informacje\ o\ bie¿±cym\ w±tku.\nNastêpnie\ uruchomi³em\ dwóch\ klientów.\ Wyra¼nie\ widaæ,\ ¿e\ serwer\ obs³uguje\ klientów\ wielow±tkowo,\ poniewa¿\ wydruki\ siê\ przeplataj±.\n\n----------------------------------------------------\n--------wydruk\ z\ konsoli\ (po\ stronie\ serwera)-------\n----------------------------------------------------\n(Thread\[RMI\ TCP\ Connection(3)-192.168.0.11,5,RMI\ Runtime\])\ 0\n(Thread\[RMI\ TCP\ Connection(4)-192.168.0.11,5,RMI\ Runtime\])\ 3\n(Thread\[RMI\ TCP\ Connection(3)-192.168.0.11,5,RMI\ Runtime\])\ 1\n(Thread\[RMI\ TCP\ Connection(4)-192.168.0.11,5,RMI\ Runtime\])\ 4\n(Thread\[RMI\ TCP\ Connection(3)-192.168.0.11,5,RMI\ Runtime\])\ 2\n(Thread\[RMI\ TCP\ Connection(4)-192.168.0.11,5,RMI\ Runtime\])\ 5\n(Thread\[RMI\ TCP\ Connection(3)-192.168.0.11,5,RMI\ Runtime\])\ 3\n(Thread\[RMI\ TCP\ Connection(4)-192.168.0.11,5,RMI\ Runtime\])\ 6\n(Thread\[RMI\ TCP\ Connection(3)-192.168.0.11,5,RMI\ Runtime\])\ 4\n(Thread\[RMI\ TCP\ Connection(4)-192.168.0.11,5,RMI\ Runtime\])\ 7\n(Thread\[RMI\ TCP\ Connection(3)-192.168.0.11,5,RMI\ Runtime\])\ 5\n\n\n\n\t*------------------------------------------------------------*\n\t|\t\t\tZadanie\ 10.2\t\t\t\ \ \ \ \ |\n\t*------------------------------------------------------------*\nJe¿eli\ klient\ nie\ wyeksportuje\ obiektu,\ to\ bêdzie\ on\ (obiekt)\ obs³ugiwany\ na\ maszynie\ lokalnej,\ co\ oznacza,\ ¿e\ np.\ napisy\ kontrolne\ w\ naszej\ aplikacji\ bêd±\ pojawia³y\ sie\ po\ stronie\ klienta.\ Je¿eli\ natomiast\ wyeksportuje\ go\ to\ wspomniane\ napisy\ bêd±\ wypisywane\ na\ serwerze.\n\nAby\ obiekt\ nie\ by³\ eksportowany\ wystarczy\ zakomentowaæ\ jedn±\ linijkê\ w\ konstruktorze\ klasy\ \"OdleglaKlasa\".\n----------------------------------------------------\n--------------------sss.java------------------------\n----------------------------------------------------\nOdleglaKlasa(String\ s)\ throws\ RemoteException\n\ \ \{\n\ \ \ \ super()\;\n\ \ \ \ try\ \{\n\ \ \ \ \ \ //UnicastRemoteObject.exportObject(this)\;\t\t\t<--\ zakomentowana\ metoda\ eksportuj±ca\ obiekt\n\ \ \ \ \ \ Naming.rebind(s,this)\;\n\ \ \ \ \}\n\ \ \ \[...\]\n\n----------------------------------------------------\n--------wydruk\ z\ konsoli\ (po\ stronie\ serwera)-------\n----------------------------------------------------\n\[11:20\]:java\ sss\nsss:\ zaczynam\ tworzyc\ obiekty\ ...\nsss:\ OdleglaKlasa()\;\ ok\nsss:\ OdleglaKlasa(String)\;\ ok\nsss:\ obiekty\ utworzone\ !!!\n\n----------------------------------------------------\n--------wydruk\ z\ konsoli\ (po\ stronie\ klienta)-------\n----------------------------------------------------\n\[11:20\]:java\ kkk\nsss:\ powolnaMetoda()\;\ licznik=1\n(Thread\[main,5,main\])\ 0\n(Thread\[main,5,main\])\ 1\n(Thread\[main,5,main\])\ 2\n(Thread\[main,5,main\])\ 3\n(Thread\[main,5,main\])\ 4\n(Thread\[main,5,main\])\ 5\n(Thread\[main,5,main\])\ 6\n(Thread\[main,5,main\])\ 7\n(Thread\[main,5,main\])\ 8\n(Thread\[main,5,main\])\ 9\nsss:\ powolnaMetoda()\;\ koniec\ dzialania\ !\n\n\n\n\t*------------------------------------------------------------*\n\t|\t\t\tZadanie\ 10.3\t\t\t\ \ \ \ \ |\n\t*------------------------------------------------------------*\nJest\ taki\ mechanizm\ umo¿liwiaj±cy\ wy¶wietlani\ ka¿dego\ b³êdu\ nie\ na\ serwerze\ gdzie\ kod\ jest\ wykonywany,\ ale\ u\ klienta,\ który\ jest\ g³ównym\ zainteresowanym\ (b³±d\ jest\ mu\ po\ prostu\ zwracany).\n\nW\ pliku\ OdleglyObiekt.java\ nale¿y\ zadeklarowaæ\ metodê\ \"generujeBlad\".\n\n----------------------------------------------------\n--------------OdleglyObiekt.java--------------------\n----------------------------------------------------\npublic\ interface\ OdleglyObiekt\ extends\ Remote\n\{\n\ \ OdleglyObiekt\ drugiObiekt()\ throws\ RemoteException\;\n\ \ int\ powolnaMetoda()\ throws\ RemoteException\;\n\ \ void\ generujeBlad()\ throws\ RemoteException\;\t\t\t\t<--\ deklaracja\ nowej\ metody\n\}\n\nNastêpnie\ w\ piku\ \"sss.java\"\ nale¿y\ zdefiniowaæ\ tê\ metodê\ oraz\ wywo³aæ\ j±\ np.\ w\ ciele\ metody\ \"powolnaMetoda\".\n----------------------------------------------------\n---------------------sss.java-----------------------\n----------------------------------------------------\npublic\ void\ generujeBlad()\ throws\ RemoteException\ \{\n\tthrow\ new\ RemoteException(\"sztucznie\ wygenerowany\ b³±d...\")\;\n\}\n\npublic\ int\ powolnaMetoda()\ throws\ RemoteException\n\ \ \{\n\ \ \ \ \[...\]\n\n\ \ \ \ generujeBlad()\;\n\t\n\ \ \ \ \[...\]\n\ \ \}\n\n----------------------------------------------------\n--------wydruk\ z\ konsoli\ (po\ stronie\ klienta)-------\n----------------------------------------------------\n\[11:27\]:java\ kkk\nkkk:\ blad\ !!!\ RemoteException\ occurred\ in\ server\ thread\;\ nested\ exception\ is:\ \n\tjava.rmi.RemoteException:\ sztucznie\ wygenerowany\ b³±d...\n\n\n\t*------------------------------------------------------------*\n\t|\t\t\tZadanie\ 11\t\t\t\ \ \ \ \ |\n\t*------------------------------------------------------------*\n----------------------------------------------------\n-------------------konsument.java-------------------\n----------------------------------------------------\npublic\ static\ void\ main(String\ args\[\])\n\{\n\ttry\ \{\n\t\tRemoteFifoBuffer\ obj\ =\ (RemoteFifoBuffer)Naming.lookup(\"rmi://localhost/przyk³ad_001\")\;\n\t\t\n\t\tSystem.out.println(\"konsument:\ ok,\ I'll\ grab\ 4\ items\ from\ buffer.\")\;\n\t\tfor\ (int\ i\ =\ 0\;\ i\ <\ 4\;\ i++)\n\t\t\{\n\t\t\tSystem.out.print(\"konsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\")\;\n\t\t\tSystem.out.print(\"\ poped\ \"\ +\ obj.pop()\ +\ \"(!)\\n\")\;\n\t\t\}\n\t\}\ catch(Exception\ e)\ \{\n\t\tSystem.err.println(\"konsument:\ \"\ +\ e.getMessage())\;\n\t\}\n\}\n\n----------------------------------------------------\n-------------------producent.java-------------------\n----------------------------------------------------\nublic\ static\ void\ main(String\ args\[\])\n\{\n\t//int\ value\ =\ Integer.parseInt(args\[0\])\;\n\t//System.out.println(value)\;\n\n\t\tint\ rand\;\n\ttry\ \{\n\t\tRemoteFifoBuffer\ obj\ =\ (RemoteFifoBuffer)Naming.lookup(\"rmi://localhost/przyk³ad_001\")\;\n\n\t\tfor\ (int\ i\ =\ 1\;\ i\ <=\ 12\;\ i++)\n\t\t\{\n\t\t\trand\ =\ 10\ *\ i\;\n\t\t\tSystem.out.print(\"producent:\ trying\ to\ push\ \"\ +\ rand\ +\ \ \"\ to\ remote\ buffer...\ \")\;\n\t\t\tobj.push(rand)\;\n\t\t\tSystem.out.print(\"pushed\ (!)\\n\")\;\n\t\t\}\n\t\}\ catch(Exception\ e)\ \{\n\t\tSystem.err.println(\"producent:\ \"\ +\ e.getMessage())\;\n\t\}\n\}\n\n----------------------------------------------------\n---------------RemoteFifoBuffer.java----------------\n----------------------------------------------------\npublic\ interface\ RemoteFifoBuffer\ extends\ Remote\n\{\n\tvoid\ push(int\ element)\ throws\ RemoteException\;\n\tint\ pop()\ throws\ RemoteException\;\n\tboolean\ isEmpty()\ throws\ RemoteException\;\n\tboolean\ isFull()\ throws\ RemoteException\;\n\tvoid\ showBuffer(String\ msg)\ throws\ RemoteException\;\n\}\n\n----------------------------------------------------\n--------------------Server.java---------------------\n----------------------------------------------------\nclass\ RemoteFifoBufferImplementation\ implements\ RemoteFifoBuffer,\ Serializable\n\{\n\tprivate\ static\ int\ buffer_size\ =\ 10\;\n\tprivate\ int\[\]\ buffer\;\n\tprivate\ int\ elements_in_buffer\;\n\n\tRemoteFifoBufferImplementation(String\ s)\ throws\ RemoteException\n\t\{\n\t\tsuper()\;\n\n\t\tbuffer\ =\ new\ int\[buffer_size\]\;\n\t\telements_in_buffer\ =\ 0\;\t\n\n\t\ttry\ \n\t\t\{\n\t\t\tUnicastRemoteObject.exportObject(this)\;\n\t\t\tNaming.rebind(s,\ this)\;\n\t\t\}\ catch\ (Exception\ e)\n\t\t\{\n\t\t\tSystem.err.println(\"server:\ \"\ +\ e.getMessage())\;\n\t\t\}\n\t\}\n\n\n\t//\ -----\ implementacja\ interfejsu\ RemoteFifoBuffer\ ------\n\tsynchronized\ public\ void\ push(int\ elem)\n\t\{\n\t\tif\ (isFull())\n\t\t\{\n\t\t\ttry\n\t\t\t\{\n\t\t\t\twait()\;\n\t\t\t\}\ catch\ (Exception\ e)\ \n\t\t\t\{\n\t\t\t\tSystem.out.println(\">>>\"\ +\ e.getMessage())\;\n\t\t\t\}\n\t\t\}\ \n\n\t\tbuffer\[elements_in_buffer\]\ =\ elem\;\n\t\telements_in_buffer++\;\n\n\t\tnotifyAll()\;\n\t\tshowBuffer(\"after\ pushing\")\;\n\t\}\n\n\tsynchronized\ public\ int\ pop()\n\t\{\n\t\tif\ (isEmpty())\n\t\t\{\n\t\t\ttry\n\t\t\t\{\n\t\t\t\twait()\;\n\t\t\t\}\ catch\ (Exception\ e)\n\t\t\t\{\n\t\t\t\tSystem.out.println(\">>>\"\ +\ e.getMessage())\;\n\t\t\t\}\n\t\t\}\n\t\t\n\t\tint\ result\ =\ buffer\[0\]\;\n\n\t\tfor\ (int\ i\ =\ 0\;\ i\ <\ elements_in_buffer\ -\ 1\;\ i++)\n\t\t\{\n\t\t\tbuffer\[i\]\ =\ buffer\[i\ +\ 1\]\;\n\t\t\}\n\n\t\tbuffer\[elements_in_buffer\ -\ 1\]\ =\ 0\;\n\n\t\telements_in_buffer--\;\n\t\tnotifyAll()\;\n\t\tshowBuffer(\"after\ poping\")\;\n\n\t\treturn\ result\;\n\t\}\n\n\tpublic\ boolean\ isEmpty()\n\t\{\n\t\tif\ (elements_in_buffer\ <=\ 0)\n\t\t\treturn\ true\;\n\t\telse\n\t\t\treturn\ false\;\n\t\}\n\n\tpublic\ boolean\ isFull()\{\n\t\tif\ (elements_in_buffer\ >=\ buffer_size)\n\t\t\treturn\ true\;\n\t\telse\n\t\t\treturn\ false\;\n\t\}\n\n\tpublic\ void\ showBuffer(String\ msg)\n\t\{\n\t\tint\ i\ =\ 0\;\n\t\tSystem.out.println(\">>>\"\ +\ msg\ +\ \"<<<\")\;\n\t\tSystem.out.println(\">>>elements_in_buffer:\ \"\ +\ elements_in_buffer\ +\ \"<<<\")\;\n\t\t\n\t\t/*for\ (int\ elem\ :\ buffer)\n\t\t\{\n\t\t\tSystem.out.println(i\ +\ \":\ \"\ +\ elem)\;\n\t\t\ti++\;\n\t\t\}*/\n\t\tSystem.out.println(\"------------------------\")\;\n\t\}\n\}\n\npublic\ class\ Server\n\{\n\tpublic\ static\ void\ main(String\ args\[\])\n\t\t\{\n\t\t\ttry\ \{\n\t\t\t\ \ \ \ \ \ \tSystem.out.println(\"Serwer:\ tworzê\ listê...\")\;\n\t\t\t\ \ \ \ \ \ \tRemoteFifoBufferImplementation\ obj\ =\ new\ RemoteFifoBufferImplementation(\"przyk³ad_001\")\;\n\t\t\t\ \ \ \ \ \ \tSystem.out.println(\"Serwer:\ lista\ utworzona!\")\;\n\ \ \ \ \t\t\t\}\ catch(Exception\ e)\ \n\t\t\t\{\n\ \ \ \ \ \ \t\t\t\tSystem.err.println(\"server:\ \"\ +\ e.getMessage())\;\n\ \ \ \ \t\t\t\}\n\ \ \t\}\n\}\n\n----------------------------------------------------\n-----wydruk\ z\ konsoli\ (po\ stronie\ konsumenta)-------\n----------------------------------------------------\n\[20:50\]:java\ konsument\ \nkonsument:\ ok,\ I'll\ grab\ 4\ items\ from\ buffer.\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 10(!)\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 20(!)\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 30(!)\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 40(!)\n\[20:50\]:java\ konsument\ \nkonsument:\ ok,\ I'll\ grab\ 4\ items\ from\ buffer.\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 50(!)\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 60(!)\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 70(!)\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 80(!)\n\[20:50\]:java\ konsument\ \nkonsument:\ ok,\ I'll\ grab\ 4\ items\ from\ buffer.\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 90(!)\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 100(!)\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 110(!)\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 120(!)\n\[20:50\]:java\ konsument\ \nkonsument:\ ok,\ I'll\ grab\ 4\ items\ from\ buffer.\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 10(!)\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 20(!)\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 30(!)\nkonsument:\ tring\ to\ get\ something\ from\ remote\ buffer...\ poped\ 40(!)\n\n----------------------------------------------------\n-----wydruk\ z\ konsoli\ (po\ stronie\ producenta)-------\n----------------------------------------------------\n\[20:50\]:java\ producent\nproducent:\ trying\ to\ push\ 10\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 20\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 30\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 40\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 50\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 60\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 70\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 80\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 90\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 100\ to\ remote\ buffer...\ pushed\ (!)\n//\ W\ TYM\ MIEJSCU\ BUFOR\ SIÊ\ PRZEPE£NIA\n//\ PRODUCENT\ ZOSTAJE\ U¦PIONY\n//\ PO\ TYM\ JAK\ KONSUMENT\ ZWOLNI\ MIEJSCE\ W\ BUFORZE,\ PRODUCENT\ ZOSTAJE\ OBUDZONY\nproducent:\ trying\ to\ push\ 110\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 120\ to\ remote\ buffer...\ pushed\ (!)\n\[20:52\]:java\ producent\nproducent:\ trying\ to\ push\ 10\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 20\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 30\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 40\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 50\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 60\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 70\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 80\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 90\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 100\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 110\ to\ remote\ buffer...\ pushed\ (!)\nproducent:\ trying\ to\ push\ 120\ to\ remote\ buffer...\ pushed\ (!)\n\n----------------------------------------------------\n--------wydruk\ z\ konsoli\ (po\ stronie\ serwera)-------\n----------------------------------------------------\n\[20:50\]:java\ Server\nSerwer:\ tworzê\ listê...\nSerwer:\ lista\ utworzona!\n//\ W\ TYM\ MIEJSCU\ PRODUCENT\ WYWO£UJE\ METODÊ\ push()\ 12\ RAZY\n>>>after\ pushing<<<\n>>>elements_in_buffer:\ 1<<<\n------------------------\n>>>after\ pushing<<<\n>>>elements_in_buffer:\ 2<<<\n------------------------\n>>>after\ pushing<<<\n>>>elements_in_buffer:\ 3<<<\n------------------------\n>>>after\ pushing<<<\n>>>elements_in_buffer:\ 4<<<\n------------------------\n>>>after\ pushing<<<\n>>>elements_in_buffer:\ 5<<<\n------------------------\n>>>after\ pushing<<<\n>>>elements_in_buffer:\ 6<<<\n------------------------\n>>>after\ pushing<<<\n>>>elements_in_buffer:\ 7<<<\n------------------------\n>>>after\ pushing<<<\n>>>elements_in_buffer:\ 8<<<\n------------------------\n>>>after\ pushing<<<\n>>>elements_in_buffer:\ 9<<<\n------------------------\n>>>after\ pushing<<<\n>>>elements_in_buffer:\ 10<<<\n------------------------\n//\ W\ TYM\ MIEJSCU\ BUFOR\ SIÊ\ PRZEPE£NIA,\ PRODUCENT\ ZOSTAJE\ U¦PIONY\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 9<<<\n------------------------\n//\ KONSUMENT\ WYWO£A£\ METODÊ\ pop()\ PO\ RAZ\ PIERWSZY,\ ZWALNIAJ¡C\ JEDNOCZE¦NIE\ JEDNO\ MIEJSCE\ W\ BUFORZE\ I\ BUDZ¡C\ PRODUCENTA\n>>>after\ pushing<<<\n>>>elements_in_buffer:\ 10<<<\n------------------------\n//\ OBUDZONY\ PRODUCENT\ PRZES£A£\ KOLEJNY\ ELEMENT\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 9<<<\n------------------------\n>>>after\ pushing<<<\n>>>elements_in_buffer:\ 10<<<\n------------------------\n//\ W\ TYM\ MOMENCIE\ PRODUCENT\ ZAKOÑCZY£\ DZIA£ANIE\ (12\ RAZ\ WYWO£A£\ METODÊ\ push())\n//\ KONSUMENT\ WYWO£YWANY\ KILKA\ KOLEJNYCH\ RAZÓW\ OPRÓ¯NIA\ CA£KOWICIE\ BUFOR\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 9<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 8<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 7<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 6<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 5<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 4<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 3<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 2<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 1<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 0<<<\n------------------------\n//\ KONSUMENT\ OPRÓ¯NI£\ BUFOR\ W\ PE£NI,\ ALE\ METODA\ pop()\ ZOSTA£A\ ZNÓW\ WYWO£ANA,\ WIÊC\ ZOSTAJE\ U¦PIONY\n//\ PRODUCENT\ ZNÓW\ ZOSTAJE\ URUCHOMIONY,\ 12\ RAZY\ WYKONUJE\ METODÊ\ push()\ I\ ZAPE£NIA\ BUFOR\ PONOWNIE...\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 9<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 8<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 7<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 6<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 5<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 4<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 3<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 2<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 1<<<\n------------------------\n>>>after\ poping<<<\n>>>elements_in_buffer:\ 0<<<\n------------------------\n\n\t*------------------------------------------------------------*\n\t|\t\t\tZadanie\ 17\t\t\t\ \ \ \ \ |\n\t*------------------------------------------------------------*\nG³ówn±\ ró¿nic±\ pomiêdzy\ serializacj±\ w\ Java'ie,\ a\ serializacj±\ za\ pomoc±\ XDR\ jest\ to,\ ¿e\ u¿ywaj±c\ XDR\ zarówno\ serwer,\ jak\ i\ klient\ musz±\ znaæ\ struktury\ danych\ (np.\ definicjê\ klasy),\ poniewa¿\ przekazywane\ s±\ jedynie\ ich\ reprezentacje.\n\nProgramuj±c\ w\ Java'ie\ tak\ naprawdê\ mo¿na\ wybraæ\ w\ jakim\ schemacie\ chcemy\ serializowaæ\ dane,\ ale\ wbudowane\ metody\ oparte\ s±\ na\ XML'u.\ Tak\ wiêc\ wszystkie\ prymitywne\ (integer,\ duble,\ string\ etc.)\ typy\ danych\ s±\ serializowalne.\n
