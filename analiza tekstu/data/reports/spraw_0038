przedmiot TAS temat C nr_indeksu 396443 liczba_pkt 4 


Zadanie 20 -------------------------------------
CLI: TCL
SER: TCL

Wydruk serwera:
s396443@pc22l:~/Desktop/taS/C/20/Hello_Tcl$ ./tclkit ser.tcl
obj=helloWorld0
poa=::Combat::PortableServer::rootPOA0
ref=_combat_obj_1
HelloWorld IOR = IOR:01666f6f1800000049444c3a48656c6c6f417070322f48656c6c6f3a312e3000020000000000000040000000010102661a000000706332326c2e6c6162732e776d692e616d752e6564752e706c003682120000002f313434383434323630352f343038332a31666f00000000010000002400000001666f6f01000000010000001400000001666f6f01000105000000000901010000000000

client:
#kons_font 16
lappend auto_path ./combat-tcl-0.7.4; package re combat
  #% 0.7
  #% 0.7

source Hello3.tcl
  #% 1
combat::ir add $_ir_Hello3
  #% 
  # dodajemy wpis do (local) Interface Repository

set f [open {Hello.IOR} "r"]; set ior [read $f]; close $f
  #% 
  # tu powinna byc sciezka do pliku ior utworzonego przez serwer !!

set m [corba::string_to_object $ior]
  #% _combat_obj_1
  # mozna wywolywac metody na rzecz ob. Corby $m ...

$m podajLiczbe
  #% 6
  #% 5
  #% 4
  #% 3
  #% 2
  #% 1

CLI: Java
SER: TCL
Wydruk serwera pozostaje taki sam

client:
s396443@pc22l:~/Desktop/taS/C/20/Hello_Java$ java HelloClient2
podajLiczbe=7
sayHello=Jak sie masz ???
s396443@pc22l:~/Desktop/taS/C/20/Hello_Java$ java HelloClient2
podajLiczbe=8
sayHello=Jak sie masz ???
s396443@pc22l:~/Desktop/taS/C/20/Hello_Java$ java HelloClient2
podajLiczbe=9
sayHello=Jak sie masz ???

CLI: Java
SER: Java

Wydruk serwera:
s396443@pc22l:~/Desktop/taS/C/20/Hello_Java$ java HelloServer2
HelloServant2()
IOR=IOR:000000000000001849444c3a48656c6c6f417070322f48656c6c6f3a312e3000000000010000000000000082000102000000000a3132372e302e302e3100a6fd00000031afabcb00000000203df77e8900000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002
orb.run();
podajLiczbe(), 0
sayHello()
8: 0, 0, 0, 1, 0, 0, 0, 0, 
podajLiczbe(), 1
sayHello()
8: 0, 0, 0, 1, 0, 0, 0, 0, 

Client:
s396443@pc22l:~/Desktop/taS/C/20/Hello_Java$ java HelloClient2
podajLiczbe=0
sayHello=Hello world !!!
s396443@pc22l:~/Desktop/taS/C/20/Hello_Java$ java HelloClient2
podajLiczbe=1
sayHello=Hello world !!!

CLI: TCL
Ser: Java

serwer:
s396443@pc22l:~/Desktop/taS/C/20/Hello_Java$ java HelloServer2
HelloServant2()
IOR=IOR:000000000000001849444c3a48656c6c6f417070322f48656c6c6f3a312e3000000000010000000000000082000102000000000a3132372e302e302e3100a6fd00000031afabcb00000000203df77e8900000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002
orb.run();
podajLiczbe(), 0
sayHello()
8: 0, 0, 0, 1, 0, 0, 0, 0, 
podajLiczbe(), 1
sayHello()
8: 0, 0, 0, 1, 0, 0, 0, 0, 
podajLiczbe(), 2
podajLiczbe(), 3
podajLiczbe(), 4


client:
#kons_font 16
lappend auto_path ./combat-tcl-0.7.4; package re combat
  #% 0.7
  #% 0.7

source Hello3.tcl
  #% 1
combat::ir add $_ir_Hello3
  #% 
  #% 
  # dodajemy wpis do (local) Interface Repository

set f [open {Hello.IOR} "r"]; set ior [read $f]; close $f
  # tu powinna byc sciezka do pliku ior utworzonego przez serwer !!
  #% 

set m [corba::string_to_object $ior]
  #% _combat_obj_1
  # mozna wywolywac metody na rzecz ob. Corby $m ...

$m podajLiczbe
  #% 4
  #% 3
  #% 2
  #% 4
  #% 3
  #% 2
  #% 1
  #% 0

Zadanie 25 -------------------------------------
KONSOLA 1:
lappend auto_path ./combat-tcl-0.7.4; package re combat
  #% 0.7

source COS_ns.tcl
combat::ir add $_ir_COS_ns
set ns [corba::string_to_object http://students.wmi.amu.edu.pl:20002/nsd.ior]


  #% _combat_obj_1
$ns list 10 x y; join $x \n
  #% binding_name {{id EventChannelFactory kind {}}} binding_type nobject
binding_name {{id PropertySetDefFactory kind {}}} binding_type nobject
binding_name {{id PropertySetFactory kind {}}} binding_type nobject
binding_name {{id propset1 kind {}}} binding_type nobject
set q1 [$ns resolve_str "propset1"]
set q1 [$ns resolve {{id "propset1" kind ""}}]

$ns rebind {{id "qqq1" kind ""}} $q1
  #% 

################################################

KONSOLA 2:
lappend auto_path ./combat-tcl-0.7.4; package re combat
source COS_ns.tcl
combat::ir add $_ir_COS_ns
set ns [corba::string_to_object http://students.wmi.amu.edu.pl:20002/nsd.ior]
$ns list 10 x y; join $x \n
  #% binding_name {{id EventChannelFactory kind {}}} binding_type nobject
binding_name {{id PropertySetDefFactory kind {}}} binding_type nobject
binding_name {{id PropertySetFactory kind {}}} binding_type nobject
binding_name {{id ScriptCommander kind {}}} binding_type nobject
binding_name {{id propset1 kind {}}} binding_type nobject
binding_name {{id qqq1 kind {}}} binding_type nobject
$ns resolve_str qqq1
  #% _combat_obj_2

Zadanie 27 -----------------------------------------
KONSOLA 1:
# uruchamianie komendy - Ctrl+Enter
# (uruchamia sie zaznaczona komenda lub ta na ktorej jest kursor)
# procedura "_puts" uzywa okienka output
lappend auto_path ./combat-tcl-0.7.4; package re combat

corba::init -ORBInitRef InterfaceRepository=IOR:010000002100000049444c3a6f6d672e6f72672f434f5242412f5265706f7369746f72793a312e300000000002000000000000003700000001010000150000007368656c6c2e776d692e616d752e6564752e706c000043bc13000000496e746572666163655265706f7369746f7279000100000024000000010000000100000001000000140000000100000001000100000000000901010000000000

#source COS_ns.tcl
#combat::ir add $_ir_COS_ns
#NIE LADUJEMY LOKALNIE

set ns [corba::string_to_object http://students.wmi.amu.edu.pl:20002/nsd.ior]
  #% _combat_obj_1

$ns list 10 x y; join $x \n
  #% binding_name {{id ABC kind {}}} binding_type nobject
binding_name {{id EventChannelFactory kind {}}} binding_type nobject
binding_name {{id PropertySetDefFactory kind {}}} binding_type nobject
binding_name {{id PropertySetFactory kind {}}} binding_type nobject
binding_name {{id ScriptCommander kind {}}} binding_type nobject
binding_name {{id hello_corba_karmaz kind {}}} binding_type nobject
binding_name {{id propset1 kind {}}} binding_type nobject
binding_name {{id qqq1 kind {}}} binding_type nobject
binding_name {{id PropertySetDefFactory kind {}}} binding_type nobject
binding_name {{id PropertySetFactory kind {}}} binding_type nobject
binding_name {{id propset1 kind {}}} binding_type nobject
set q1 [$ns resolve_str "propset1"]
set q1 [$ns resolve {{id "propset1" kind ""}}]

$ns rebind {{id "qqq1" kind ""}} $q1
  #% 

######################################################

KONSOLA 2:
lappend auto_path ./combat-tcl-0.7.4; package re combat
#source COS_ns.tcl
#combat::ir add $_ir_COS_ns
#NIE LADUJEMY LOKALNIE

corba::init -ORBInitRef InterfaceRepository=IOR:010000002100000049444c3a6f6d672e6f72672f434f5242412f5265706f7369746f72793a312e300000000002000000000000003700000001010000150000007368656c6c2e776d692e616d752e6564752e706c000043bc13000000496e746572666163655265706f7369746f7279000100000024000000010000000100000001000000140000000100000001000100000000000901010000000000
  #% -ORBInitRef InterfaceRepository=IOR:010000002100000049444c3a6f6d672e6f72672f434f5242412f5265706f7369746f72793a312e300000000002000000000000003700000001010000150000007368656c6c2e776d692e616d752e6564752e706c000043bc13000000496e746572666163655265706f7369746f7279000100000024000000010000000100000001000000140000000100000001000100000000000901010000000000
  #% 

set ns [corba::string_to_object http://students.wmi.amu.edu.pl:20002/nsd.ior]
  #% _combat_obj_1

$ns list 10 x y; join $x \n
  #% binding_name {{id ABC kind {}}} binding_type nobject
binding_name {{id EventChannelFactory kind {}}} binding_type nobject
binding_name {{id PropertySetDefFactory kind {}}} binding_type nobject
binding_name {{id PropertySetFactory kind {}}} binding_type nobject
binding_name {{id ScriptCommander kind {}}} binding_type nobject
binding_name {{id hello_corba_karmaz kind {}}} binding_type nobject
binding_name {{id propset1 kind {}}} binding_type nobject
binding_name {{id qqq1 kind {}}} binding_type nobject

binding_name {{id PropertySetDefFactory kind {}}} binding_type nobject
binding_name {{id PropertySetFactory kind {}}} binding_type nobject
binding_name {{id ScriptCommander kind {}}} binding_type nobject
binding_name {{id propset1 kind {}}} binding_type nobject
binding_name {{id qqq1 kind {}}} binding_type nobject
$ns resolve_str qqq1
  #% _combat_obj_23



Zadanie 29 -------------------------------------
KONSOLA 1 (serwer):
lappend auto_path ./combat-tcl-0.7.4
  #% /home/students/s396443/Desktop/taS/C/29/Hello_Tcl/tclkit/lib/tcl8.4 /home/students/s396443/Desktop/taS/C/29/Hello_Tcl/tclkit/lib /home/students/s396443/Desktop/taS/C/29/Hello_Tcl/tclkit/lib/tk8.4 ./combat-tcl-0.7.4
package require combat
  #% 0.7

corba::init -ORBServerPort 10000
  #% 

class HelloWorld {
  inherit PortableServer::ServantBase
  public method _Interface {} {
    return "IDL:HelloApp2/Hello:1.0"
      # tzw "RepoID"; mozna to wyciagnac z pliku Hello3.tcl
  }

  # w pliku IDL mamy:
  #   string sayHello();
  #   string sayHello2(in string we);
  #   long podajLiczbe();
  #   Hello sayHello_nowyObiekt();
  #   typedef long tab[10];
  #   void wektorRazy2(in tab tab1, out tab tab2);
  #   void uruchomZwrotnaMet(in WywZwrotne ref);
  #
  public method sayHello {} {
    return "Jak sie masz ???"
  }

  public method sayHello2 {_str} {
    set str "$str $_str"
    return "sayHello2: str=$str"
  }

  public method podajLiczbe {} {
    set x $liczba; incr liczba
    return $x
  }

  # ta metoda tworzy nowy obiekt HelloWorld i zwraca ref do tego obiektu
  public method sayHello_nowyObiekt {} {
    global poa
    puts "poczatek sayHello_nowyObiekt"
    puts "poa=$poa"

    set obj [HelloWorld ::#auto]
      # nowy obiekt (servant) jest tworzony w namespace globalnym
      # "#auto" to automatyczne nadawanie nazwy obiektowi
    puts "obj=$obj"

    set ref [$poa servant_to_reference $obj]
    puts "ref=$ref"

    puts "koniec sayHello_nowyObiekt"
    return $ref
  }

  public method wektorRazy2 {tab1 tab2} {
    puts "wektorRazy2 poczatek"
    upvar $tab2 tab2_value
      # obsluga arg. typu "out" (zwracanie "przez zmienna" w Pascalu)

    set tab2_value {}
    foreach x $tab1 {lappend tab2_value [expr $x*2]}

    puts "wektorRazy2 koniec"
  }

  public method uruchomZwrotnaMet ref {
    for {set i 0} {$i<5} {incr i} {
      $ref metoda
    }
  }

  private variable str ""
  private variable liczba 0
}

corba::init

source Hello3.tcl
combat::ir add $_ir_Hello3

set obj [HelloWorld #auto]
puts "obj=$obj"

### POA -------------------------------------------------------

set poa [corba::resolve_initial_references "RootPOA"]
set mgr [$poa the_POAManager]
puts "poa=$poa"

set mypoa [$poa create_POA MyPOA $mgr {PERSISTENT USER_ID}]
$mypoa activate_object_with_id "oid" $obj
set ref [$mypoa id_to_reference "oid"]

#set ref [$poa servant_to_reference $obj]
puts "ref=$ref"

set ior [corba::object_to_string $ref]
set f [open {Hello.IOR} "w"]; puts $f $ior; close $f
puts "HelloWorld IOR = $ior"

$mgr activate
  # od tego momentu serwer zaczyna obslugiwac zadania IIOP

### -----------------------------------------------------------

vwait nieskonczenie
  # na uzytek uruchamiania przez "tclkit ser.tcl &"

#############################################

KONSOLA 2 (KLIENT):
#kons_font 16
lappend auto_path ./combat-tcl-0.7.4; package re combat
  #% 0.7

source Hello3.tcl
combat::ir add $_ir_Hello3
  # dodajemy wpis do (local) Interface Repository

set f [open {Hello.IOR} "r"]; set ior [read $f]; close $f
  # tu powinna byc sciezka do pliku ior utworzonego przez serwer !!

set m [corba::string_to_object $ior]
  # mozna wywolywac metody na rzecz ob. Corby $m ...

$m podajLiczbe
  #% 2
  #% 1
  #% 0
# wylaczenie serwera, przy probie blad "Error: IDL:omg.org/CORBA/COMM_FAILURE: 1.0 {minor_code_value 0 completion_status COMPLETE_MAYBE}"
# wlaczenie serwera od nowa, klient wciaz ten sam
  #% 2
  #% 1
  #% 0
  #% _combat_obj_1
}
