przedmiot TAS temat C nr_indeksu 396451 liczba_pkt 4 



	  
###################################
--- Zad 22 ---
Zaprogramuj ob. CORBA który posiada metodê "pomnoz" mno¿±c± przez podan± sta³± wektory dowolnej d³ugo¶ci i zwracaj±c± wynik wektorowy (typ "sequence"); broker dowolny.
Dodaj metodê "pomnoz10" mno¿±ca wy³±cznie wektory d³ugo¶ci 10 (typ "zwyk³a tablica"); zbadaj czy Combat przestrzega tego ograniczenia.
Zaprogramuj ob.  CORBA który potrafi obliczaæ wyznacznik macierzy (albo sume elementów macierzy) o dowolnych wymiarach. Klient ma byæ zaprogramowany w jêzyku Java lub Tcl, serwer w jêzyku Java.

Test na przykladowym wektorze (1,2,3,4,5) i macierzy (widoczna w wydrukach).
Pliki: Hello3.idl, HelloServer5.java, HelloClient5.java

bartek@laptop:~/TAS/TematC/Zad22$ java HelloClient5
Nowy wektor - element 0: 5
Nowy wektor - element 1: 10
Nowy wektor - element 2: 15
Nowy wektor - element 3: 20
Nowy wektor - element 4: 25
Suma elementów macierzy:
1 2 3 
4 5 6 
7 8 9 
to: 45

bartek@laptop:~/TAS/TematC/Zad22$ java HelloServer5
HelloServant2()
IOR=IOR:000000000000001849444c3a48656c6c6f417070332f48656c6c6f3a312e3000000000010000000000000082000102000000000a3132372e302e312e3100948700000031afabcb000000002069f6c1a200000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002
orb.run();
Mnoze wektor razy stala...
Licze sume elementow macierzy...


######################################
Zad 25
	Zak³adam ¿e posiadamy IOR pewnego serwera Corba ...
	Napisz dwa klienty Corby (kli1 i kli2) pod dowolnym brokerem:
	- niech kli1 umieszcza ref do pewnego obiektu Corby w NamingService
	- niech kli2 odczytuje tê ref z NamingService (a NIE z pliku IOR) i wywo³uje pewn± metodê.
	NamingService

	Plik: HelloClient2.java

	HelloServer2
	bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloServer2
	HelloServant2()
	IOR=IOR:0008526f6f74504f4100000000080005000010000000014000000000000020000000100000020000000000001050010000005020501000100010020000150109000000010001010000000026000000020002
	orb.run();
	podajLiczbe(), 0
	sayHello()
	8: 0, 0, 0, 1, 0, 0, 0, 0, 
	podajLiczbe(), 1
	sayHello()
	8: 0, 0, 0, 1, 0, 0, 0, 0, 

	HelloClient2
	//Próba odczytania nieistniej±cego obiektu
	bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient2 a
	a
	Pobieram obiekt z NamingService
	ERROR : org.omg.CosNaming.NamingContextPackage.NotFound: IDL:omg.org/CosNaming/NamingContext/NotFound:1.0
	org.omg.CosNaming.NsamingContextPackage.NotFound: IDL:omg.org/CosNaming/NamingContext/NotFound:1.0
	  at org.omg.CosNaming.NamingContextPackage.NotFoundHelper.read(NotFoundHelper.java:72)
	  at org.omg.CosNaming._NamingContextExtStub.resolve(_NamingContextExtStub.java:406)
	  at HelloClient2.main(HelloClient2.java:34)

	//Zapis obiektu
	bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient2 w
	w
	Dodaje obiekt do NamingService
	podajLiczbe=0
	sayHello=Hello world !!!

	//Pobranie obiektu
	bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient2 a
	a
	Pobieram obiekt z NamingService
	podajLiczbe=1
	sayHello=Hello world !!!

	//Próba nadpisania obiektu
	bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient2 w
	w
	Dodaje obiekt do NamingService
	ERROR : org.omg.CosNaming.NamingContextPackage.AlreadyBound: IDL:omg.org/CosNaming/NamingContext/AlreadyBound:1.0
	org.omg.CosNaming.NamingContextPackage.AlreadyBound: IDL:omg.org/CosNaming/NamingContext/AlreadyBound:1.0
	  at org.omg.CosNaming.NamingCosntextPackage.AlreadyBoundHelper.read(AlreadyBoundHelper.java:60)
	  at org.omg.CosNaming._NamingContextExtStub.bind(_NamingContextExtStub.java:222)
	  at HelloClient2.main(HelloClient2.java:29)
	  
##################################
--- Zad 21 ---
-- 1
bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient3
HelloRef.podajLiczbe(): 0
HelloRef.podajLiczbe(): 1
HelloRef.podajLiczbe(): 2
HelloRef.podajLiczbe(): 3
HelloRef.podajLiczbe(): 4
HelloRef.podajLiczbe(): 0
HelloRef.podajLiczbe(): 1
HelloRef.podajLiczbe(): 2
HelloRef.podajLiczbe(): 3
HelloRef.podajLiczbe(): 4
bartek@laptop:~/TAS/TematC/Java/Hello_Java$ 

Inny obiekt CORBA ma licznik ustawiony na 0 - co widaæ przy wywo³aniu podajLiczbe().


-- 2
Pliki: HelloServer2.java, HelloClient4.java

bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloServer2
HelloServant2()
IOR=IOR:000000000000001849444c3a48656c6c6f417070322f48656c6c6f3a312e3000000000010000000000000082000102000000000a3132372e302e312e3100edb100000031afabcb00000000206979b7f300000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002
orb.run();
ID Watku: 10: podajLiczbe(), 0
ID Watku: 10: podajLiczbe(), 1 //
ID Watku: 11: podajLiczbe(), 1 //Sekcja krytyczna?
ID Watku: 12: podajLiczbe(), 1 //
ID Watku: 10: podajLiczbe(), 2
ID Watku: 11: podajLiczbe(), 3
ID Watku: 12: podajLiczbe(), 4
ID Watku: 10: podajLiczbe(), 5
ID Watku: 11: podajLiczbe(), 6
ID Watku: 12: podajLiczbe(), 7
ID Watku: 10: podajLiczbe(), 8
ID Watku: 11: podajLiczbe(), 9
ID Watku: 12: podajLiczbe(), 10
ID Watku: 10: podajLiczbe(), 11
ID Watku: 11: podajLiczbe(), 12
ID Watku: 12: podajLiczbe(), 13
ID Watku: 10: podajLiczbe(), 14
ID Watku: 11: podajLiczbe(), 15
ID Watku: 12: podajLiczbe(), 16
ID Watku: 10: podajLiczbe(), 17
ID Watku: 11: podajLiczbe(), 18
ID Watku: 12: podajLiczbe(), 19
ID Watku: 10: podajLiczbe(), 20
ID Watku: 11: podajLiczbe(), 21
ID Watku: 12: podajLiczbe(), 22
ID Watku: 10: podajLiczbe(), 23
ID Watku: 11: podajLiczbe(), 24
ID Watku: 12: podajLiczbe(), 25
ID Watku: 10: podajLiczbe(), 27
ID Watku: 11: podajLiczbe(), 28

Klienci:

^Cbartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient4
HelloRef.podajLiczbe(): 0
HelloRef.podajLiczbe(): 1
HelloRef.podajLiczbe(): 4
HelloRef.podajLiczbe(): 7
HelloRef.podajLiczbe(): 10
HelloRef.podajLiczbe(): 13
HelloRef.podajLiczbe(): 16
HelloRef.podajLiczbe(): 19
HelloRef.podajLiczbe(): 22
HelloRef.podajLiczbe(): 25

^Cbartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient4
HelloRef.podajLiczbe(): 3
HelloRef.podajLiczbe(): 6
HelloRef.podajLiczbe(): 9
HelloRef.podajLiczbe(): 12
HelloRef.podajLiczbe(): 15
HelloRef.podajLiczbe(): 18
HelloRef.podajLiczbe(): 21
HelloRef.podajLiczbe(): 24
HelloRef.podajLiczbe(): 27
HelloRef.podajLiczbe(): 29

bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient4
HelloRef.podajLiczbe(): 2
HelloRef.podajLiczbe(): 5
HelloRef.podajLiczbe(): 8
HelloRef.podajLiczbe(): 11
HelloRef.podajLiczbe(): 14
HelloRef.podajLiczbe(): 17
HelloRef.podajLiczbe(): 20
HelloRef.podajLiczbe(): 23
HelloRef.podajLiczbe(): 26
HelloRef.podajLiczbe(): 28


-- 3
Pliki: HelloServer3.java

bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloServer3
HelloServant2()
IOR=IOR:000000000000001849444c3a48656c6c6f417070322f48656c6c6f3a312e3000000000010000000000000082000102000000000a3132372e302e312e3100c0eb00000031afabcb00000000206980a52000000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002
0: Wywo³anie metody obiektu CORBA z serwera - podajLiczbe(): 0
1: Wywo³anie metody obiektu CORBA z serwera - podajLiczbe(): 1
2: Wywo³anie metody obiektu CORBA z serwera - podajLiczbe(): 2
3: Wywo³anie metody obiektu CORBA z serwera - podajLiczbe(): 3
4: Wywo³anie metody obiektu CORBA z serwera - podajLiczbe(): 4
orb.run();

############################################################
Zad 20
Spróbuj skompilowaæ i uruchomiæ przyk³ady zawarte w plikach przyk³ad Java i przyk³ad Tcl. W tym zadaniu uruchamiaj jedynie prost± metodê sayHello(). Wypróbuj dzia³anie klienta/serwera CORBA w nastepuj±cych konfiguracjach:
	Java - Java

	Serwer:
		bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloServer2
		HelloServant2()
		IOR=IOR:00000000000000ada1849444c3a48656c6c6f417070322f48656c6c6f3a312e3000000000010000000000000082000102000000000a3132372e302e312e3100b75d00000031afabcb00000000203474701600da000001000000000000000100000008526f6f74504f410000000008000000010000000014000000000000020000000100000020000000000001000100000002050100010001002000010109000000010001010000000026000000020002
		orb.run();
		podajLiczbe(), 0
		sayHello()
		8: 0, 0, 0, 1, 0, 0, 0, 0, 
		podajLiczbe(), 1
		sayHello()
		8: 0, 0, 0, 1, 0, 0, 0, 0, 
		podajLiczbe(), 2
		sayHello()
		8: 0, 0, 0, 1, 0, 0, 0, 0, 
		podajLiczbe(), 3
		sayHello()
		8: 0, 0, 0, 1, 0, 0, 0, 0, 

	Klient:
		bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient2
		podajLiczbe=0
		sayHello=Hello world !!!
		bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient2
		podajLiczbe=1
		sayHello=Hello world !!!
		bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient2
		podajLiczbe=2
		sayHello=Hello world !!!
		bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient2
		podajLiczbe=3
		sayHello=Hello world !!!

	Serwer: Java
		podajLiczbe(), 4
		podajLiczbe(), 5
		podajLiczbe(), 6


	Klient: TCL
		#kons_font 16
		lappend auto_path ../combat/combat-tcl-0.7.4; package re combat
		  #% 0.7

		source Hello3.tcl
		  #% 1
		combat::ir add $_ir_Hello3
		  #% 
		  # dodajemy wpis do (local) Interface Repository

		set f [open {Hello.IOR} "r"]; set ior [read $f]; close $f
		  #% 
		  # tu powinna byc sciezka do pliku ior utworzonego przez serwer !!

		set m [corba::string_to_object $ior]
		  #% _combat_obj_1
		  # mozna wywolywac metody na rzecz ob. Corby $m ...

		$m podajLiczbe
		  #% 6
		  #% 5
		  #% 4


	 Serwer: TCL

		bartek@laptop:~/TAS/TematC/TCL/Hello_Tcl$ ./tclkit konsola2c.tcl ser.tcl
		obj=helloWorld0
		poa=::Combat::PortableServer::rootPOA0
		ref=_combat_obj_1
		HelloWorld IOR = IOR:01666f6f1800000049444c3a48656c6c6f417070322f48656c6c6f3a312e3000020000000000000034000000010102660e0000004b6f6d7075746572476e6f6d610072cb120000002f313434383238363033302f333736322a31666f00000000010000002400000001666f6f01000000010000001400000001666f6f01000105000000000901010000000000


	lappend auto_path ../combat/combat-tcl-0.7.4
	package require combat
	  #% 0.7

corba::init

source Hello3.tcl
combat::ir add $_ir_Hello3

set obj [HelloWorld #auto]
puts "obj=$obj"
  #% 

### POA -------------------------------------------------------

set poa [corba::resolve_initial_references "RootPOA"]
set mgr [$poa the_POAManager]
puts "poa=$poa"

#set mypoa [$poa create_POA MyPOA $mgr {RETAIN USER_ID}]
#set oid [$poa activate_object $obj]
#set ref [$poa id_to_reference $oid]

set ref [$poa servant_to_reference $obj]
puts "ref=$ref"

set ior [corba::object_to_string $ref]
set f [open {Hello.IOR} "w"]; puts $f $ior; close $f
puts "HelloWorld IOR = $ior"
  #% 

$mgr activate
  # od tego momentu serwer zaczyna obslugiwac zadania IIOP
  #% 

### -----------------------------------------------------------

vwait nieskonczenie
  # na uzytek uruchamiania przez "tclkit ser.tcl &"


 Klient: Java

	bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient2
	podajLiczbe=0
	sayHello=Jak sie masz ???
	bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient2
	podajLiczbe=1
	sayHello=Jak sie masz ???
	bartek@laptop:~/TAS/TematC/Java/Hello_Java$ java HelloClient2
	podajLiczbe=2
	sayHello=Jak sie masz ???

	Serwer: TCL
	jak wy¿ej

	Klient: TCL

	#kons_font 16
	lappend auto_path ../combat/combat-tcl-0.7.4; package re combat
	  #% 0.7

	source Hello3.tcl
	combat::ir add $_ir_Hello3
	  # dodajemy wpis do (local) Interface Repository

	set f [open {Hello.IOR} "r"]; set ior [read $f]; close $f
	  # tu powinna byc sciezka do pliku ior utworzonego przez serwer !!

	set m [corba::string_to_object $ior]
	  # mozna wywolywac metody na rzecz ob. Corby $m ...

	  #% _combat_obj_1
	$m podajLiczbe
	  #% 5
	  #% 4
	  #% 3




}
