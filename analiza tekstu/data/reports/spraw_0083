przedmiot TAS temat D nr_indeksu 396316 liczba_pkt 2 



Zadanie 40 -------------------------------------
Zaprogramuj aplikacje SOAP z metod? "pomnozRazy2" mono??c? i zwracaj?c? ci?g liczb float dowolnej d?ugoœci;
klienci SOAP: 2 klientów: gsoap i tclsoap
serwer SOAP: dowolny (najproœciej tclsoap)
Wstaw do sprawozdania tak?e komunikaty SOAP wysy?ane/ odbierane przez klienta.

#include  "qqqSoap.nsmap"
#include  <stdio.h>

int  main()  
{  
      struct  soap  soap;  
      soap_init(&soap);  //  initialize  runtime  environment  
      
      struct  ns1__razyDwaRequest  ar;
      struct  ns1__razyDwaResults  ar2;
      
      //  przygotowanie  danych  wejœciowych  ...
      const  int  dlugosc=55;
      ar.par1=  soap_malloc(&soap,  dlugosc*sizeof(float));  
            //  dane  tak  alokowane  beda  automatycznie  zwalniane  przy  soap_end()
      ar.__sizepar1  =  dlugosc;
      int  i;
      for(i=0;  i<dlugosc;  i++)  ar.par1[i]=  i+1;

      //  wywo?anie  operacji  ...
      //  -  adres  serwera : "http://localhost:8015/soap/qqq/go"      
      if(  soap_call___ns1__razyDwa(&soap,  
                  NULL,  NULL,  &ar,  &ar2)  !=SOAP_OK  )  {
              soap_print_fault(&soap,  stderr);
          }

      //  wyœwietlenie  argumentu  i  wyniku:
      int  d;
      printf("argument:\n");  d=  ar.__sizepar1;
      for(i=0;  i<d;  i++)  printf("%d  ",  ar.par1[i]);  printf("\n");
      printf("wynik:\n");  d=  ar2.__sizerazyDwaResult;
      for(i=0;  i<d;  i++)  printf("%d  ",  ar2.razyDwaResult[i]);  printf("\n");

      //  zwalnianie  pamieci  i  inne  ...
      soap_end(&soap);  //  clean  up  and  remove  deserialized  data  
      soap_done(&soap);  //  detach  environment  (last  use  and  no  longer  in  scope)
      
      return  0;
}

argument:
1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  
wynik:
2  4  6  8  10  12  14  16  18  20  22  24  26  28  30  32  34  36  38  40  42  44  46  48  50  52  54  56  58  60  62  64  66  68  70  72  74  76  78  80  82  84  86  88  90  92  94  96  98  100  102  104  106  108  110  

Zadanie 41 -------------------------------------
Zaprogramuj WebSerwis z metod? "pomnozDwieMacierze" mno??c? dwie podane macierze (o dowolnych wymiarach)
i zwracajac? wynik w postaci macierzy.
serwer: gsoap; wygenerowany plik wsdl ma byc udost?pniony klientom!
klient: java/axis, pieniek wygenerowany aoutomatycznie z pliku wsdl,
wyprobuj takze klienta tclsoap (bez wsparcia wsdl!)

Plik  q.h:
//gsoap  ns  service  name:  qqq
//gsoap  ns  service  namespace:  qqq

//gsoap  ns  service  style:  rpc
//gsoap  ns  service  encoding:  encoded

struct  t_seq  {
    int  *__ptr;  
    int  __size;
};

struct  t_Macierz  {
    struct  t_seq  data;  
    int  wie,kol;
};

struct  ns__razyMacierzResponse  {
	struct  t_Macierz*  return_;
};

int  ns__razyMacierz(  struct  t_Macierz  mat1,  struct  t_Macierz  mat2,  struct  ns__razyMacierzResponse*  return_  );


plik  q.c

#include  "qqq.nsmap"
    //  ten  plik  wlacza  tez  inne  pliki  nag?ówkowe!

int  main()  {
    struct  soap  soap;
    soap_init(&soap);

    int  b=soap_bind(&soap,  NULL,  10000,  100);  
          //  10000  -nr  portu  na  ktorym  serwer  czeka  na  klientow
    if(b<0)  {soap_print_fault(&soap,  stderr);  soap_done(&soap);  exit(1);}

    while  (1)  {
        soap_accept(&soap);  //  czeka  na  soap  msg
        soap_serve(&soap);  //  obsluga  klienta
            //  UWAGA:  mo?na  w  tym  miejscu  tworzyc  w?tek  POSIX  i  przekazywa?  mu  obs?ug?  klienta  !!!
        soap_end(&soap);  //  zwalniani  pamieci
        printf(".");  fflush(stdout);
    }

    return  0;
}

int  ns__razyMacierz(  struct  soap*  soap,  struct  t_Macierz  mat1,  struct  t_Macierz  mat2,  struct  ns__razyMacierzResponse*  return_  )
{    
    int  i,j,k;
    int  d  =  mat1.wie  *  mat2.kol;
    
    return_->return_  =  soap_malloc(soap,  sizeof(struct  t_Macierz));

    return_->return_->wie  =  mat1.wie;
    return_->return_->kol  =  mat2.kol;

    return_->return_->data.__ptr  =  soap_malloc(soap,  d*sizeof(int));
    return_->return_->data.__size  =  d;

    printf("serwer/dbg:  argument:\n");
    for(  i  =  0;  i  <  mat1.wie;  i++  )  {
	    for(  j  =  0;  j  <  mat2.kol;  j++  )  {
                return_->return_->data.__ptr[  i  *  mat2.kol  +  j  ]  =  0;  

                for(  k  =  0;  k  <  mat1.kol;  k++  )  {
                        return_->return_->data.__ptr[  i  *  mat2.kol  +  j  ]  +=  
                                mat1.data.__ptr[  i  *  mat1.kol  +  k  ]  *  mat2.data.__ptr[  k  *  mat2.kol  +  j  ]  ;
                }
        }
    }

    return  SOAP_OK;
}

plik  k.java:
import  qqq_pkg.*;
import  java.util.*;

public  class  k
{
    public  static  void  main(String  args[])
    {
          try  {
	qqq_pkg.QqqLocator  loc  =  new  qqq_pkg.QqqLocator();
	
	int[]  tab  =  new  int[9];
	for(  int  i  =  0;  i  <  9;  i++  )  tab[i]  =  1;
	int[]  tab3  =  new  int[9];
	for(  int  i  =  0;  i  <  9;  i++  )  tab3[i]  =  2;

	qqq_pkg.TMacierz  mac  =  new  qqq_pkg.TMacierz(  tab,  3,  3  );
	qqq_pkg.TMacierz  mac1  =  new  qqq_pkg.TMacierz(  tab3,  3,  3  );

	qqq_pkg.QqqPortType  obiekt  =  loc.getqqq(  );
	qqq_pkg.TMacierz  res  =  obiekt.razyMacierz(  mac,  mac1  );

	int[]  tab2  =  res.getData();
	int  k  =  res.getKol();
	int  w  =  res.getWie();
	
	System.out.printf(  "%d  %d\n",  k,  w  );
	for(  int  i  =  0;  i  <  k;  i++  )  {
		for(  int  j  =  0;  j  <  w;  j++  )
		{
			System.out.print(  tab2[  j  *  k  +  i  ]  );
			System.out.print(  "  "  );
		}

	                System.out.print(  "\n"  );
	}

          }  catch  (  Exception  e  )  {
	  System.err.print(  "error"  +  e.getMessage()  +  "\n"  );
          }
    }
}

W pliku qqqLocator.java  port domyœlny zosta? ustawiony na  10000

Zosta?y przemno?one dwie  3x3,  1. Jedna sk?ada?a si?  z  samych  2,  a  druga  z  samych  1.


Serwer:
pikachu@debian:~ Pulpit/TAS/D/41$  ./a.out  
serwer/dbg:  argument:  ###  oznacza  ze  serwer  przyj??  zadanie  i  wywo?a?  zdaln?  procedur?

Klient:
3  3
6  6  6  
6  6  6  
6  6  6  
}
